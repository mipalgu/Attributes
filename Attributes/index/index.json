{"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/attributes\/gettingstarted","title":"Getting Started","type":"article"},{"path":"\/documentation\/attributes\/attributetypes","title":"Attribute Types","type":"article"},{"path":"\/documentation\/attributes\/validators","title":"Validators","type":"article"},{"path":"\/documentation\/attributes\/triggers","title":"Triggers","type":"article"},{"path":"\/documentation\/attributes\/creatingschemas","title":"Creating Schemas","type":"article"},{"title":"Attributes","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/attributes\/attribute\/block(_:)","title":"case block(BlockAttribute)","type":"case"},{"path":"\/documentation\/attributes\/attribute\/line(_:)-swift.enum.case","title":"case line(LineAttribute)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/attribute\/init(blockattribute:)","title":"init(blockAttribute: BlockAttribute)","type":"init"},{"path":"\/documentation\/attributes\/attribute\/init(lineattribute:)","title":"init(lineAttribute: LineAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/attribute\/blockattribute","title":"var blockAttribute: BlockAttribute","type":"property"},{"path":"\/documentation\/attributes\/attribute\/boolvalue","title":"var boolValue: Bool","type":"property"},{"path":"\/documentation\/attributes\/attribute\/codevalue","title":"var codeValue: String","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectionbools","title":"var collectionBools: [Bool]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectioncode","title":"var collectionCode: [String]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectioncomplex","title":"var collectionComplex: [[Label : Attribute]]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectiondisplay","title":"var collectionDisplay: ReadOnlyPath<Attribute, LineAttribute>?","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectionenumerablecollection","title":"var collectionEnumerableCollection: [Set<String>]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectionenumerated","title":"var collectionEnumerated: [String]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectionexpressions","title":"var collectionExpressions: [Expression]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectionfloats","title":"var collectionFloats: [Double]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectionintegers","title":"var collectionIntegers: [Int]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectionlines","title":"var collectionLines: [String]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectiontable","title":"var collectionTable: [[[LineAttribute]]]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectiontext","title":"var collectionText: [String]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/collectionvalue","title":"var collectionValue: [Attribute]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/complexfields","title":"var complexFields: [Field]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/complexvalue","title":"var complexValue: [Label : Attribute]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/enumerablecollectionvalidvalues","title":"var enumerableCollectionValidValues: Set<String>","type":"property"},{"path":"\/documentation\/attributes\/attribute\/enumerablecollectionvalue","title":"var enumerableCollectionValue: Set<String>","type":"property"},{"path":"\/documentation\/attributes\/attribute\/enumeratedvalidvalues","title":"var enumeratedValidValues: Set<String>","type":"property"},{"path":"\/documentation\/attributes\/attribute\/enumeratedvalue","title":"var enumeratedValue: String","type":"property"},{"path":"\/documentation\/attributes\/attribute\/expressionvalue","title":"var expressionValue: Expression","type":"property"},{"path":"\/documentation\/attributes\/attribute\/floatvalue","title":"var floatValue: Double","type":"property"},{"path":"\/documentation\/attributes\/attribute\/id-6hagc","title":"var id: Int","type":"property"},{"path":"\/documentation\/attributes\/attribute\/integervalue","title":"var integerValue: Int","type":"property"},{"path":"\/documentation\/attributes\/attribute\/isblock","title":"var isBlock: Bool","type":"property"},{"path":"\/documentation\/attributes\/attribute\/isline","title":"var isLine: Bool","type":"property"},{"path":"\/documentation\/attributes\/attribute\/lineattribute","title":"var lineAttribute: LineAttribute","type":"property"},{"path":"\/documentation\/attributes\/attribute\/linevalue","title":"var lineValue: String","type":"property"},{"path":"\/documentation\/attributes\/attribute\/strvalue","title":"var strValue: String?","type":"property"},{"path":"\/documentation\/attributes\/attribute\/tablevalue","title":"var tableValue: [[LineAttribute]]","type":"property"},{"path":"\/documentation\/attributes\/attribute\/textvalue","title":"var textValue: String","type":"property"},{"path":"\/documentation\/attributes\/attribute\/type","title":"var type: AttributeType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/attribute\/bool(_:)","title":"static func bool(Bool) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/code(_:language:)","title":"static func code(String, language: Language) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(_:type:display:)","title":"static func collection([Attribute], type: AttributeType, display: ReadOnlyPath<Attribute, LineAttribute>?) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(bools:)","title":"static func collection(bools: [Bool]) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(code:language:)","title":"static func collection(code: [String], language: Language) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(collection:type:display:)","title":"static func collection(collection: [[Attribute]], type: AttributeType, display: ReadOnlyPath<Attribute, LineAttribute>?) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(complex:layout:display:)","title":"static func collection(complex: [[Label : Attribute]], layout: [Field], display: ReadOnlyPath<Attribute, LineAttribute>?) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(enumerables:validvalues:display:)","title":"static func collection(enumerables: [Set<String>], validValues: Set<String>, display: ReadOnlyPath<Attribute, LineAttribute>?) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(enumerated:validvalues:display:)","title":"static func collection(enumerated: [String], validValues: Set<String>, display: ReadOnlyPath<Attribute, LineAttribute>?) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(expressions:language:)","title":"static func collection(expressions: [Expression], language: Language) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(floats:)","title":"static func collection(floats: [Double]) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(integers:)","title":"static func collection(integers: [Int]) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(lines:)","title":"static func collection(lines: [String]) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(tables:columns:display:)","title":"static func collection(tables: [[[LineAttribute]]], columns: [(name: Label, type: LineAttributeType)], display: ReadOnlyPath<Attribute, LineAttribute>?) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/collection(text:)","title":"static func collection(text: [String]) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/complex(_:layout:)","title":"static func complex([Label : Attribute], layout: [Field]) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/enumerablecollection(_:validvalues:)","title":"static func enumerableCollection(Set<String>, validValues: Set<String>) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/enumerated(_:validvalues:)","title":"static func enumerated(String, validValues: Set<String>) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/expression(_:language:)","title":"static func expression(Expression, language: Language) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/float(_:)","title":"static func float(Double) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/integer(_:)","title":"static func integer(Int) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/line(_:)-swift.type.method","title":"static func line(String) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/table(_:columns:)","title":"static func table([[LineAttribute]], columns: [(name: Label, type: LineAttributeType)]) -> Attribute","type":"method"},{"path":"\/documentation\/attributes\/attribute\/text(_:)","title":"static func text(String) -> Attribute","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/attribute\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/attributes\/attribute\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/attribute\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/attributes\/attribute\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/attribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/attribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/attribute\/id-2edn5","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/attributes\/attribute\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/attribute\/xminame-21s9p","title":"var xmiName: String?","type":"property"},{"path":"\/documentation\/attributes\/attribute\/xminame-48h4m","title":"var xmiName: String?","type":"property"}],"path":"\/documentation\/attributes\/attribute\/xmiconvertible-implementations","title":"XMIConvertible Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/attribute","title":"Attribute","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributetype\/block(_:)","title":"case block(BlockAttributeType)","type":"case"},{"path":"\/documentation\/attributes\/attributetype\/line(_:)","title":"case line(LineAttributeType)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributetype\/defaultvalue","title":"var defaultValue: Attribute","type":"property"},{"path":"\/documentation\/attributes\/attributetype\/isblock","title":"var isBlock: Bool","type":"property"},{"path":"\/documentation\/attributes\/attributetype\/isline","title":"var isLine: Bool","type":"property"},{"path":"\/documentation\/attributes\/attributetype\/isrecursive","title":"var isRecursive: Bool","type":"property"},{"path":"\/documentation\/attributes\/attributetype\/istable","title":"var isTable: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributetype\/bool","title":"static var bool: AttributeType","type":"property"},{"path":"\/documentation\/attributes\/attributetype\/float","title":"static var float: AttributeType","type":"property"},{"path":"\/documentation\/attributes\/attributetype\/integer","title":"static var integer: AttributeType","type":"property"},{"path":"\/documentation\/attributes\/attributetype\/line","title":"static var line: AttributeType","type":"property"},{"path":"\/documentation\/attributes\/attributetype\/text","title":"static var text: AttributeType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributetype\/code(language:)","title":"static func code(language: Language) -> AttributeType","type":"method"},{"path":"\/documentation\/attributes\/attributetype\/collection(type:)","title":"static func collection(type: AttributeType) -> AttributeType","type":"method"},{"path":"\/documentation\/attributes\/attributetype\/complex(layout:)","title":"static func complex(layout: [Field]) -> AttributeType","type":"method"},{"path":"\/documentation\/attributes\/attributetype\/enumerablecollection(validvalues:)","title":"static func enumerableCollection(validValues: Set<String>) -> AttributeType","type":"method"},{"path":"\/documentation\/attributes\/attributetype\/enumerated(validvalues:)","title":"static func enumerated(validValues: Set<String>) -> AttributeType","type":"method"},{"path":"\/documentation\/attributes\/attributetype\/expression(language:)","title":"static func expression(language: Language) -> AttributeType","type":"method"},{"path":"\/documentation\/attributes\/attributetype\/table(columns:)","title":"static func table(columns: [(name: String, type: LineAttributeType)]) -> AttributeType","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/attributes\/attributetype\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/attributes\/attributetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/attributetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributetype\/xminame-7b7ql","title":"var xmiName: String?","type":"property"},{"path":"\/documentation\/attributes\/attributetype\/xminame-7bthv","title":"var xmiName: String?","type":"property"}],"path":"\/documentation\/attributes\/attributetype\/xmiconvertible-implementations","title":"XMIConvertible Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/attributetype","title":"AttributeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/code(_:language:)","title":"case code(String, language: Language)","type":"case"},{"path":"\/documentation\/attributes\/blockattribute\/collection(_:display:type:)","title":"case collection([Attribute], display: ReadOnlyPath<Attribute, LineAttribute>?, type: AttributeType)","type":"case"},{"path":"\/documentation\/attributes\/blockattribute\/complex(_:layout:)","title":"case complex([Label : Attribute], layout: [Field])","type":"case"},{"path":"\/documentation\/attributes\/blockattribute\/enumerablecollection(_:validvalues:)","title":"case enumerableCollection(Set<String>, validValues: Set<String>)","type":"case"},{"path":"\/documentation\/attributes\/blockattribute\/table(_:columns:)","title":"case table([[LineAttribute]], columns: [BlockAttributeType.TableColumn])","type":"case"},{"path":"\/documentation\/attributes\/blockattribute\/text(_:)","title":"case text(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/codevalue","title":"var codeValue: String","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectionbools","title":"var collectionBools: [Bool]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectioncode","title":"var collectionCode: [String]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectioncomplex","title":"var collectionComplex: [[Label : Attribute]]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectiondisplay","title":"var collectionDisplay: ReadOnlyPath<Attribute, LineAttribute>?","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectionenumerablecollection","title":"var collectionEnumerableCollection: [Set<String>]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectionenumerated","title":"var collectionEnumerated: [String]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectionexpressions","title":"var collectionExpressions: [Expression]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectionfloats","title":"var collectionFloats: [Double]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectionintegers","title":"var collectionIntegers: [Int]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectionlines","title":"var collectionLines: [String]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectiontable","title":"var collectionTable: [[[LineAttribute]]]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectiontext","title":"var collectionText: [String]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/collectionvalue","title":"var collectionValue: [Attribute]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/complexfields","title":"var complexFields: [Field]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/complexvalue","title":"var complexValue: [Label : Attribute]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/enumerablecollectionvalidvalues","title":"var enumerableCollectionValidValues: Set<String>","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/enumerablecollectionvalue","title":"var enumerableCollectionValue: Set<String>","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/id-4oh8g","title":"var id: Int","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/strvalue","title":"var strValue: String?","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/tablevalue","title":"var tableValue: [[LineAttribute]]","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/textvalue","title":"var textValue: String","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/type","title":"var type: BlockAttributeType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/type","title":"case type","type":"case"},{"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/value","title":"case value","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/halfwidthcornerquoted","title":"var halfWidthCornerQuoted: String","type":"property"}],"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/blockattribute\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/blockattribute\/codingkeys","title":"BlockAttribute.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/attributes\/blockattribute\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/attributes\/blockattribute\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/blockattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/id-qiu5","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/attributes\/blockattribute\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattribute\/xminame-4jf1k","title":"var xmiName: String?","type":"property"},{"path":"\/documentation\/attributes\/blockattribute\/xminame-95z0g","title":"var xmiName: String?","type":"property"}],"path":"\/documentation\/attributes\/blockattribute\/xmiconvertible-implementations","title":"XMIConvertible Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/blockattribute","title":"BlockAttribute","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattributetype\/tablecolumn\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/attributes\/blockattributetype\/tablecolumn\/init(name:type:)","title":"init(name: String, type: LineAttributeType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattributetype\/tablecolumn\/name","title":"var name: Label","type":"property"},{"path":"\/documentation\/attributes\/blockattributetype\/tablecolumn\/type","title":"var type: LineAttributeType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattributetype\/tablecolumn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/blockattributetype\/tablecolumn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/blockattributetype\/tablecolumn","title":"BlockAttributeType.TableColumn","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattributetype\/code(language:)","title":"case code(language: Language)","type":"case"},{"path":"\/documentation\/attributes\/blockattributetype\/collection(type:)","title":"case collection(type: AttributeType)","type":"case"},{"path":"\/documentation\/attributes\/blockattributetype\/complex(layout:)","title":"case complex(layout: [Field])","type":"case"},{"path":"\/documentation\/attributes\/blockattributetype\/enumerablecollection(validvalues:)","title":"case enumerableCollection(validValues: Set<String>)","type":"case"},{"path":"\/documentation\/attributes\/blockattributetype\/table(columns:)","title":"case table(columns: [BlockAttributeType.TableColumn])","type":"case"},{"path":"\/documentation\/attributes\/blockattributetype\/text","title":"case text","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattributetype\/defaultvalue","title":"var defaultValue: BlockAttribute","type":"property"},{"path":"\/documentation\/attributes\/blockattributetype\/isrecursive","title":"var isRecursive: Bool","type":"property"},{"path":"\/documentation\/attributes\/blockattributetype\/istable","title":"var isTable: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattributetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/attributes\/blockattributetype\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattributetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/attributes\/blockattributetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattributetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/blockattributetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/blockattributetype\/xminame-10thu","title":"var xmiName: String?","type":"property"},{"path":"\/documentation\/attributes\/blockattributetype\/xminame-7eac1","title":"var xmiName: String?","type":"property"}],"path":"\/documentation\/attributes\/blockattributetype\/xmiconvertible-implementations","title":"XMIConvertible Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/blockattributetype","title":"BlockAttributeType","type":"enum"},{"path":"\/documentation\/attributes\/code","title":"Code","type":"typealias"},{"path":"\/documentation\/attributes\/expression","title":"Expression","type":"typealias"},{"path":"\/documentation\/attributes\/label","title":"Label","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattribute\/bool(_:)","title":"case bool(Bool)","type":"case"},{"path":"\/documentation\/attributes\/lineattribute\/enumerated(_:validvalues:)","title":"case enumerated(String, validValues: Set<String>)","type":"case"},{"path":"\/documentation\/attributes\/lineattribute\/expression(_:language:)","title":"case expression(Expression, language: Language)","type":"case"},{"path":"\/documentation\/attributes\/lineattribute\/float(_:)","title":"case float(Double)","type":"case"},{"path":"\/documentation\/attributes\/lineattribute\/integer(_:)","title":"case integer(Int)","type":"case"},{"path":"\/documentation\/attributes\/lineattribute\/line(_:)","title":"case line(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattribute\/init(type:value:)","title":"init?(type: LineAttributeType, value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattribute\/boolvalue","title":"var boolValue: Bool","type":"property"},{"path":"\/documentation\/attributes\/lineattribute\/enumeratedvalidvalues","title":"var enumeratedValidValues: Set<String>","type":"property"},{"path":"\/documentation\/attributes\/lineattribute\/enumeratedvalue","title":"var enumeratedValue: String","type":"property"},{"path":"\/documentation\/attributes\/lineattribute\/expressionvalue","title":"var expressionValue: Expression","type":"property"},{"path":"\/documentation\/attributes\/lineattribute\/floatvalue","title":"var floatValue: Double","type":"property"},{"path":"\/documentation\/attributes\/lineattribute\/id-4unbb","title":"var id: Int","type":"property"},{"path":"\/documentation\/attributes\/lineattribute\/integervalue","title":"var integerValue: Int","type":"property"},{"path":"\/documentation\/attributes\/lineattribute\/linevalue","title":"var lineValue: String","type":"property"},{"path":"\/documentation\/attributes\/lineattribute\/strvalue","title":"var strValue: String","type":"property"},{"path":"\/documentation\/attributes\/lineattribute\/type","title":"var type: LineAttributeType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattribute\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/attributes\/lineattribute\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattribute\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/attributes\/lineattribute\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/lineattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattribute\/id-2plkp","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/attributes\/lineattribute\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattribute\/xminame-2f4gh","title":"var xmiName: String?","type":"property"},{"path":"\/documentation\/attributes\/lineattribute\/xminame-74h85","title":"var xmiName: String?","type":"property"}],"path":"\/documentation\/attributes\/lineattribute\/xmiconvertible-implementations","title":"XMIConvertible Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/lineattribute","title":"LineAttribute","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattributetype\/bool","title":"case bool","type":"case"},{"path":"\/documentation\/attributes\/lineattributetype\/enumerated(validvalues:)","title":"case enumerated(validValues: Set<String>)","type":"case"},{"path":"\/documentation\/attributes\/lineattributetype\/expression(language:)","title":"case expression(language: Language)","type":"case"},{"path":"\/documentation\/attributes\/lineattributetype\/float","title":"case float","type":"case"},{"path":"\/documentation\/attributes\/lineattributetype\/integer","title":"case integer","type":"case"},{"path":"\/documentation\/attributes\/lineattributetype\/line","title":"case line","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattributetype\/defaultvalue","title":"var defaultValue: LineAttribute","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattributetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/attributes\/lineattributetype\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattributetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/attributes\/lineattributetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattributetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/lineattributetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineattributetype\/xminame-107pl","title":"var xmiName: String?","type":"property"},{"path":"\/documentation\/attributes\/lineattributetype\/xminame-54hlc","title":"var xmiName: String?","type":"property"}],"path":"\/documentation\/attributes\/lineattributetype\/xmiconvertible-implementations","title":"XMIConvertible Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/lineattributetype","title":"LineAttributeType","type":"enum"},{"title":"Paths","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/anypath\/init(_:)","title":"init<P>(P)","type":"init"},{"path":"\/documentation\/attributes\/anypath\/init(optional:)","title":"init<P>(optional: P)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/anypath\/ancestors","title":"let ancestors: [AnyPath<Root>]","type":"property"},{"path":"\/documentation\/attributes\/anypath\/isoptional","title":"let isOptional: Bool","type":"property"},{"path":"\/documentation\/attributes\/anypath\/partialkeypath","title":"let partialKeyPath: PartialKeyPath<Root>","type":"property"},{"path":"\/documentation\/attributes\/anypath\/targettype","title":"let targetType: Any.Type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/anypath\/appending(_:)","title":"func appending<Value>(AnyPath<Value>) -> AnyPath<Root>?","type":"method"},{"path":"\/documentation\/attributes\/anypath\/changeroot(path:)","title":"func changeRoot<Prefix>(path: Prefix) -> AnyPath<Prefix.Root>","type":"method"},{"path":"\/documentation\/attributes\/anypath\/hasvalue(_:)","title":"func hasValue(Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anypath\/ischild(of:)-1kizp","title":"func isChild(of: PartialKeyPath<Root>) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anypath\/ischild(of:)-8cf8e","title":"func isChild<Path>(of: Path) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anypath\/ischild(of:)-9t5ws","title":"func isChild(of: AnyPath<Root>) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anypath\/isnil(_:)","title":"func isNil(Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anypath\/isparent(of:)-48xw7","title":"func isParent(of: AnyPath<Root>) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anypath\/isparent(of:)-bzjj","title":"func isParent<Path>(of: Path) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anypath\/issame(as:)-3j1ey","title":"func isSame<Path>(as: Path) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anypath\/issame(as:)-5knhs","title":"func isSame(as: PartialKeyPath<Root>) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anypath\/issame(as:)-77aid","title":"func isSame(as: AnyPath<Root>) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anypath\/value(_:)","title":"func value(Root) -> Any","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/anypath\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/attributes\/anypath\/halfwidthcornerquoted","title":"var halfWidthCornerQuoted: String","type":"property"}],"path":"\/documentation\/attributes\/anypath\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/anypath\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/attributes\/anypath\/==(_:_:)","title":"static func == <Root>(AnyPath<Root>, AnyPath<Root>) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/anypath\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/anypath\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/attributes\/anypath\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/anypath","title":"AnyPath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/anysearchablepath\/init(_:)","title":"init<Base>(Base)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/anysearchablepath\/isancestororsame(of:in:)","title":"func isAncestorOrSame(of: AnyPath<Root>, in: Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anysearchablepath\/paths(in:)","title":"func paths(in: Root) -> [Path<Root, Value>]","type":"method"}],"path":"\/documentation\/attributes\/anysearchablepath","title":"AnySearchablePath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/collectionsearchpath\/init(_:)","title":"init(Path<Root, Collection>)","type":"init"},{"path":"\/documentation\/attributes\/collectionsearchpath\/init(collectionpath:elementpath:)","title":"init(collectionPath: Path<Root, Collection>, elementPath: Path<Collection.Element, Value>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/collectionsearchpath\/appending(path:)","title":"func appending<Path>(path: Path) -> AnySearchablePath<Root, Path.Value>","type":"method"},{"path":"\/documentation\/attributes\/collectionsearchpath\/isancestororsame(of:in:)","title":"func isAncestorOrSame(of: AnyPath<Root>, in: Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/collectionsearchpath\/paths(in:)","title":"func paths(in: Root) -> [Path<Root, Value>]","type":"method"},{"path":"\/documentation\/attributes\/collectionsearchpath\/tonewroot(path:)","title":"func toNewRoot<Path>(path: Path) -> AnySearchablePath<Path.Root, Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/collectionsearchpath\/root","title":"CollectionSearchPath.Root","type":"typealias"},{"path":"\/documentation\/attributes\/collectionsearchpath\/value","title":"CollectionSearchPath.Value","type":"typealias"}],"path":"\/documentation\/attributes\/collectionsearchpath","title":"CollectionSearchPath","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/convertiblesearchablepath\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/convertiblesearchablepath\/appending(path:)","title":"func appending<Path>(path: Path) -> AnySearchablePath<Self.Root, Path.Value>","type":"method"},{"path":"\/documentation\/attributes\/convertiblesearchablepath\/tonewroot(path:)","title":"func toNewRoot<Path>(path: Path) -> AnySearchablePath<Path.Root, Self.Value>","type":"method"}],"path":"\/documentation\/attributes\/convertiblesearchablepath","title":"ConvertibleSearchablePath","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/init(_:)-1x1et","title":"init(Value.Type)","type":"init"},{"path":"\/documentation\/attributes\/path\/init(_:)-81igv","title":"init(Value.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/ancestors","title":"var ancestors: [AnyPath<Root>]","type":"property"},{"path":"\/documentation\/attributes\/path\/path","title":"var path: WritableKeyPath<Root, Value>","type":"property"},{"path":"\/documentation\/attributes\/path\/readonly","title":"var readOnly: ReadOnlyPath<Root, Value>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/appending(path:)-4hhn8","title":"func appending<NewValue>(path: Path<Value, NewValue>) -> Path<Root, NewValue>","type":"method"},{"path":"\/documentation\/attributes\/path\/changeroot(path:)","title":"func changeRoot<Prefix>(path: Prefix) -> Path<Prefix.Root, Value>","type":"method"},{"path":"\/documentation\/attributes\/path\/each(_:)-389z7","title":"func each<T>((Value.Index, Path<Root, Value.Element>) -> T) -> (Root) -> [T]","type":"method"},{"path":"\/documentation\/attributes\/path\/each(_:)-4ae6z","title":"func each<T>((Value.Index, Path<Root, Value.Element>) -> T) -> (Root) -> [T]","type":"method"},{"path":"\/documentation\/attributes\/path\/isnil(_:)","title":"func isNil(Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/path\/trigger(builder:)","title":"func trigger(builder: (WhenChanged<Path<Root, Value>, IdentityTrigger<Root>>) -> AnyTrigger<Root>) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/path\/validate(builder:)","title":"func validate(builder: (ValidationPath<Path<Root, Value>>) -> AnyValidator<Root>) -> AnyValidator<Root>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/subscript(dynamicmember:)-1rk7b","title":"subscript<AppendedValue>(dynamicMember _: WritableKeyPath<Value, AppendedValue>) -> Path<Root, AppendedValue>","type":"subscript"},{"path":"\/documentation\/attributes\/path\/subscript(dynamicmember:)-26qwf","title":"subscript<AppendedValue>(dynamicMember _: KeyPath<Value, AppendedValue>) -> ReadOnlyPath<Root, AppendedValue>","type":"subscript"},{"path":"\/documentation\/attributes\/path\/subscript(dynamicmember:)-4va57","title":"subscript<AppendedValue>(dynamicMember _: WritableKeyPath<Value, AppendedValue>) -> Path<Root, AppendedValue>","type":"subscript"},{"path":"\/documentation\/attributes\/path\/subscript(dynamicmember:)-8inbv","title":"subscript<AppendedValue>(dynamicMember _: KeyPath<Value, AppendedValue>) -> ReadOnlyPath<Root, AppendedValue>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/appending(path:)-9ptu4","title":"func appending<Path>(path: Path) -> AnySearchablePath<Root, Path.Value>","type":"method"},{"path":"\/documentation\/attributes\/path\/tonewroot(path:)","title":"func toNewRoot<Path>(path: Path) -> AnySearchablePath<Path.Root, Value>","type":"method"}],"path":"\/documentation\/attributes\/path\/convertiblesearchablepath-implementations","title":"ConvertibleSearchablePath Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/attributes\/path\/==(_:_:)-6xjcy","title":"static func == (Path<Root, Value>, Path<Root, Value>) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/path\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/attributes\/path\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/==(_:_:)-6tmhz","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/keypath","title":"var keyPath: KeyPath<Self.Root, Self.Value>","type":"property"}],"path":"\/documentation\/attributes\/path\/pathprotocol-implementations","title":"PathProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/fullpath","title":"var fullPath: [AnyPath<Self.Root>]","type":"property"}],"path":"\/documentation\/attributes\/path\/readonlypathprotocol-implementations","title":"ReadOnlyPathProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/path\/isancestororsame(of:in:)","title":"func isAncestorOrSame(of: AnyPath<Root>, in: Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/path\/paths(in:)","title":"func paths(in: Root) -> [Path<Root, Value>]","type":"method"}],"path":"\/documentation\/attributes\/path\/searchablepath-implementations","title":"SearchablePath Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/path","title":"Path","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathcontainer\/path-swift.associatedtype","title":"Path","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathcontainer\/path-swift.property","title":"var path: Self.Path","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathcontainer\/validate(builder:)","title":"func validate(builder: (ValidationPath<Self.Path>) -> AnyValidator<Self>) throws","type":"method"}],"path":"\/documentation\/attributes\/pathcontainer","title":"PathContainer","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathprotocol\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathprotocol\/root","title":"Root","type":"associatedtype"},{"path":"\/documentation\/attributes\/pathprotocol\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathprotocol\/path","title":"var path: WritableKeyPath<Self.Root, Self.Value>","type":"property"},{"path":"\/documentation\/attributes\/pathprotocol\/readonly","title":"var readOnly: ReadOnlyPath<Self.Root, Self.Value>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathprotocol\/changeroot(path:)","title":"func changeRoot<Prefix>(path: Prefix) -> Path<Prefix.Root, Self.Value>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathprotocol\/subscript(_:)-2byff","title":"subscript(Self.Value.Index) -> Path<Self.Root, Self.Value.Element>","type":"subscript"},{"path":"\/documentation\/attributes\/pathprotocol\/subscript(_:)-8abq8","title":"subscript(Self.Value.Key) -> Path<Self.Root, Self.Value.Value?>","type":"subscript"},{"path":"\/documentation\/attributes\/pathprotocol\/subscript(_:)-9nknm","title":"subscript(Self.Value.Index) -> Path<Self.Root, Self.Value.Element>","type":"subscript"}],"path":"\/documentation\/attributes\/pathprotocol","title":"PathProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypath\/init(_:)-5kx87","title":"init(Value.Type)","type":"init"},{"path":"\/documentation\/attributes\/readonlypath\/init(_:)-5lkvs","title":"init(Value.Type)","type":"init"},{"path":"\/documentation\/attributes\/readonlypath\/init(path:)","title":"init<P>(path: P)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypath\/ancestors","title":"var ancestors: [AnyPath<Root>]","type":"property"},{"path":"\/documentation\/attributes\/readonlypath\/keypath","title":"var keyPath: KeyPath<Root, Value>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypath\/isnil(_:)","title":"func isNil(Root) -> Bool","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypath\/subscript(dynamicmember:)-3x4xl","title":"subscript<AppendedValue>(dynamicMember _: KeyPath<Value, AppendedValue>) -> ReadOnlyPath<Root, AppendedValue>","type":"subscript"},{"path":"\/documentation\/attributes\/readonlypath\/subscript(dynamicmember:)-9wijj","title":"subscript<AppendedValue>(dynamicMember _: KeyPath<Value, AppendedValue>) -> ReadOnlyPath<Root, AppendedValue>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypath\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/attributes\/readonlypath\/==(_:_:)","title":"static func == (ReadOnlyPath<Root, Value>, ReadOnlyPath<Root, Value>) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/readonlypath\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypath\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/attributes\/readonlypath\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypath\/fullpath","title":"var fullPath: [AnyPath<Self.Root>]","type":"property"}],"path":"\/documentation\/attributes\/readonlypath\/readonlypathprotocol-implementations","title":"ReadOnlyPathProtocol Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/readonlypath","title":"ReadOnlyPath","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypathcontainer\/path-swift.associatedtype","title":"Path","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypathcontainer\/path-swift.property","title":"var path: Self.Path","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypathcontainer\/validate(builder:)","title":"func validate(builder: (Validator<Self.Path>) -> AnyValidator<Self>) throws","type":"method"}],"path":"\/documentation\/attributes\/readonlypathcontainer","title":"ReadOnlyPathContainer","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypathprotocol\/root","title":"Root","type":"associatedtype"},{"path":"\/documentation\/attributes\/readonlypathprotocol\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypathprotocol\/ancestors","title":"var ancestors: [AnyPath<Self.Root>]","type":"property"},{"path":"\/documentation\/attributes\/readonlypathprotocol\/fullpath","title":"var fullPath: [AnyPath<Self.Root>]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/attributes\/pathprotocol\/keypath","title":"var keyPath: KeyPath<Self.Root, Self.Value>","type":"property"}],"title":"PathProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/readonlypathprotocol\/keypath","title":"var keyPath: KeyPath<Self.Root, Self.Value>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypathprotocol\/isnil(_:)","title":"func isNil(Self.Root) -> Bool","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/attributes\/readonlypathprotocol\/subscript(_:)-2f3np","title":"subscript(Self.Value.Index) -> ReadOnlyPath<Self.Root, Self.Value.Element>","type":"subscript"},{"path":"\/documentation\/attributes\/readonlypathprotocol\/subscript(_:)-4kd1l","title":"subscript(Self.Value.Index) -> ReadOnlyPath<Self.Root, Self.Value.Element>","type":"subscript"},{"path":"\/documentation\/attributes\/readonlypathprotocol\/subscript(_:)-6vjh8","title":"subscript(Self.Value.Key) -> ReadOnlyPath<Self.Root, Self.Value.Value?>","type":"subscript"},{"path":"\/documentation\/attributes\/readonlypathprotocol\/subscript(_:)-6vmm6","title":"subscript(Self.Value.Index) -> ReadOnlyPath<Self.Root, Self.Value.Element>","type":"subscript"},{"path":"\/documentation\/attributes\/readonlypathprotocol\/subscript(_:)-els","title":"subscript(Self.Value.Index) -> ReadOnlyPath<Self.Root, Self.Value.Element>","type":"subscript"}],"path":"\/documentation\/attributes\/readonlypathprotocol","title":"ReadOnlyPathProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/searchablepath\/root","title":"Root","type":"associatedtype"},{"path":"\/documentation\/attributes\/searchablepath\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/searchablepath\/isancestororsame(of:in:)","title":"func isAncestorOrSame(of: AnyPath<Self.Root>, in: Self.Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/searchablepath\/paths(in:)","title":"func paths(in: Self.Root) -> [Path<Self.Root, Self.Value>]","type":"method"}],"path":"\/documentation\/attributes\/searchablepath","title":"SearchablePath","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpath\/init(path:)","title":"init(path: ValidationPath<P>.PathType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpath\/path","title":"let path: ValidationPath<P>.PathType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpath\/each(builder:)-1ppy8","title":"func each(builder: (ValidationPath<P>.Value.Index, ValidationPath<ReadOnlyPath<ValidationPath<P>.Root, ValidationPath<P>.Value.Element>>) -> AnyValidator<ValidationPath<P>.Root>) -> ValidationPath<P>.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/each(builder:)-4yci7","title":"func each(builder: (ValidationPath<P>.Value.Index, ValidationPath<ReadOnlyPath<ValidationPath<P>.Root, ValidationPath<P>.Value.Element>>) -> AnyValidator<ValidationPath<P>.Root>) -> ValidationPath<P>.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/each(builder:)-6xnl7","title":"func each(builder: (ValidationPath<P>.Value.Index, ValidationPath<ReadOnlyPath<ValidationPath<P>.Root, ValidationPath<P>.Value.Element>>) -> AnyValidator<ValidationPath<P>.Root>) -> ValidationPath<P>.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/each(builder:)-81vsg","title":"func each(builder: (P.Value.Index, ValidationPath<ReadOnlyPath<ValidationPath<P>.Root, ValidationPath<P>.Value.Element>>) -> AnyValidator<ValidationPath<P>.Root>) -> Validator<ValidationPath<P>.PathType>","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/optional()","title":"func optional() -> OptionalValidator<P>","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/required()","title":"func required() -> RequiredValidator<P>","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/validate(builder:)","title":"func validate(builder: (ValidationPath<P>) -> AnyValidator<ValidationPath<P>.PathType.Root>) -> AnyValidator<ValidationPath<P>.PathType.Root>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpath\/subscript(dynamicmember:)-3ilmr","title":"subscript<AppendedValue>(dynamicMember _: KeyPath<P.Value, AppendedValue>) -> ValidationPath<ReadOnlyPath<P.Root, AppendedValue>>","type":"subscript"},{"path":"\/documentation\/attributes\/validationpath\/subscript(dynamicmember:)-4wzvn","title":"subscript<AppendedValue>(dynamicMember _: KeyPath<P.Value, AppendedValue>) -> ValidationPath<ReadOnlyPath<P.Root, AppendedValue>>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpath\/pathtype","title":"ValidationPath.PathType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpath\/alpha()","title":"func alpha() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/alphadash()","title":"func alphadash() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/alphafirst()","title":"func alphafirst() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/alphanumeric()","title":"func alphanumeric() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/alphaunderscore()","title":"func alphaunderscore() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/alphaunderscorefirst()","title":"func alphaunderscorefirst() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/between(min:max:)","title":"func between(min: Self.Value, max: Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/blacklist(_:)","title":"func blacklist(Set<String>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/empty()","title":"func empty() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/equals(_:)","title":"func equals(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/equalsfalse()","title":"func equalsFalse() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/equalstrue()","title":"func equalsTrue() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/greaterthan(_:)","title":"func greaterThan(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/greaterthanequal(_:)","title":"func greaterThanEqual(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/greylist(_:)","title":"func greyList(Set<String>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/if(_:then:)","title":"func `if`((Self.Value) -> Bool, then: () -> AnyValidator<Self.Root>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/if(_:then:else:)","title":"func `if`((Self.Value) -> Bool, then: () -> AnyValidator<Self.Root>, else: () -> AnyValidator<Self.Root>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/in(_:)-2vvue","title":"func `in`<P, S>(P) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/in(_:)-8c63v","title":"func `in`<P, S>(P) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/in(_:)-9fwb6","title":"func `in`(Set<Self.Value>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/in(_:transform:)","title":"func `in`<P, S, S2>(P, transform: (S) -> S2) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/length(_:)","title":"func length(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/lessthan(_:)","title":"func lessThan(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/lessthanequal(_:)","title":"func lessThanEqual(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/maxlength(_:)","title":"func maxLength(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/minlength(_:)","title":"func minLength(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/notempty()","title":"func notEmpty() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/notequals(_:)","title":"func notEquals(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/numeric()","title":"func numeric() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/unique(_:)","title":"func unique<S>((Self.Value) -> S) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpath\/whitelist(_:)","title":"func whitelist(Set<String>) -> Self.PushValidator","type":"method"}],"path":"\/documentation\/attributes\/validationpath\/validationpushprotocol-implementations","title":"ValidationPushProtocol Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/validationpath","title":"ValidationPath","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpathprotocol\/pathtype","title":"PathType","type":"associatedtype"},{"path":"\/documentation\/attributes\/validationpathprotocol\/pushvalidator","title":"PushValidator","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpathprotocol\/init(path:)","title":"init(path: Self.PathType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpathprotocol\/path","title":"var path: Self.PathType","type":"property"}],"path":"\/documentation\/attributes\/validationpathprotocol","title":"ValidationPathProtocol","type":"protocol"},{"title":"Properties","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/boolproperty\/init(label:validation:)","title":"init(label: String, validation: (ValidationPath<ReadOnlyPath<Attribute, Bool>>) -> AnyValidator<Attribute>)","type":"init"},{"path":"\/documentation\/attributes\/boolproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/boolproperty\/projectedvalue","title":"var projectedValue: BoolProperty","type":"property"},{"path":"\/documentation\/attributes\/boolproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"}],"path":"\/documentation\/attributes\/boolproperty","title":"BoolProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/codeproperty\/init(label:language:validation:)","title":"init(label: String, language: Language, validation: (ValidationPath<ReadOnlyPath<Attribute, Code>>) -> AnyValidator<Attribute>)","type":"init"},{"path":"\/documentation\/attributes\/codeproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/codeproperty\/projectedvalue","title":"var projectedValue: CodeProperty","type":"property"},{"path":"\/documentation\/attributes\/codeproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"}],"path":"\/documentation\/attributes\/codeproperty","title":"CodeProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/collectionproperty\/init(label:bools:)","title":"init(label: String, bools: ValidatorFactory<Bool>...)","type":"init"},{"path":"\/documentation\/attributes\/collectionproperty\/init(label:enumerations:validvalues:)","title":"init(label: String, enumerations: ValidatorFactory<String>..., validValues: Set<String>)","type":"init"},{"path":"\/documentation\/attributes\/collectionproperty\/init(label:expressions:language:)","title":"init(label: String, expressions: ValidatorFactory<Expression>..., language: Language)","type":"init"},{"path":"\/documentation\/attributes\/collectionproperty\/init(label:floats:)","title":"init(label: String, floats: ValidatorFactory<Double>...)","type":"init"},{"path":"\/documentation\/attributes\/collectionproperty\/init(label:integers:)","title":"init(label: String, integers: ValidatorFactory<Int>...)","type":"init"},{"path":"\/documentation\/attributes\/collectionproperty\/init(label:lines:)","title":"init(label: String, lines: ValidatorFactory<String>...)","type":"init"},{"path":"\/documentation\/attributes\/collectionproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/collectionproperty\/projectedvalue","title":"var projectedValue: CollectionProperty","type":"property"},{"path":"\/documentation\/attributes\/collectionproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/collectionproperty\/update(validvalues:enumerations:)","title":"func update(validValues: Set<String>, enumerations: ValidatorFactory<String>...)","type":"method"}],"path":"\/documentation\/attributes\/collectionproperty","title":"CollectionProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/complexcollectionproperty\/init(base:label:)","title":"init(base: Base, label: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/complexcollectionproperty\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/attributes\/complexcollectionproperty\/projectedvalue","title":"var projectedValue: ComplexCollectionProperty<Base>","type":"property"},{"path":"\/documentation\/attributes\/complexcollectionproperty\/wrappedvalue","title":"var wrappedValue: Base","type":"property"}],"path":"\/documentation\/attributes\/complexcollectionproperty","title":"ComplexCollectionProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/complexproperty\/init(base:label:)","title":"init(base: Base, label: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/complexproperty\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/attributes\/complexproperty\/projectedvalue","title":"var projectedValue: ComplexProperty<Base>","type":"property"},{"path":"\/documentation\/attributes\/complexproperty\/wrappedvalue","title":"var wrappedValue: Base","type":"property"}],"path":"\/documentation\/attributes\/complexproperty","title":"ComplexProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/enumerablecollectionproperty\/init(label:validvalues:validation:)","title":"init(label: String, validValues: Set<String>, validation: (ValidationPath<ReadOnlyPath<Attribute, Set<String>>>) -> AnyValidator<Attribute>)","type":"init"},{"path":"\/documentation\/attributes\/enumerablecollectionproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/enumerablecollectionproperty\/projectedvalue","title":"var projectedValue: EnumerableCollectionProperty","type":"property"},{"path":"\/documentation\/attributes\/enumerablecollectionproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/enumerablecollectionproperty\/update(validvalues:validation:)","title":"func update(validValues: Set<String>, validation: (ValidationPath<ReadOnlyPath<Attribute, Set<String>>>) -> AnyValidator<Attribute>)","type":"method"}],"path":"\/documentation\/attributes\/enumerablecollectionproperty","title":"EnumerableCollectionProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/enumeratedproperty\/init(label:validvalues:validation:)","title":"init(label: String, validValues: Set<String>, validation: (ValidationPath<ReadOnlyPath<Attribute, String>>) -> AnyValidator<Attribute>)","type":"init"},{"path":"\/documentation\/attributes\/enumeratedproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/enumeratedproperty\/projectedvalue","title":"var projectedValue: EnumeratedProperty","type":"property"},{"path":"\/documentation\/attributes\/enumeratedproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/enumeratedproperty\/update(validvalues:validation:)","title":"func update(validValues: Set<String>, validation: (ValidationPath<ReadOnlyPath<Attribute, String>>) -> AnyValidator<Attribute>)","type":"method"}],"path":"\/documentation\/attributes\/enumeratedproperty","title":"EnumeratedProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/expressionproperty\/init(label:language:validation:)","title":"init(label: String, language: Language, validation: (ValidationPath<ReadOnlyPath<Attribute, Expression>>) -> AnyValidator<Attribute>)","type":"init"},{"path":"\/documentation\/attributes\/expressionproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/expressionproperty\/projectedvalue","title":"var projectedValue: ExpressionProperty","type":"property"},{"path":"\/documentation\/attributes\/expressionproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"}],"path":"\/documentation\/attributes\/expressionproperty","title":"ExpressionProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/floatproperty\/init(label:validation:)","title":"init(label: String, validation: (ValidationPath<ReadOnlyPath<Attribute, Double>>) -> AnyValidator<Attribute>)","type":"init"},{"path":"\/documentation\/attributes\/floatproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/floatproperty\/projectedvalue","title":"var projectedValue: FloatProperty","type":"property"},{"path":"\/documentation\/attributes\/floatproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"}],"path":"\/documentation\/attributes\/floatproperty","title":"FloatProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/integerproperty\/init(label:validation:)","title":"init(label: String, validation: (ValidationPath<ReadOnlyPath<Attribute, Int>>) -> AnyValidator<Attribute>)","type":"init"},{"path":"\/documentation\/attributes\/integerproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/integerproperty\/projectedvalue","title":"var projectedValue: IntegerProperty","type":"property"},{"path":"\/documentation\/attributes\/integerproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"}],"path":"\/documentation\/attributes\/integerproperty","title":"IntegerProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineproperty\/init(label:validation:)","title":"init(label: String, validation: (ValidationPath<ReadOnlyPath<Attribute, String>>) -> AnyValidator<Attribute>)","type":"init"},{"path":"\/documentation\/attributes\/lineproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/lineproperty\/projectedvalue","title":"var projectedValue: LineProperty","type":"property"},{"path":"\/documentation\/attributes\/lineproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"}],"path":"\/documentation\/attributes\/lineproperty","title":"LineProperty","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/tablecolumn\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/attributes\/tablecolumn\/type","title":"var type: LineAttributeType","type":"property"},{"path":"\/documentation\/attributes\/tablecolumn\/validator","title":"var validator: AnyValidator<LineAttribute>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/tablecolumn\/bool(label:validation:)","title":"static func bool(label: String, validation: ValidatorFactory<Bool>...) -> TableColumn","type":"method"},{"path":"\/documentation\/attributes\/tablecolumn\/enumerated(label:validvalues:validation:)","title":"static func enumerated(label: String, validValues: Set<String>, validation: ValidatorFactory<String>...) -> TableColumn","type":"method"},{"path":"\/documentation\/attributes\/tablecolumn\/expression(label:language:validation:)","title":"static func expression(label: String, language: Language, validation: ValidatorFactory<Expression>...) -> TableColumn","type":"method"},{"path":"\/documentation\/attributes\/tablecolumn\/float(label:validation:)","title":"static func float(label: String, validation: ValidatorFactory<Double>...) -> TableColumn","type":"method"},{"path":"\/documentation\/attributes\/tablecolumn\/integer(label:validation:)","title":"static func integer(label: String, validation: ValidatorFactory<Int>...) -> TableColumn","type":"method"},{"path":"\/documentation\/attributes\/tablecolumn\/line(label:validation:)","title":"static func line(label: String, validation: ValidatorFactory<String>...) -> TableColumn","type":"method"}],"path":"\/documentation\/attributes\/tablecolumn","title":"TableColumn","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/tableproperty\/init(label:columns:validation:)","title":"init(label: String, columns: [TableColumn], validation: (ValidationPath<ReadOnlyPath<Attribute, [[LineAttribute]]>>) -> AnyValidator<Attribute>)","type":"init"},{"path":"\/documentation\/attributes\/tableproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/tableproperty\/projectedvalue","title":"var projectedValue: TableProperty","type":"property"},{"path":"\/documentation\/attributes\/tableproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/tableproperty\/update(columns:validation:)","title":"func update(columns: [TableColumn], validation: (ValidationPath<ReadOnlyPath<Attribute, [[LineAttribute]]>>) -> AnyValidator<Attribute>)","type":"method"}],"path":"\/documentation\/attributes\/tableproperty","title":"TableProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/textproperty\/init(label:validation:)","title":"init(label: String, validation: (ValidationPath<ReadOnlyPath<Attribute, String>>) -> AnyValidator<Attribute>)","type":"init"},{"path":"\/documentation\/attributes\/textproperty\/init(wrappedvalue:)","title":"init(wrappedValue: SchemaAttribute)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/textproperty\/projectedvalue","title":"var projectedValue: TextProperty","type":"property"},{"path":"\/documentation\/attributes\/textproperty\/wrappedvalue","title":"var wrappedValue: SchemaAttribute","type":"property"}],"path":"\/documentation\/attributes\/textproperty","title":"TextProperty","type":"struct"},{"title":"Schema","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/anygroup\/init(_:)","title":"init<Base>(Base)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/anygroup\/alltriggers","title":"var allTriggers: AnyTrigger<Root>","type":"property"},{"path":"\/documentation\/attributes\/anygroup\/groupvalidation","title":"var groupValidation: AnyValidator<AttributeGroup>","type":"property"},{"path":"\/documentation\/attributes\/anygroup\/path","title":"var path: AnySearchablePath<Root, AttributeGroup>","type":"property"},{"path":"\/documentation\/attributes\/anygroup\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"},{"path":"\/documentation\/attributes\/anygroup\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"},{"path":"\/documentation\/attributes\/anygroup\/properties","title":"var properties: [SchemaAttribute]","type":"property"},{"path":"\/documentation\/attributes\/anygroup\/propertiesvalidator","title":"var propertiesValidator: AnyValidator<AttributeGroup>","type":"property"},{"path":"\/documentation\/attributes\/anygroup\/rootvalidation","title":"var rootValidation: AnyValidator<Root>","type":"property"},{"path":"\/documentation\/attributes\/anygroup\/triggers","title":"var triggers: AnyTrigger<Root>","type":"property"}],"path":"\/documentation\/attributes\/anygroup","title":"AnyGroup","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributable\/attributeroot","title":"AttributeRoot","type":"associatedtype"},{"path":"\/documentation\/attributes\/attributable\/root","title":"Root","type":"associatedtype"},{"path":"\/documentation\/attributes\/attributable\/searchpath","title":"SearchPath","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/attributes\/attributable\/alltriggers-4sdxv","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"}],"title":"Attributable Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/attributable\/alltriggers-9bp2x","title":"var allTriggers: AnyTrigger<Self.Root>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/attributes\/attributable\/groupvalidation-7ovdk","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"}],"title":"Attributable Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/attributable\/groupvalidation-8l71j","title":"var groupValidation: AnyValidator<Self.AttributeRoot>","type":"property"},{"path":"\/documentation\/attributes\/attributable\/path","title":"var path: Self.SearchPath","type":"property"},{"children":[{"children":[{"path":"\/documentation\/attributes\/complexprotocol\/pathtoattributes","title":"var pathToAttributes: Path<Attribute, [String : Attribute]>","type":"property"}],"title":"ComplexProtocol Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/attributes\/groupprotocol\/pathtoattributes","title":"var pathToAttributes: Path<AttributeGroup, [String : Attribute]>","type":"property"}],"title":"GroupProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/attributable\/pathtoattributes","title":"var pathToAttributes: Path<Self.AttributeRoot, [String : Attribute]>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/attributes\/complexprotocol\/pathtofields","title":"var pathToFields: Path<Attribute, [Field]>","type":"property"}],"title":"ComplexProtocol Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/attributes\/groupprotocol\/pathtofields","title":"var pathToFields: Path<AttributeGroup, [Field]>","type":"property"}],"title":"GroupProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/attributable\/pathtofields","title":"var pathToFields: Path<Self.AttributeRoot, [Field]>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/attributes\/attributable\/properties-3so6n","title":"var properties: [SchemaAttribute]","type":"property"}],"title":"Attributable Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/attributable\/properties-8pphl","title":"var properties: [SchemaAttribute]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/attributes\/attributable\/propertiesvalidator-6auey","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"}],"title":"Attributable Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/attributable\/propertiesvalidator-88vap","title":"var propertiesValidator: AnyValidator<Self.AttributeRoot>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/attributes\/attributable\/rootvalidation-58mdk","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"}],"title":"Attributable Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/attributable\/rootvalidation-1o0l0","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/attributes\/attributable\/triggers-643hu","title":"var triggers: AnyTrigger<Self.Root>","type":"property"}],"title":"Attributable Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/attributable\/triggers-7gsk7","title":"var triggers: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributable\/whenchanged(_:)","title":"func WhenChanged(SchemaAttribute) -> ForEach<AnySearchablePath<Self.Root, Attribute>, WhenChanged<Path<Self.Root, Attribute>, IdentityTrigger<Self.Root>>>","type":"method"},{"path":"\/documentation\/attributes\/attributable\/whenchanged(_:in:perform:)","title":"func WhenChanged<T>(Path<[LineAttribute], T>, in: SchemaAttribute, perform: (inout Self.Root) -> Result<Bool, AttributeError<Self.Root>>) -> ForEach<Self.SearchPath, ForEach<CollectionSearchPath<Self.Root, [[LineAttribute]], T>, CustomTrigger<Path<CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Root, CollectionSearchPath<Self.Root, [[LineAttribute]], T>.Value>>>>","type":"method"},{"path":"\/documentation\/attributes\/attributable\/whenfalse(_:makeavailable:)","title":"func WhenFalse(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/attributes\/attributable\/whenfalse(_:makeunavailable:)","title":"func WhenFalse(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/attributes\/attributable\/whentrue(_:makeavailable:)","title":"func WhenTrue(SchemaAttribute, makeAvailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeAvailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>, Path<Self.Root, [String : Attribute]>>>>>","type":"method"},{"path":"\/documentation\/attributes\/attributable\/whentrue(_:makeunavailable:)","title":"func WhenTrue(SchemaAttribute, makeUnavailable: SchemaAttribute) -> ForEach<Self.SearchPath, WhenChanged<Path<Self.Root, Attribute>, ConditionalTrigger<MakeUnavailableTrigger<Path<Self.Root, Attribute>, Path<Self.Root, [Field]>>>>>","type":"method"},{"path":"\/documentation\/attributes\/attributable\/findproperty(path:in:)","title":"func findProperty(path: AnyPath<Self.Root>, in: Self.Root) -> SchemaAttribute?","type":"method"},{"path":"\/documentation\/attributes\/attributable\/path(for:)","title":"func path(for: SchemaAttribute) -> AnySearchablePath<Self.Root, Attribute>","type":"method"},{"path":"\/documentation\/attributes\/attributable\/path(for:in:)","title":"func path(for: SchemaAttribute, in: Path<Self.Root, Self.AttributeRoot>) -> Path<Self.Root, Attribute>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributable\/complexcollectionproperty","title":"Attributable.ComplexCollectionProperty","type":"typealias"},{"path":"\/documentation\/attributes\/attributable\/complexproperty","title":"Attributable.ComplexProperty","type":"typealias"}],"path":"\/documentation\/attributes\/attributable","title":"Attributable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributegroup\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/attributes\/attributegroup\/init(name:fields:attributes:metadata:)","title":"init(name: String, fields: [Field], attributes: [Label : Attribute], metaData: [Label : Attribute])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributegroup\/attributes","title":"var attributes: [Label : Attribute]","type":"property"},{"path":"\/documentation\/attributes\/attributegroup\/fields","title":"var fields: [Field]","type":"property"},{"path":"\/documentation\/attributes\/attributegroup\/metadata","title":"var metaData: [Label : Attribute]","type":"property"},{"path":"\/documentation\/attributes\/attributegroup\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributegroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/attributegroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/attributegroup","title":"AttributeGroup","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/complexprotocol\/groupvalidation","title":"var groupValidation: AnyValidator<Attribute>","type":"property"},{"path":"\/documentation\/attributes\/complexprotocol\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/attributes\/complexprotocol\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"}],"path":"\/documentation\/attributes\/complexprotocol","title":"ComplexProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/emptymodifiable\/init(attributes:metadata:errorbag:modifytriggers:)","title":"init(attributes: [AttributeGroup], metaData: [AttributeGroup], errorBag: ErrorBag<EmptyModifiable>, modifyTriggers: (inout EmptyModifiable) -> Result<Bool, AttributeError<EmptyModifiable>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/emptymodifiable\/attributes","title":"var attributes: [AttributeGroup]","type":"property"},{"path":"\/documentation\/attributes\/emptymodifiable\/errorbag","title":"var errorBag: ErrorBag<EmptyModifiable>","type":"property"},{"path":"\/documentation\/attributes\/emptymodifiable\/metadata","title":"var metaData: [AttributeGroup]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/emptymodifiable\/additem(_:to:)","title":"func addItem<Path, T>(T, to: Path) -> Result<Bool, AttributeError<EmptyModifiable>>","type":"method"},{"path":"\/documentation\/attributes\/emptymodifiable\/deleteitem(table:atindex:)","title":"func deleteItem<Path, T>(table: Path, atIndex: Int) -> Result<Bool, AttributeError<EmptyModifiable>>","type":"method"},{"path":"\/documentation\/attributes\/emptymodifiable\/deleteitems(table:items:)","title":"func deleteItems<Path, T>(table: Path, items: IndexSet) -> Result<Bool, AttributeError<EmptyModifiable>>","type":"method"},{"path":"\/documentation\/attributes\/emptymodifiable\/modify(attribute:value:)","title":"func modify<Path>(attribute: Path, value: Path.Value) -> Result<Bool, AttributeError<EmptyModifiable>>","type":"method"},{"path":"\/documentation\/attributes\/emptymodifiable\/moveitems(table:from:to:)","title":"func moveItems<Path, T>(table: Path, from: IndexSet, to: Int) -> Result<Bool, AttributeError<EmptyModifiable>>","type":"method"},{"path":"\/documentation\/attributes\/emptymodifiable\/validate()","title":"func validate() throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/emptymodifiable\/path","title":"static var path: Path<EmptyModifiable, EmptyModifiable>","type":"property"}],"path":"\/documentation\/attributes\/emptymodifiable","title":"EmptyModifiable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/emptyschema\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/emptyschema\/groups","title":"var groups: [AnyGroup<Self.Root>]","type":"property"},{"path":"\/documentation\/attributes\/emptyschema\/trigger","title":"var trigger: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/emptyschema\/makevalidator(root:)","title":"func makeValidator(root: Self.Root) -> AnyValidator<Self.Root>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/emptyschema\/group","title":"EmptySchema.Group","type":"typealias"}],"path":"\/documentation\/attributes\/emptyschema\/schemaprotocol-implementations","title":"SchemaProtocol Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/emptyschema","title":"EmptySchema","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/field\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/attributes\/field\/init(name:type:)","title":"init(name: Label, type: AttributeType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/field\/name","title":"var name: Label","type":"property"},{"path":"\/documentation\/attributes\/field\/type","title":"var type: AttributeType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/field\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/field\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/field","title":"Field","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/group\/init(wrappedvalue:)","title":"init(wrappedValue: GroupType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/group\/anygroup","title":"var anyGroup: Any","type":"property"},{"path":"\/documentation\/attributes\/group\/projectedvalue","title":"var projectedValue: Group<GroupType>","type":"property"},{"path":"\/documentation\/attributes\/group\/wrappedvalue","title":"var wrappedValue: GroupType","type":"property"}],"path":"\/documentation\/attributes\/group","title":"Group","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/groupprotocol\/groupvalidation","title":"var groupValidation: AnyValidator<AttributeGroup>","type":"property"},{"path":"\/documentation\/attributes\/groupprotocol\/rootvalidation","title":"var rootValidation: AnyValidator<Self.Root>","type":"property"},{"path":"\/documentation\/attributes\/groupprotocol\/triggers","title":"var triggers: AnyTrigger<Self.Root>","type":"property"}],"path":"\/documentation\/attributes\/groupprotocol","title":"GroupProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/modifiable\/attributes","title":"var attributes: [AttributeGroup]","type":"property"},{"path":"\/documentation\/attributes\/modifiable\/errorbag","title":"var errorBag: ErrorBag<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/modifiable\/additem(_:to:)","title":"func addItem<Path, T>(T, to: Path) -> Result<Bool, AttributeError<Self>>","type":"method"},{"path":"\/documentation\/attributes\/modifiable\/deleteitem(table:atindex:)","title":"func deleteItem<Path, T>(table: Path, atIndex: Int) -> Result<Bool, AttributeError<Self>>","type":"method"},{"path":"\/documentation\/attributes\/modifiable\/deleteitems(table:items:)","title":"func deleteItems<Path, T>(table: Path, items: IndexSet) -> Result<Bool, AttributeError<Self>>","type":"method"},{"path":"\/documentation\/attributes\/modifiable\/modify(attribute:value:)","title":"func modify<Path>(attribute: Path, value: Path.Value) -> Result<Bool, AttributeError<Self>>","type":"method"},{"path":"\/documentation\/attributes\/modifiable\/moveitems(table:from:to:)","title":"func moveItems<Path, T>(table: Path, from: IndexSet, to: Int) -> Result<Bool, AttributeError<Self>>","type":"method"},{"path":"\/documentation\/attributes\/modifiable\/validate()","title":"func validate() throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/modifiable\/path","title":"static var path: Path<Self, Self>","type":"property"}],"path":"\/documentation\/attributes\/modifiable","title":"Modifiable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/schemaattribute\/init(label:type:validate:)","title":"init(label: String, type: AttributeType, validate: AnyValidator<Attribute>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/schemaattribute\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/attributes\/schemaattribute\/type","title":"var type: AttributeType","type":"property"},{"path":"\/documentation\/attributes\/schemaattribute\/validate","title":"var validate: AnyValidator<Attribute>","type":"property"}],"path":"\/documentation\/attributes\/schemaattribute","title":"SchemaAttribute","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/schemaprotocol\/root","title":"Root","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/attributes\/schemaprotocol\/groups-7bdab","title":"var groups: [AnyGroup<Self.Root>]","type":"property"}],"title":"SchemaProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/schemaprotocol\/groups-1j6bm","title":"var groups: [AnyGroup<Self.Root>]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/attributes\/schemaprotocol\/trigger-1lujp","title":"var trigger: AnyTrigger<Self.Root>","type":"property"}],"title":"SchemaProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/schemaprotocol\/trigger-m0ka","title":"var trigger: AnyTrigger<Self.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/attributes\/schemaprotocol\/makevalidator(root:)-n0gy","title":"func makeValidator(root: Self.Root) -> AnyValidator<Self.Root>","type":"method"}],"title":"SchemaProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/attributes\/schemaprotocol\/makevalidator(root:)-637v5","title":"func makeValidator(root: Self.Root) -> AnyValidator<Self.Root>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/schemaprotocol\/group","title":"SchemaProtocol.Group","type":"typealias"}],"path":"\/documentation\/attributes\/schemaprotocol","title":"SchemaProtocol","type":"protocol"},{"title":"Triggers","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/anytrigger\/init(_:)-1qft8","title":"init<Base>(Base)","type":"init"},{"path":"\/documentation\/attributes\/anytrigger\/init(_:)-99n17","title":"init<S, V>(S)","type":"init"},{"path":"\/documentation\/attributes\/anytrigger\/init(_:)-smar","title":"init(AnyTrigger<Root>)","type":"init"},{"path":"\/documentation\/attributes\/anytrigger\/init(builder:)","title":"init(builder: () -> AnyTrigger<Root>)","type":"init"},{"path":"\/documentation\/attributes\/anytrigger\/init(path:trigger:)","title":"init<SearchPath>(path: SearchPath, trigger: (inout Root, AnyPath<Root>) -> Result<Bool, AttributeError<Root>>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/anytrigger\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<Root>, in: Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/anytrigger\/performtrigger(_:for:)","title":"func performTrigger(inout Root, for: AnyPath<Root>) -> Result<Bool, AttributeError<Root>>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/anytrigger\/init(arrayliteral:)","title":"init(arrayLiteral: AnyTrigger<Root>.ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/anytrigger\/arrayliteralelement","title":"AnyTrigger.ArrayLiteralElement","type":"typealias"}],"path":"\/documentation\/attributes\/anytrigger\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/anytrigger","title":"AnyTrigger","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/conditionaltrigger\/init(condition:trigger:)","title":"init(condition: (ConditionalTrigger<Trigger>.Root) -> Bool, trigger: Trigger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/conditionaltrigger\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<Trigger.Root>, in: Trigger.Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/conditionaltrigger\/performtrigger(_:for:)","title":"func performTrigger(inout Trigger.Root, for: AnyPath<Trigger.Root>) -> Result<Bool, AttributeError<Trigger.Root>>","type":"method"}],"path":"\/documentation\/attributes\/conditionaltrigger","title":"ConditionalTrigger","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/customtrigger\/init(path:trigger:)","title":"init(path: Path, trigger: (inout CustomTrigger<Path>.Root) -> Result<Bool, AttributeError<CustomTrigger<Path>.Root>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/customtrigger\/path","title":"var path: AnyPath<CustomTrigger<Path>.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/customtrigger\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<CustomTrigger<Path>.Root>, in: CustomTrigger<Path>.Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/customtrigger\/performtrigger(_:for:)","title":"func performTrigger(inout CustomTrigger<Path>.Root, for: AnyPath<CustomTrigger<Path>.Root>) -> Result<Bool, AttributeError<CustomTrigger<Path>.Root>>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/customtrigger\/root","title":"CustomTrigger.Root","type":"typealias"}],"path":"\/documentation\/attributes\/customtrigger","title":"CustomTrigger","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/foreach\/init(_:each:)","title":"init(SearchPath, each: (Path<SearchPath.Root, SearchPath.Value>) -> Trigger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/foreach\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<SearchPath.Root>, in: SearchPath.Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/foreach\/makeavailable(field:after:fields:attributes:)","title":"func makeAvailable<FieldsPath, AttributesPath>(field: Field, after: [String], fields: FieldsPath, attributes: AttributesPath) -> ForEach<SearchPath, MakeAvailableTrigger<Path<SearchPath.Root, SearchPath.Value>, FieldsPath, AttributesPath>>","type":"method"},{"path":"\/documentation\/attributes\/foreach\/makeunavailable(field:fields:)","title":"func makeUnavailable<FieldsPath>(field: Field, fields: FieldsPath) -> ForEach<SearchPath, MakeUnavailableTrigger<Path<SearchPath.Root, SearchPath.Value>, FieldsPath>>","type":"method"},{"path":"\/documentation\/attributes\/foreach\/performtrigger(_:for:)","title":"func performTrigger(inout SearchPath.Root, for: AnyPath<SearchPath.Root>) -> Result<Bool, AttributeError<SearchPath.Root>>","type":"method"},{"path":"\/documentation\/attributes\/foreach\/sync(target:)","title":"func sync<TargetPath>(target: TargetPath) -> ForEach<SearchPath, SyncTrigger<Path<SearchPath.Root, SearchPath.Value>, TargetPath>>","type":"method"},{"path":"\/documentation\/attributes\/foreach\/sync(target:transform:)","title":"func sync<TargetPath>(target: TargetPath, transform: (SearchPath.Value, TargetPath.Value) -> TargetPath.Value) -> ForEach<SearchPath, SyncWithTransformTrigger<Path<SearchPath.Root, SearchPath.Value>, TargetPath>>","type":"method"},{"path":"\/documentation\/attributes\/foreach\/when(_:then:)","title":"func when<NewTrigger>((ForEach<SearchPath, Trigger>.Root) -> Bool, then: (Trigger) -> NewTrigger) -> ForEach<SearchPath, WhenChanged<Path<SearchPath.Root, SearchPath.Value>, ConditionalTrigger<NewTrigger>>>","type":"method"}],"path":"\/documentation\/attributes\/foreach","title":"ForEach","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/identitytrigger\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<Root>, in: Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/identitytrigger\/performtrigger(_:for:)","title":"func performTrigger(inout Root, for: AnyPath<Root>) -> Result<Bool, AttributeError<Root>>","type":"method"}],"path":"\/documentation\/attributes\/identitytrigger","title":"IdentityTrigger","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/makeavailabletrigger\/init(field:after:source:fields:attributes:)","title":"init(field: Field, after: [String], source: Source, fields: Fields, attributes: Attributes)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/makeavailabletrigger\/path","title":"var path: AnyPath<MakeAvailableTrigger<Source, Fields, Attributes>.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/makeavailabletrigger\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<MakeAvailableTrigger<Source, Fields, Attributes>.Root>, in: MakeAvailableTrigger<Source, Fields, Attributes>.Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/makeavailabletrigger\/performtrigger(_:for:)","title":"func performTrigger(inout Source.Root, for: AnyPath<MakeAvailableTrigger<Source, Fields, Attributes>.Root>) -> Result<Bool, AttributeError<Source.Root>>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/makeavailabletrigger\/root","title":"MakeAvailableTrigger.Root","type":"typealias"}],"path":"\/documentation\/attributes\/makeavailabletrigger","title":"MakeAvailableTrigger","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/makeunavailabletrigger\/init(field:source:fields:)","title":"init(field: Field, source: Source, fields: Fields)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/makeunavailabletrigger\/path","title":"var path: AnyPath<MakeUnavailableTrigger<Source, Fields>.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/makeunavailabletrigger\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<MakeUnavailableTrigger<Source, Fields>.Root>, in: MakeUnavailableTrigger<Source, Fields>.Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/makeunavailabletrigger\/performtrigger(_:for:)","title":"func performTrigger(inout Source.Root, for: AnyPath<MakeUnavailableTrigger<Source, Fields>.Root>) -> Result<Bool, AttributeError<Source.Root>>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/makeunavailabletrigger\/root","title":"MakeUnavailableTrigger.Root","type":"typealias"}],"path":"\/documentation\/attributes\/makeunavailabletrigger","title":"MakeUnavailableTrigger","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/synctrigger\/init(source:target:)","title":"init(source: Source, target: Target)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/synctrigger\/path","title":"var path: AnyPath<SyncTrigger<Source, Target>.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/synctrigger\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<SyncTrigger<Source, Target>.Root>, in: SyncTrigger<Source, Target>.Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/synctrigger\/performtrigger(_:for:)","title":"func performTrigger(inout Source.Root, for: AnyPath<SyncTrigger<Source, Target>.Root>) -> Result<Bool, AttributeError<Source.Root>>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/synctrigger\/root","title":"SyncTrigger.Root","type":"typealias"}],"path":"\/documentation\/attributes\/synctrigger","title":"SyncTrigger","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/syncwithtransformtrigger\/init(source:target:transform:)","title":"init(source: Source, target: Target, transform: (Source.Value, Target.Value) -> Target.Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/syncwithtransformtrigger\/path","title":"var path: AnyPath<SyncWithTransformTrigger<Source, Target>.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/syncwithtransformtrigger\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<SyncWithTransformTrigger<Source, Target>.Root>, in: SyncWithTransformTrigger<Source, Target>.Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/syncwithtransformtrigger\/performtrigger(_:for:)","title":"func performTrigger(inout Source.Root, for: AnyPath<SyncWithTransformTrigger<Source, Target>.Root>) -> Result<Bool, AttributeError<Source.Root>>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/syncwithtransformtrigger\/root","title":"SyncWithTransformTrigger.Root","type":"typealias"}],"path":"\/documentation\/attributes\/syncwithtransformtrigger","title":"SyncWithTransformTrigger","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/triggerbuilder\/maketrigger(_:)-3mvsi","title":"func makeTrigger<Trigger>(() -> Trigger) -> Trigger","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/maketrigger(_:)-6oa78","title":"func makeTrigger<Trigger>(() -> [Trigger]) -> AnyTrigger<Root>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:)","title":"static func buildBlock<V0>(V0) -> V0","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:)","title":"static func buildBlock<V0, V1>(V0, V1) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:_:)","title":"static func buildBlock<V0, V1, V2>(V0, V1, V2) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3>(V0, V1, V2, V3) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4>(V0, V1, V2, V3, V4) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5>(V0, V1, V2, V3, V4, V5) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6>(V0, V1, V2, V3, V4, V5, V6) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7>(V0, V1, V2, V3, V4, V5, V6, V7) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7, V8>(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:_:_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9>(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:_:_:_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10>(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> AnyTrigger<Root>","type":"method"},{"path":"\/documentation\/attributes\/triggerbuilder\/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11>(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> AnyTrigger<Root>","type":"method"}],"path":"\/documentation\/attributes\/triggerbuilder","title":"TriggerBuilder","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/triggerprotocol\/root","title":"Root","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/triggerprotocol\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<Self.Root>, in: Self.Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/triggerprotocol\/performtrigger(_:for:)","title":"func performTrigger(inout Self.Root, for: AnyPath<Self.Root>) -> Result<Bool, AttributeError<Self.Root>>","type":"method"}],"path":"\/documentation\/attributes\/triggerprotocol","title":"TriggerProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/whenchanged\/init(_:)","title":"init(Path)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/whenchanged\/path","title":"var path: AnyPath<WhenChanged<Path, Trigger>.Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/whenchanged\/custom(_:)","title":"func custom((inout WhenChanged<Path, Trigger>.Root) -> Result<Bool, AttributeError<WhenChanged<Path, Trigger>.Root>>) -> CustomTrigger<Path>","type":"method"},{"path":"\/documentation\/attributes\/whenchanged\/istriggerforpath(_:in:)","title":"func isTriggerForPath(AnyPath<Path.Root>, in: WhenChanged<Path, Trigger>.Root) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/whenchanged\/makeavailable(field:after:fields:attributes:)","title":"func makeAvailable<FieldsPath, AttributesPath>(field: Field, after: [String], fields: FieldsPath, attributes: AttributesPath) -> MakeAvailableTrigger<Path, FieldsPath, AttributesPath>","type":"method"},{"path":"\/documentation\/attributes\/whenchanged\/makeunavailable(field:fields:)","title":"func makeUnavailable<FieldsPath>(field: Field, fields: FieldsPath) -> MakeUnavailableTrigger<Path, FieldsPath>","type":"method"},{"path":"\/documentation\/attributes\/whenchanged\/performtrigger(_:for:)","title":"func performTrigger(inout Path.Root, for: AnyPath<WhenChanged<Path, Trigger>.Root>) -> Result<Bool, AttributeError<Path.Root>>","type":"method"},{"path":"\/documentation\/attributes\/whenchanged\/sync(target:)","title":"func sync<TargetPath>(target: TargetPath) -> SyncTrigger<Path, TargetPath>","type":"method"},{"path":"\/documentation\/attributes\/whenchanged\/sync(target:transform:)","title":"func sync<TargetPath>(target: TargetPath, transform: (Path.Value, TargetPath.Value) -> TargetPath.Value) -> SyncWithTransformTrigger<Path, TargetPath>","type":"method"},{"path":"\/documentation\/attributes\/whenchanged\/when(_:then:)","title":"func when<NewTrigger>((WhenChanged<Path, Trigger>.Root) -> Bool, then: (WhenChanged<Path, Trigger>) -> NewTrigger) -> WhenChanged<Path, ConditionalTrigger<NewTrigger>>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/whenchanged\/root","title":"WhenChanged.Root","type":"typealias"}],"path":"\/documentation\/attributes\/whenchanged","title":"WhenChanged","type":"struct"},{"title":"Validators","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/anyvalidator\/init(_:)-3onsl","title":"init(AnyValidator<Root>)","type":"init"},{"path":"\/documentation\/attributes\/anyvalidator\/init(_:)-5bqkm","title":"init<S, V>(S)","type":"init"},{"path":"\/documentation\/attributes\/anyvalidator\/init(_:)-7etpi","title":"init<V>(V)","type":"init"},{"path":"\/documentation\/attributes\/anyvalidator\/init(_:)-8tqx8","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/attributes\/anyvalidator\/init(builder:)","title":"init(builder: () -> [AnyValidator<Root>])","type":"init"},{"path":"\/documentation\/attributes\/anyvalidator\/init(validate:)","title":"init(validate: (Root) throws -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/anyvalidator\/performvalidation(_:)","title":"func performValidation(Root) throws","type":"method"},{"path":"\/documentation\/attributes\/anyvalidator\/tonewroot(path:)","title":"func toNewRoot<NewPath>(path: NewPath) -> AnyValidator<NewPath.Root>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/anyvalidator\/init(arrayliteral:)","title":"init(arrayLiteral: AnyValidator<Root>.ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/anyvalidator\/arrayliteralelement","title":"AnyValidator.ArrayLiteralElement","type":"typealias"}],"path":"\/documentation\/attributes\/anyvalidator\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/optionalvalidator\/init(path:)","title":"init(path: OptionalValidator<P>.PathType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/optionalvalidator\/path","title":"let path: OptionalValidator<P>.PathType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/optionalvalidator\/performvalidation(_:)","title":"func performValidation(OptionalValidator<P>.PathType.Root) throws","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/push(_:)","title":"func push((OptionalValidator<P>.Root, OptionalValidator<P>.Value) throws -> Void) -> OptionalValidator<P>","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/validate(builder:)","title":"func validate(builder: (OptionalValidator<P>) -> [AnyValidator<OptionalValidator<P>.PathType.Root>]) -> AnyValidator<OptionalValidator<P>.PathType.Root>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/optionalvalidator\/pathtype","title":"OptionalValidator.PathType","type":"typealias"},{"path":"\/documentation\/attributes\/optionalvalidator\/root","title":"OptionalValidator.Root","type":"typealias"},{"path":"\/documentation\/attributes\/optionalvalidator\/value","title":"OptionalValidator.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/optionalvalidator\/alpha()","title":"func alpha() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/alphadash()","title":"func alphadash() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/alphafirst()","title":"func alphafirst() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/alphanumeric()","title":"func alphanumeric() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/alphaunderscore()","title":"func alphaunderscore() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/alphaunderscorefirst()","title":"func alphaunderscorefirst() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/between(min:max:)","title":"func between(min: Self.Value, max: Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/blacklist(_:)","title":"func blacklist(Set<String>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/empty()","title":"func empty() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/equals(_:)","title":"func equals(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/equalsfalse()","title":"func equalsFalse() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/equalstrue()","title":"func equalsTrue() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/greaterthan(_:)","title":"func greaterThan(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/greaterthanequal(_:)","title":"func greaterThanEqual(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/greylist(_:)","title":"func greyList(Set<String>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/if(_:then:)","title":"func `if`((Self.Value) -> Bool, then: () -> AnyValidator<Self.Root>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/if(_:then:else:)","title":"func `if`((Self.Value) -> Bool, then: () -> AnyValidator<Self.Root>, else: () -> AnyValidator<Self.Root>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/in(_:)-1frgp","title":"func `in`<P, S>(P) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/in(_:)-29u9o","title":"func `in`<P, S>(P) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/in(_:)-87uwn","title":"func `in`(Set<Self.Value>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/in(_:transform:)","title":"func `in`<P, S, S2>(P, transform: (S) -> S2) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/length(_:)","title":"func length(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/lessthan(_:)","title":"func lessThan(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/lessthanequal(_:)","title":"func lessThanEqual(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/maxlength(_:)","title":"func maxLength(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/minlength(_:)","title":"func minLength(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/notempty()","title":"func notEmpty() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/notequals(_:)","title":"func notEquals(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/numeric()","title":"func numeric() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/unique(_:)","title":"func unique<S>((Self.Value) -> S) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/optionalvalidator\/whitelist(_:)","title":"func whitelist(Set<String>) -> Self.PushValidator","type":"method"}],"path":"\/documentation\/attributes\/optionalvalidator\/validationpushprotocol-implementations","title":"ValidationPushProtocol Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/optionalvalidator","title":"OptionalValidator","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathvalidator\/pathtype","title":"PathType","type":"associatedtype"},{"path":"\/documentation\/attributes\/pathvalidator\/pushvalidator","title":"PushValidator","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathvalidator\/init(path:)","title":"init(path: Self.PathType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathvalidator\/path","title":"var path: Self.PathType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/pathvalidator\/push(_:)","title":"func push((Self.Root, Self.Value) throws -> Void) -> Self","type":"method"}],"path":"\/documentation\/attributes\/pathvalidator","title":"PathValidator","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/requiredvalidator\/init(path:)","title":"init(path: RequiredValidator<P>.PathType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/requiredvalidator\/path","title":"let path: RequiredValidator<P>.PathType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/requiredvalidator\/performvalidation(_:)","title":"func performValidation(RequiredValidator<P>.PathType.Root) throws","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/push(_:)","title":"func push((RequiredValidator<P>.Root, RequiredValidator<P>.Value) throws -> Void) -> RequiredValidator<P>","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/validate(builder:)","title":"func validate(builder: (RequiredValidator<P>) -> [AnyValidator<RequiredValidator<P>.PathType.Root>]) -> AnyValidator<RequiredValidator<P>.PathType.Root>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/requiredvalidator\/pathtype","title":"RequiredValidator.PathType","type":"typealias"},{"path":"\/documentation\/attributes\/requiredvalidator\/root","title":"RequiredValidator.Root","type":"typealias"},{"path":"\/documentation\/attributes\/requiredvalidator\/value","title":"RequiredValidator.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/requiredvalidator\/alpha()","title":"func alpha() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/alphadash()","title":"func alphadash() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/alphafirst()","title":"func alphafirst() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/alphanumeric()","title":"func alphanumeric() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/alphaunderscore()","title":"func alphaunderscore() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/alphaunderscorefirst()","title":"func alphaunderscorefirst() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/between(min:max:)","title":"func between(min: Self.Value, max: Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/blacklist(_:)","title":"func blacklist(Set<String>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/empty()","title":"func empty() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/equals(_:)","title":"func equals(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/equalsfalse()","title":"func equalsFalse() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/equalstrue()","title":"func equalsTrue() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/greaterthan(_:)","title":"func greaterThan(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/greaterthanequal(_:)","title":"func greaterThanEqual(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/greylist(_:)","title":"func greyList(Set<String>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/if(_:then:)","title":"func `if`((Self.Value) -> Bool, then: () -> AnyValidator<Self.Root>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/if(_:then:else:)","title":"func `if`((Self.Value) -> Bool, then: () -> AnyValidator<Self.Root>, else: () -> AnyValidator<Self.Root>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/in(_:)-1ycg7","title":"func `in`<P, S>(P) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/in(_:)-31rw6","title":"func `in`<P, S>(P) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/in(_:)-9zamv","title":"func `in`(Set<Self.Value>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/in(_:transform:)","title":"func `in`<P, S, S2>(P, transform: (S) -> S2) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/length(_:)","title":"func length(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/lessthan(_:)","title":"func lessThan(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/lessthanequal(_:)","title":"func lessThanEqual(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/maxlength(_:)","title":"func maxLength(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/minlength(_:)","title":"func minLength(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/notempty()","title":"func notEmpty() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/notequals(_:)","title":"func notEquals(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/numeric()","title":"func numeric() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/unique(_:)","title":"func unique<S>((Self.Value) -> S) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/requiredvalidator\/whitelist(_:)","title":"func whitelist(Set<String>) -> Self.PushValidator","type":"method"}],"path":"\/documentation\/attributes\/requiredvalidator\/validationpushprotocol-implementations","title":"ValidationPushProtocol Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/requiredvalidator","title":"RequiredValidator","type":"struct"},{"path":"\/documentation\/attributes\/validationerror","title":"ValidationError","type":"typealias"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpushprotocol\/pushvalidator","title":"PushValidator","type":"associatedtype"},{"path":"\/documentation\/attributes\/validationpushprotocol\/root","title":"Root","type":"associatedtype"},{"path":"\/documentation\/attributes\/validationpushprotocol\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/validationpushprotocol\/alpha()","title":"func alpha() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/alphadash()","title":"func alphadash() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/alphafirst()","title":"func alphafirst() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/alphanumeric()","title":"func alphanumeric() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/alphaunderscore()","title":"func alphaunderscore() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/alphaunderscorefirst()","title":"func alphaunderscorefirst() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/between(min:max:)","title":"func between(min: Self.Value, max: Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/blacklist(_:)","title":"func blacklist(Set<String>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/empty()","title":"func empty() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/equals(_:)","title":"func equals(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/equalsfalse()","title":"func equalsFalse() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/equalstrue()","title":"func equalsTrue() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/greaterthan(_:)","title":"func greaterThan(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/greaterthanequal(_:)","title":"func greaterThanEqual(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/greylist(_:)","title":"func greyList(Set<String>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/if(_:then:)","title":"func `if`((Self.Value) -> Bool, then: () -> AnyValidator<Self.Root>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/if(_:then:else:)","title":"func `if`((Self.Value) -> Bool, then: () -> AnyValidator<Self.Root>, else: () -> AnyValidator<Self.Root>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/in(_:)-5z459","title":"func `in`<P, S>(P) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/in(_:)-71mlo","title":"func `in`<P, S>(P) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/in(_:)-8jycp","title":"func `in`(Set<Self.Value>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/in(_:transform:)","title":"func `in`<P, S, S2>(P, transform: (S) -> S2) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/length(_:)","title":"func length(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/lessthan(_:)","title":"func lessThan(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/lessthanequal(_:)","title":"func lessThanEqual(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/maxlength(_:)","title":"func maxLength(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/minlength(_:)","title":"func minLength(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/notempty()","title":"func notEmpty() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/notequals(_:)","title":"func notEquals(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/numeric()","title":"func numeric() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/push(_:)","title":"func push((Self.Root, Self.Value) throws -> Void) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/unique()","title":"func unique() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/unique(_:)","title":"func unique<S>((Self.Value) -> S) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validationpushprotocol\/whitelist(_:)","title":"func whitelist(Set<String>) -> Self.PushValidator","type":"method"}],"path":"\/documentation\/attributes\/validationpushprotocol","title":"ValidationPushProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/validator\/init(path:)","title":"init(path: Validator<P>.PathType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/validator\/path","title":"let path: Validator<P>.PathType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/validator\/performvalidation(_:)","title":"func performValidation(Validator<P>.PathType.Root) throws","type":"method"},{"path":"\/documentation\/attributes\/validator\/validate(builder:)","title":"func validate(builder: (Validator<P>) -> [AnyValidator<Validator<P>.PathType.Root>]) -> AnyValidator<Validator<P>.PathType.Root>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/attributes\/validator\/pathtype","title":"Validator.PathType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/validator\/alpha()","title":"func alpha() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/alphadash()","title":"func alphadash() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/alphafirst()","title":"func alphafirst() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/alphanumeric()","title":"func alphanumeric() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/alphaunderscore()","title":"func alphaunderscore() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/alphaunderscorefirst()","title":"func alphaunderscorefirst() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/between(min:max:)","title":"func between(min: Self.Value, max: Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/blacklist(_:)","title":"func blacklist(Set<String>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/empty()","title":"func empty() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/equals(_:)","title":"func equals(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/equalsfalse()","title":"func equalsFalse() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/equalstrue()","title":"func equalsTrue() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/greaterthan(_:)","title":"func greaterThan(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/greaterthanequal(_:)","title":"func greaterThanEqual(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/greylist(_:)","title":"func greyList(Set<String>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/if(_:then:)","title":"func `if`((Self.Value) -> Bool, then: () -> AnyValidator<Self.Root>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/if(_:then:else:)","title":"func `if`((Self.Value) -> Bool, then: () -> AnyValidator<Self.Root>, else: () -> AnyValidator<Self.Root>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/in(_:)-1c359","title":"func `in`<P, S>(P) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/in(_:)-1kov2","title":"func `in`<P, S>(P) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/in(_:)-5jb3j","title":"func `in`(Set<Self.Value>) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/in(_:transform:)","title":"func `in`<P, S, S2>(P, transform: (S) -> S2) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/length(_:)","title":"func length(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/lessthan(_:)","title":"func lessThan(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/lessthanequal(_:)","title":"func lessThanEqual(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/maxlength(_:)","title":"func maxLength(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/minlength(_:)","title":"func minLength(Int) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/notempty()","title":"func notEmpty() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/notequals(_:)","title":"func notEquals(Self.Value) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/numeric()","title":"func numeric() -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/unique(_:)","title":"func unique<S>((Self.Value) -> S) -> Self.PushValidator","type":"method"},{"path":"\/documentation\/attributes\/validator\/whitelist(_:)","title":"func whitelist(Set<String>) -> Self.PushValidator","type":"method"}],"path":"\/documentation\/attributes\/validator\/validationpushprotocol-implementations","title":"ValidationPushProtocol Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/validator","title":"Validator","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock()","title":"func buildBlock() -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/makevalidator(_:)","title":"func makeValidator(() -> [AnyValidator<Root>]) -> AnyValidator<Root>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:)","title":"static func buildBlock<V0>(V0) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:)","title":"static func buildBlock<V0, V1>(V0, V1) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:_:)","title":"static func buildBlock<V0, V1, V2>(V0, V1, V2) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3>(V0, V1, V2, V3) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4>(V0, V1, V2, V3, V4) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5>(V0, V1, V2, V3, V4, V5) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6>(V0, V1, V2, V3, V4, V5, V6) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7>(V0, V1, V2, V3, V4, V5, V6, V7) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7, V8>(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:_:_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9>(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:_:_:_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10>(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> AnyValidator<Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorbuilder\/buildblock(_:_:_:_:_:_:_:_:_:_:_:_:)","title":"static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11>(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> AnyValidator<Root>","type":"method"}],"path":"\/documentation\/attributes\/validatorbuilder","title":"ValidatorBuilder","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/validatorfactory\/alpha()","title":"func alpha() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/alphadash()","title":"func alphadash() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/alphafirst()","title":"func alphafirst() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/alphanumeric()","title":"func alphanumeric() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/alphaunderscore()","title":"func alphaunderscore() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/alphaunderscorefirst()","title":"func alphaunderscorefirst() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/between(min:max:)","title":"func between(min: Value, max: Value) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/blacklist(_:)","title":"func blacklist(Set<String>) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/empty()","title":"func empty() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/equals(_:)","title":"func equals(Value) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/equalsfalse()","title":"func equalsFalse() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/equalstrue()","title":"func equalsTrue() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/greaterthan(_:)","title":"func greaterThan(Value) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/greaterthanequal(_:)","title":"func greaterThanEqual(Value) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/greylist(_:)","title":"func greyList(Set<String>) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/if(_:then:)","title":"func `if`((Value) -> Bool, then: () -> AnyValidator<Value>) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/if(_:then:else:)","title":"func `if`((Value) -> Bool, then: () -> AnyValidator<Value>, else: () -> AnyValidator<Value>) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/length(_:)","title":"func length(Int) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/lessthan(_:)","title":"func lessThan(Value) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/lessthanequal(_:)","title":"func lessThanEqual(Value) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/make(path:)","title":"func make<Path>(path: Path) -> AnyValidator<Path.Root>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/maxlength(_:)","title":"func maxLength(Int) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/minlength(_:)","title":"func minLength(Int) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/notempty()","title":"func notEmpty() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/notequals(_:)","title":"func notEquals(Value) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/numeric()","title":"func numeric() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/unique()","title":"func unique() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/unique(_:)","title":"func unique<S>((Value) -> S) -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/whitelist(_:)","title":"func whitelist(Set<String>) -> ValidatorFactory<Value>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/validatorfactory\/optional()","title":"static func optional() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/required()","title":"static func required() -> ValidatorFactory<Value>","type":"method"},{"path":"\/documentation\/attributes\/validatorfactory\/validate(builder:)","title":"static func validate(builder: (ValidatorFactory<Value>) -> AnyValidator<Value>) -> AnyValidator<Value>","type":"method"}],"path":"\/documentation\/attributes\/validatorfactory","title":"ValidatorFactory","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/validatorprotocol\/root","title":"Root","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/validatorprotocol\/performvalidation(_:)","title":"func performValidation(Self.Root) throws","type":"method"}],"path":"\/documentation\/attributes\/validatorprotocol","title":"ValidatorProtocol","type":"protocol"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/dictionaryprotocol\/key","title":"Key","type":"associatedtype"},{"path":"\/documentation\/attributes\/dictionaryprotocol\/value","title":"Value","type":"associatedtype"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/attributes\/dictionaryprotocol\/subscript(_:)","title":"subscript(Self.Key) -> Self.Value?","type":"subscript"}],"path":"\/documentation\/attributes\/dictionaryprotocol","title":"DictionaryProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/attributes\/nilable\/wrapped","title":"Wrapped","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/nilable\/isnil","title":"var isNil: Bool","type":"property"},{"path":"\/documentation\/attributes\/nilable\/wrappedvalue","title":"var wrappedValue: Self.Wrapped","type":"property"}],"path":"\/documentation\/attributes\/nilable","title":"Nilable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributeerror\/init(message:path:)-3uybx","title":"init<P>(message: String, path: P)","type":"init"},{"path":"\/documentation\/attributes\/attributeerror\/init(message:path:)-5q1v8","title":"init(message: String, path: AnyPath<Root>)","type":"init"},{"path":"\/documentation\/attributes\/attributeerror\/init(message:path:)-5sneh","title":"init<P>(message: String, path: P)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributeerror\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/attributes\/attributeerror\/path","title":"let path: AnyPath<Root>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributeerror\/iserror(forpath:)-4xq7z","title":"func isError(forPath: AnyPath<Root>) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/attributeerror\/iserror(forpath:)-9of1e","title":"func isError<P>(forPath: P) -> Bool","type":"method"},{"path":"\/documentation\/attributes\/attributeerror\/iserror(forpath:)-cp2h","title":"func isError<P>(forPath: P) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributeerror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/attributes\/attributeerror\/halfwidthcornerquoted","title":"var halfWidthCornerQuoted: String","type":"property"}],"path":"\/documentation\/attributes\/attributeerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/attributeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/attributes\/attributeerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/attributeerror","title":"AttributeError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/errorbag\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/errorbag\/allerrors","title":"var allErrors: [AttributeError<Root>]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/errorbag\/empty()","title":"func empty()","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/errors(forpath:)-458gb","title":"func errors(forPath: AnyPath<Root>) -> [AttributeError<Root>]","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/errors(forpath:)-9dqh0","title":"func errors<Path>(forPath: Path) -> [AttributeError<Root>]","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/errors(forpath:)-9qx00","title":"func errors<Path>(forPath: Path) -> [AttributeError<Root>]","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/errors(includingdescendantsforpath:)-2tg54","title":"func errors(includingDescendantsForPath: AnyPath<Root>) -> [AttributeError<Root>]","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/errors(includingdescendantsforpath:)-4psjd","title":"func errors<Path>(includingDescendantsForPath: Path) -> [AttributeError<Root>]","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/errors(includingdescendantsforpath:)-65uhu","title":"func errors<Path>(includingDescendantsForPath: Path) -> [AttributeError<Root>]","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/insert(_:)","title":"func insert(AttributeError<Root>)","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/remove(forpath:)-2vras","title":"func remove<Path>(forPath: Path)","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/remove(forpath:)-567o9","title":"func remove(forPath: AnyPath<Root>)","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/remove(forpath:)-gzxq","title":"func remove<Path>(forPath: Path)","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/remove(includingdescendantsforpath:)-1zia8","title":"func remove<Path>(includingDescendantsForPath: Path)","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/remove(includingdescendantsforpath:)-261py","title":"func remove<Path>(includingDescendantsForPath: Path)","type":"method"},{"path":"\/documentation\/attributes\/errorbag\/remove(includingdescendantsforpath:)-nea","title":"func remove(includingDescendantsForPath: AnyPath<Root>)","type":"method"}],"path":"\/documentation\/attributes\/errorbag","title":"ErrorBag","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/attributes\/language\/c","title":"case c","type":"case"},{"path":"\/documentation\/attributes\/language\/cxx","title":"case cxx","type":"case"},{"path":"\/documentation\/attributes\/language\/other","title":"case other","type":"case"},{"path":"\/documentation\/attributes\/language\/swift","title":"case swift","type":"case"},{"path":"\/documentation\/attributes\/language\/vhdl","title":"case vhdl","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/language\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/attributes\/language\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/attributes\/language\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/attributes\/language\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/attributes\/language\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/attributes\/language\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/attributes\/language\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/attributes\/language\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/attributes\/language","title":"Language","type":"enum"}],"path":"\/documentation\/attributes","title":"Attributes","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}