{"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/GettingStarted","doc:\/\/Attributes\/documentation\/Attributes\/AttributeTypes","doc:\/\/Attributes\/documentation\/Attributes\/Validators","doc:\/\/Attributes\/documentation\/Attributes\/Triggers","doc:\/\/Attributes\/documentation\/Attributes\/CreatingSchemas"],"title":"Essentials"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/Attribute","doc:\/\/Attributes\/documentation\/Attributes\/AttributeType","doc:\/\/Attributes\/documentation\/Attributes\/BlockAttribute","doc:\/\/Attributes\/documentation\/Attributes\/BlockAttributeType","doc:\/\/Attributes\/documentation\/Attributes\/Code","doc:\/\/Attributes\/documentation\/Attributes\/Expression","doc:\/\/Attributes\/documentation\/Attributes\/Label","doc:\/\/Attributes\/documentation\/Attributes\/LineAttribute","doc:\/\/Attributes\/documentation\/Attributes\/LineAttributeType"],"title":"Attributes"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/AnyPath","doc:\/\/Attributes\/documentation\/Attributes\/AnySearchablePath","doc:\/\/Attributes\/documentation\/Attributes\/CollectionSearchPath","doc:\/\/Attributes\/documentation\/Attributes\/ConvertibleSearchablePath","doc:\/\/Attributes\/documentation\/Attributes\/Path","doc:\/\/Attributes\/documentation\/Attributes\/PathContainer","doc:\/\/Attributes\/documentation\/Attributes\/PathProtocol","doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPath","doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathContainer","doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","doc:\/\/Attributes\/documentation\/Attributes\/SearchablePath","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPath","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPathProtocol"],"title":"Paths"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/BoolProperty","doc:\/\/Attributes\/documentation\/Attributes\/CodeProperty","doc:\/\/Attributes\/documentation\/Attributes\/CollectionProperty","doc:\/\/Attributes\/documentation\/Attributes\/ComplexCollectionProperty","doc:\/\/Attributes\/documentation\/Attributes\/ComplexProperty","doc:\/\/Attributes\/documentation\/Attributes\/EnumerableCollectionProperty","doc:\/\/Attributes\/documentation\/Attributes\/EnumeratedProperty","doc:\/\/Attributes\/documentation\/Attributes\/ExpressionProperty","doc:\/\/Attributes\/documentation\/Attributes\/FloatProperty","doc:\/\/Attributes\/documentation\/Attributes\/IntegerProperty","doc:\/\/Attributes\/documentation\/Attributes\/LineProperty","doc:\/\/Attributes\/documentation\/Attributes\/TableColumn","doc:\/\/Attributes\/documentation\/Attributes\/TableProperty","doc:\/\/Attributes\/documentation\/Attributes\/TextProperty"],"title":"Properties"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/AnyGroup","doc:\/\/Attributes\/documentation\/Attributes\/Attributable","doc:\/\/Attributes\/documentation\/Attributes\/AttributeGroup","doc:\/\/Attributes\/documentation\/Attributes\/ComplexProtocol","doc:\/\/Attributes\/documentation\/Attributes\/EmptyModifiable","doc:\/\/Attributes\/documentation\/Attributes\/EmptySchema","doc:\/\/Attributes\/documentation\/Attributes\/Field","doc:\/\/Attributes\/documentation\/Attributes\/Group","doc:\/\/Attributes\/documentation\/Attributes\/GroupProtocol","doc:\/\/Attributes\/documentation\/Attributes\/Modifiable","doc:\/\/Attributes\/documentation\/Attributes\/SchemaAttribute","doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol"],"title":"Schema"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/AnyTrigger","doc:\/\/Attributes\/documentation\/Attributes\/ConditionalTrigger","doc:\/\/Attributes\/documentation\/Attributes\/CustomTrigger","doc:\/\/Attributes\/documentation\/Attributes\/ForEach","doc:\/\/Attributes\/documentation\/Attributes\/IdentityTrigger","doc:\/\/Attributes\/documentation\/Attributes\/MakeAvailableTrigger","doc:\/\/Attributes\/documentation\/Attributes\/MakeUnavailableTrigger","doc:\/\/Attributes\/documentation\/Attributes\/SyncTrigger","doc:\/\/Attributes\/documentation\/Attributes\/SyncWithTransformTrigger","doc:\/\/Attributes\/documentation\/Attributes\/TriggerBuilder","doc:\/\/Attributes\/documentation\/Attributes\/TriggerProtocol","doc:\/\/Attributes\/documentation\/Attributes\/WhenChanged"],"title":"Triggers"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","doc:\/\/Attributes\/documentation\/Attributes\/ValidationError","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","doc:\/\/Attributes\/documentation\/Attributes\/Validator","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorBuilder","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol"],"title":"Validators"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/DictionaryProtocol","doc:\/\/Attributes\/documentation\/Attributes\/Nilable"],"title":"Protocols"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/AttributeError","doc:\/\/Attributes\/documentation\/Attributes\/ErrorBag"],"title":"Structures"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/Language"],"title":"Enumerations"}],"abstract":[{"type":"text","text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides"},{"type":"text","text":" "},{"type":"text","text":"the means to define, validate, and relate different forms of data."}],"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes","interfaceLanguage":"swift"},"metadata":{"role":"collection","externalID":"Attributes","title":"Attributes","symbolKind":"module","roleHeading":"Framework","modules":[{"name":"Attributes"}]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Usage","text":"Usage","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"You may depend on this package by using the "},{"identifier":"https:\/\/www.swift.org\/package-manager\/","type":"reference","isActive":true},{"type":"text","text":". Simple place this"},{"type":"text","text":" "},{"type":"text","text":"package as a dependency in your package manifest."}],"type":"paragraph"},{"code":["\/\/ swift-tools-version:5.7","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"ExamplePackage\",","    products: [","        \/\/ Products define the executables and libraries a package produces, and make them visible to other packages.","        .library(","            name: \"ExamplePackage\",","            targets: [\"ExamplePackage\"]","        ),","    ],","    dependencies: [","        \/\/ Dependencies declare other packages that this package depends on.","        \/\/ .package(url: \/* package url *\/, from: \"1.0.0\"),","\t    .package(url: \"git@github.com:mipalgu\/Attributes.git\", branch: \"main\")","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package. A target can define a module or a test suite.","        \/\/ Targets can depend on other targets in this package, and on products in packages this package depends on.","        .target(","            name: \"ExamplePackage\",","            dependencies: [\"Attributes\"]","        ),","        .testTarget(","            name: \"ExamplePackageTests\",","            dependencies: [\"ExamplePackage\", \"Attributes\"]","        )","    ]",")"],"syntax":"swift","type":"codeListing"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes"]}],"kind":"symbol","references":{"doc://Attributes/documentation/Attributes/DictionaryProtocol":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/DictionaryProtocol","abstract":[{"type":"text","text":"Protocol for specifying Dictionary types. This protocol is used to"},{"type":"text","text":" "},{"type":"text","text":"conform generics to Dictionaries."}],"title":"DictionaryProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DictionaryProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"DictionaryProtocol"}],"kind":"symbol","url":"\/documentation\/attributes\/dictionaryprotocol"},"doc://Attributes/documentation/Attributes/Validator":{"abstract":[{"text":"Container for storing validation functions for values specified with a Path.","type":"text"}],"url":"\/documentation\/attributes\/validator","type":"topic","title":"Validator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/SchemaAttribute":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SchemaAttribute","abstract":[{"type":"text","text":"SchemaAttribute defines a label, type, and validation rules for an Attribute."}],"title":"SchemaAttribute","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SchemaAttribute"}],"navigatorTitle":[{"kind":"identifier","text":"SchemaAttribute"}],"kind":"symbol","url":"\/documentation\/attributes\/schemaattribute"},"doc://Attributes/documentation/Attributes/AttributeTypes":{"role":"article","kind":"article","title":"Attribute Types","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AttributeTypes","url":"\/documentation\/attributes\/attributetypes","type":"topic","abstract":[{"type":"text","text":"This document provides an overview of the different attribute types available to the developer."}]},"doc://Attributes/documentation/Attributes/ConvertibleSearchablePath":{"kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ConvertibleSearchablePath","navigatorTitle":[{"kind":"identifier","text":"ConvertibleSearchablePath"}],"type":"topic","title":"ConvertibleSearchablePath","role":"symbol","abstract":[{"type":"text","text":"Provides methods for modifying a path such as appending path components and changing the root"},{"type":"text","text":" "},{"type":"text","text":"of the path."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConvertibleSearchablePath"}],"url":"\/documentation\/attributes\/convertiblesearchablepath"},"doc://Attributes/documentation/Attributes/TextProperty":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextProperty"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/TextProperty","abstract":[{"type":"text","text":"A Text Property."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TextProperty"}],"title":"TextProperty","url":"\/documentation\/attributes\/textproperty","role":"symbol"},"doc://Attributes/documentation/Attributes/EnumerableCollectionProperty":{"abstract":[{"type":"text","text":"An EnumerableCollection Property."}],"kind":"symbol","type":"topic","title":"EnumerableCollectionProperty","url":"\/documentation\/attributes\/enumerablecollectionproperty","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/EnumerableCollectionProperty","navigatorTitle":[{"kind":"identifier","text":"EnumerableCollectionProperty"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnumerableCollectionProperty"}]},"doc://Attributes/documentation/Attributes/ValidatorFactory":{"abstract":[{"text":"A simple interface for chaining together different validators. This factory can be reused to create a","type":"text"},{"text":" ","type":"text"},{"text":"validator that may perform the task of several validators chained together. This factory will","type":"text"},{"text":" ","type":"text"},{"text":"store a function to generate a complex validation rule that can be modified\/altered to work with","type":"text"},{"text":" ","type":"text"},{"text":"other validators. When the user is satisfied with the validation rule, this factory may be used","type":"text"},{"text":" ","type":"text"},{"text":"to generate the validator as many times as required by using the ","type":"text"},{"type":"codeVoice","code":"make"},{"text":" function.","type":"text"}],"url":"\/documentation\/attributes\/validatorfactory","type":"topic","title":"ValidatorFactory","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorFactory","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","navigatorTitle":[{"text":"ValidatorFactory","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/MakeUnavailableTrigger":{"role":"symbol","kind":"symbol","title":"MakeUnavailableTrigger","navigatorTitle":[{"text":"MakeUnavailableTrigger","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MakeUnavailableTrigger","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/MakeUnavailableTrigger","url":"\/documentation\/attributes\/makeunavailabletrigger","type":"topic","abstract":[{"text":"A trigger that removes a field when fired.","type":"text"}]},"doc://Attributes/documentation/Attributes/MakeAvailableTrigger":{"role":"symbol","kind":"symbol","title":"MakeAvailableTrigger","navigatorTitle":[{"text":"MakeAvailableTrigger","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MakeAvailableTrigger","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/MakeAvailableTrigger","url":"\/documentation\/attributes\/makeavailabletrigger","type":"topic","abstract":[{"type":"text","text":"This trigger adds a field and attribute value to an object when triggered."}]},"doc://Attributes/documentation/Attributes/BoolProperty":{"abstract":[{"type":"text","text":"A Bool Property."}],"kind":"symbol","type":"topic","title":"BoolProperty","url":"\/documentation\/attributes\/boolproperty","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/BoolProperty","navigatorTitle":[{"kind":"identifier","text":"BoolProperty"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoolProperty"}]},"doc://Attributes/documentation/Attributes/ValidatorBuilder":{"kind":"symbol","url":"\/documentation\/attributes\/validatorbuilder","title":"ValidatorBuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorBuilder","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorBuilder","type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"resultBuilder","type":"codeVoice"},{"text":" for defining multiple validators.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorBuilder","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/Nilable":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Nilable"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Nilable","abstract":[{"type":"text","text":"Provide helper properties for Optional types."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Nilable"}],"title":"Nilable","url":"\/documentation\/attributes\/nilable","role":"symbol"},"doc://Attributes/documentation/Attributes/PathProtocol":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathProtocol","abstract":[{"text":"Path to a value that can only be read and written to.","type":"text"}],"title":"PathProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"PathProtocol","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/attributes\/pathprotocol"},"doc://Attributes/documentation/Attributes/Path":{"role":"symbol","kind":"symbol","title":"Path","navigatorTitle":[{"kind":"identifier","text":"Path"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Path"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Path","url":"\/documentation\/attributes\/path","type":"topic","abstract":[{"type":"text","text":"Path that points to values that can be read and written to."}]},"doc://Attributes/documentation/Attributes/CodeProperty":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodeProperty"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/CodeProperty","abstract":[{"type":"text","text":"A Code property."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodeProperty"}],"title":"CodeProperty","url":"\/documentation\/attributes\/codeproperty","role":"symbol"},"doc://Attributes/documentation/Attributes/CreatingSchemas":{"role":"article","kind":"article","title":"Creating Schemas","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/CreatingSchemas","url":"\/documentation\/attributes\/creatingschemas","type":"topic","abstract":[{"type":"text","text":"This tutorial demonstrates how to create a schema for a simple Person view. This guide will also introduce the methods of creating"},{"type":"text","text":" "},{"type":"text","text":"validators and triggers for a view hierarchy."}]},"doc://Attributes/documentation/Attributes/Group":{"role":"symbol","kind":"symbol","title":"Group","navigatorTitle":[{"text":"Group","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Group","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Group","url":"\/documentation\/attributes\/group","type":"topic","abstract":[{"type":"text","text":"A property wrapper for defining groups of attributes."}]},"doc://Attributes/documentation/Attributes/Attribute":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Attribute","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"All types of Attributes. An attribute is a way of grouping common data"},{"type":"text","text":" "},{"type":"text","text":"types."}],"kind":"symbol","url":"\/documentation\/attributes\/attribute","title":"Attribute","navigatorTitle":[{"text":"Attribute","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Attribute"},"doc://Attributes/documentation/Attributes/AnySearchablePath":{"role":"symbol","kind":"symbol","title":"AnySearchablePath","navigatorTitle":[{"kind":"identifier","text":"AnySearchablePath"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnySearchablePath"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnySearchablePath","url":"\/documentation\/attributes\/anysearchablepath","type":"topic","abstract":[{"type":"text","text":"A type-erased SearchablePath."}]},"doc://Attributes/documentation/Attributes/Validators":{"kind":"article","role":"article","type":"topic","title":"Validators","abstract":[{"type":"text","text":"This section describes the validators that are available in the "},{"type":"codeVoice","code":"Attributes"},{"type":"text","text":" module."}],"url":"\/documentation\/attributes\/validators","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validators"},"doc://Attributes/documentation/Attributes/Attributable":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Attributable","abstract":[{"type":"text","text":"This protocol provides the bare-minimum implementation for a group of attributes"},{"type":"text","text":" "},{"type":"text","text":"that can be validated, triggered, and displayed. An instance of this protocol"},{"type":"text","text":" "},{"type":"text","text":"represents the types of attributes accessible through this interface. Additionally,"},{"type":"text","text":" "},{"type":"text","text":"this protocol defines the validators required for each attribute and all the attributes"},{"type":"text","text":" "},{"type":"text","text":"as a whole. A similar requirement is placed on the triggers, where an instance may define a"},{"type":"text","text":" "},{"type":"text","text":"trigger that reacts to target attributes within this protocol."}],"title":"Attributable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Attributable"}],"navigatorTitle":[{"kind":"identifier","text":"Attributable"}],"kind":"symbol","url":"\/documentation\/attributes\/attributable"},"https://www.swift.org/package-manager/":{"url":"https:\/\/www.swift.org\/package-manager\/","type":"link","title":"Swift Package Manager","identifier":"https:\/\/www.swift.org\/package-manager\/","titleInlineContent":[{"type":"text","text":"Swift Package Manager"}]},"doc://Attributes/documentation/Attributes/BlockAttributeType":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/BlockAttributeType","abstract":[{"type":"text","text":"The supported types for a BlockAttribute."}],"title":"BlockAttributeType","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlockAttributeType","kind":"identifier"}],"navigatorTitle":[{"text":"BlockAttributeType","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/attributes\/blockattributetype"},"doc://Attributes/documentation/Attributes/Modifiable":{"role":"symbol","kind":"symbol","title":"Modifiable","navigatorTitle":[{"text":"Modifiable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Modifiable","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Modifiable","url":"\/documentation\/attributes\/modifiable","type":"topic","abstract":[{"type":"text","text":"Provides a common means of accessing and mutating data represented using attributes."}]},"doc://Attributes/documentation/Attributes/WhenChanged":{"role":"symbol","kind":"symbol","title":"WhenChanged","navigatorTitle":[{"text":"WhenChanged","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WhenChanged","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/WhenChanged","url":"\/documentation\/attributes\/whenchanged","type":"topic","abstract":[{"type":"text","text":"A trigger that initiates another trigger when a specific value is changed. This"},{"type":"text","text":" "},{"type":"text","text":"trigger will monitor a value through a path and initiate a trigger function when the"},{"type":"text","text":" "},{"type":"text","text":"value changes."}]},"doc://Attributes/documentation/Attributes/AnyGroup":{"role":"symbol","kind":"symbol","title":"AnyGroup","navigatorTitle":[{"text":"AnyGroup","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyGroup","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyGroup","url":"\/documentation\/attributes\/anygroup","type":"topic","abstract":[{"type":"text","text":"A Type-Erased version of types conforming to "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/GroupProtocol","isActive":true},{"type":"text","text":"."}]},"doc://Attributes/documentation/Attributes/SearchablePath":{"role":"symbol","kind":"symbol","title":"SearchablePath","navigatorTitle":[{"kind":"identifier","text":"SearchablePath"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SearchablePath"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SearchablePath","url":"\/documentation\/attributes\/searchablepath","type":"topic","abstract":[{"type":"text","text":"Provides functions for searching a path for sub-paths that exist between the Root and"},{"type":"text","text":" "},{"type":"text","text":"Value pointed to by the path."}]},"doc://Attributes/documentation/Attributes/TableColumn":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TableColumn"}],"type":"topic","abstract":[{"text":"A struct that represents a single column in a table. Each column is represented using a","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/LineAttribute","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/attributes\/tablecolumn","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TableColumn"}],"title":"TableColumn","role":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/TableColumn"},"doc://Attributes/documentation/Attributes/AttributeGroup":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AttributeGroup","abstract":[{"type":"text","text":"A group of common attributes. This struct can be used to represent a group"},{"type":"text","text":" "},{"type":"text","text":"of attributes. These attributes can be made available\/unavailable (shown or not shown"},{"type":"text","text":" "},{"type":"text","text":"in an editor) or you can perform CRUD operations."}],"title":"AttributeGroup","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AttributeGroup"}],"navigatorTitle":[{"kind":"identifier","text":"AttributeGroup"}],"kind":"symbol","url":"\/documentation\/attributes\/attributegroup"},"doc://Attributes/documentation/Attributes/ExpressionProperty":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressionProperty"}],"title":"ExpressionProperty","abstract":[{"type":"text","text":"An Expression property."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ExpressionProperty","url":"\/documentation\/attributes\/expressionproperty","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExpressionProperty"}]},"doc://Attributes/documentation/Attributes/ValidationError":{"navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"url":"\/documentation\/attributes\/validationerror","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"type":"topic","title":"ValidationError","abstract":[{"text":"ValidationError is an error that occurs when validating.","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationError","kind":"symbol"},"doc://Attributes/documentation/Attributes/RequiredValidator":{"kind":"symbol","url":"\/documentation\/attributes\/requiredvalidator","title":"RequiredValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","type":"topic","abstract":[{"text":"A validator that requires values to be present (not nil) for a validation rule.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequiredValidator"}]},"doc://Attributes/documentation/Attributes/ReadOnlyPathProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/readonlypathprotocol","title":"ReadOnlyPathProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadOnlyPathProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","type":"topic","abstract":[{"text":"Path to a value that can only be read and never mutated.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ReadOnlyPathProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/BlockAttribute":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/BlockAttribute","title":"BlockAttribute","navigatorTitle":[{"text":"BlockAttribute","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlockAttribute","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Attributes that contain other attribute types or fill a block pattern."}],"url":"\/documentation\/attributes\/blockattribute"},"doc://Attributes/documentation/Attributes/LineProperty":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LineProperty"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/LineProperty","abstract":[{"type":"text","text":"A Line Property."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LineProperty"}],"title":"LineProperty","url":"\/documentation\/attributes\/lineproperty","role":"symbol"},"doc://Attributes/documentation/Attributes/ReadOnlyPath":{"abstract":[{"type":"text","text":"Path for pointing to members that are read-only."}],"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPath","url":"\/documentation\/attributes\/readonlypath","role":"symbol","navigatorTitle":[{"text":"ReadOnlyPath","kind":"identifier"}],"title":"ReadOnlyPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadOnlyPath","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/EnumeratedProperty":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnumeratedProperty"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/EnumeratedProperty","abstract":[{"type":"text","text":"An Enumerated Property."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EnumeratedProperty"}],"title":"EnumeratedProperty","url":"\/documentation\/attributes\/enumeratedproperty","role":"symbol"},"doc://Attributes/documentation/Attributes/Triggers":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Triggers","abstract":[{"type":"text","text":"This guide presents the triggers that are available to the user by default."}],"title":"Triggers","role":"article","kind":"article","url":"\/documentation\/attributes\/triggers"},"doc://Attributes/documentation/Attributes/SyncWithTransformTrigger":{"role":"symbol","kind":"symbol","title":"SyncWithTransformTrigger","navigatorTitle":[{"text":"SyncWithTransformTrigger","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyncWithTransformTrigger","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SyncWithTransformTrigger","url":"\/documentation\/attributes\/syncwithtransformtrigger","type":"topic","abstract":[{"text":"A trigger that overwrites a target value from a source value by using a transformation function.","type":"text"},{"text":" ","type":"text"},{"text":"This trigger will be enacted when the source value changes. Once the source value is changed,","type":"text"},{"text":" ","type":"text"},{"text":"this trigger will fire causing an update in the target value by using the transform function.","type":"text"}]},"doc://Attributes/documentation/Attributes/GettingStarted":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/GettingStarted","abstract":[{"type":"text","text":"This guide provides an overview of the Attributes package regarding the different features available"},{"type":"text","text":" "},{"type":"text","text":"to developers."}],"title":"Getting Started","role":"article","kind":"article","url":"\/documentation\/attributes\/gettingstarted"},"doc://Attributes/documentation/Attributes/CustomTrigger":{"role":"symbol","kind":"symbol","title":"CustomTrigger","navigatorTitle":[{"text":"CustomTrigger","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomTrigger","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/CustomTrigger","url":"\/documentation\/attributes\/customtrigger","type":"topic","abstract":[{"type":"text","text":"A trigger that can be customised to perform a function when triggered."}]},"doc://Attributes/documentation/Attributes/ErrorBag":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ErrorBag","title":"ErrorBag","navigatorTitle":[{"kind":"identifier","text":"ErrorBag"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ErrorBag"}],"type":"topic","abstract":[{"type":"text","text":"A data container for holding errors specific to a set of related Paths."}],"url":"\/documentation\/attributes\/errorbag"},"doc://Attributes/documentation/Attributes/Label":{"role":"symbol","kind":"symbol","title":"Label","navigatorTitle":[{"text":"Label","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Label","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Label","url":"\/documentation\/attributes\/label","type":"topic","abstract":[{"text":"Label is a String by default.","type":"text"}]},"doc://Attributes/documentation/Attributes/Field":{"role":"symbol","kind":"symbol","title":"Field","navigatorTitle":[{"text":"Field","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Field","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Field","url":"\/documentation\/attributes\/field","type":"topic","abstract":[{"type":"text","text":"A struct for holding a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Field"}]},{"type":"text","text":", which is an AttributeType and a label."}]},"doc://Attributes/documentation/Attributes/ValidatorProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/validatorprotocol","title":"ValidatorProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol","type":"topic","abstract":[{"text":"Protocol for defining a validation function that can be enacted on a Root object.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ReadOnlyPathContainer":{"title":"ReadOnlyPathContainer","abstract":[{"type":"text","text":"A container storing a read-only path."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathContainer","role":"symbol","type":"topic","url":"\/documentation\/attributes\/readonlypathcontainer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReadOnlyPathContainer"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReadOnlyPathContainer"}]},"doc://Attributes/documentation/Attributes/ComplexCollectionProperty":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComplexCollectionProperty"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ComplexCollectionProperty","abstract":[{"type":"text","text":"Property wrapper that defines type information for a collection attribute"},{"type":"text","text":" "},{"type":"text","text":"where the elements are complex attributes. Each element within the collection"},{"type":"text","text":" "},{"type":"text","text":"must contain the same form equivalent to type information defined in an"},{"type":"text","text":" "},{"type":"text","text":"instance of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ComplexProtocol"},{"type":"text","text":". This type information forms the "},{"type":"codeVoice","code":"Base"},{"type":"text","text":" of"},{"type":"text","text":" "},{"type":"text","text":"this property wrapper."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ComplexCollectionProperty"}],"title":"ComplexCollectionProperty","url":"\/documentation\/attributes\/complexcollectionproperty","role":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPathProtocol":{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPathProtocol","url":"\/documentation\/attributes\/validationpathprotocol","title":"ValidationPathProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPathProtocol","kind":"identifier"}],"abstract":[{"text":"Performs a validator for values pointed to by a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPath"},{"text":".","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"ValidationPathProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/AnyValidator":{"kind":"symbol","url":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValidator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","type":"topic","abstract":[{"text":"A type-erased validator.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyValidator","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPath":{"kind":"symbol","url":"\/documentation\/attributes\/validationpath","title":"ValidationPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPath","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPath","type":"topic","abstract":[{"text":"Path to a value containing validation rules.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidationPath","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/EmptyModifiable":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/EmptyModifiable","abstract":[{"type":"text","text":"A useful utility struct that enables quick testing of modifiable"},{"type":"text","text":" "},{"type":"text","text":"structs that use an attributes and meta data array."}],"title":"EmptyModifiable","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyModifiable"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyModifiable"}],"kind":"symbol","url":"\/documentation\/attributes\/emptymodifiable"},"doc://Attributes/documentation/Attributes/ComplexProperty":{"abstract":[{"type":"text","text":"A property wrapper that defines type information for a complex attribute. This struct"},{"type":"text","text":" "},{"type":"text","text":"acts as a wrapper around a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ComplexProtocol"},{"type":"text","text":" type that defines that type information"},{"type":"text","text":" "},{"type":"text","text":"for a complex attribute."}],"kind":"symbol","type":"topic","title":"ComplexProperty","url":"\/documentation\/attributes\/complexproperty","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ComplexProperty","navigatorTitle":[{"kind":"identifier","text":"ComplexProperty"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComplexProperty"}]},"doc://Attributes/documentation/Attributes/EmptySchema":{"role":"symbol","kind":"symbol","title":"EmptySchema","navigatorTitle":[{"text":"EmptySchema","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptySchema","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/EmptySchema","url":"\/documentation\/attributes\/emptyschema","type":"topic","abstract":[{"type":"text","text":"NullObject version of Schema."}]},"doc://Attributes/documentation/Attributes/TriggerProtocol":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TriggerProtocol","kind":"identifier"}],"type":"topic","abstract":[{"text":"Trigger definition. A Trigger represent a type that performs some function in response to an event","type":"text"},{"text":" ","type":"text"},{"text":"that occurs in some other part of the system. The Trigger contains a ","type":"text"},{"code":"performTrigger","type":"codeVoice"},{"text":" function","type":"text"},{"text":" ","type":"text"},{"text":"that mutates a root object. Different Trigger may perform different actions by implementing","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"performTrigger","type":"codeVoice"},{"text":" method in different ways. The TriggerProtocol also requires a helper","type":"text"},{"text":" ","type":"text"},{"text":"method called ","type":"text"},{"code":"isTriggerForPath","type":"codeVoice"},{"text":" that allows querying of whether a trigger is enacted","type":"text"},{"text":" ","type":"text"},{"text":"when a variable changes (as represented with a ","type":"text"},{"code":"Path","type":"codeVoice"},{"text":").","type":"text"}],"kind":"symbol","url":"\/documentation\/attributes\/triggerprotocol","title":"TriggerProtocol","navigatorTitle":[{"text":"TriggerProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/TriggerProtocol"},"doc://Attributes/documentation/Attributes/CollectionProperty":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/CollectionProperty","title":"CollectionProperty","navigatorTitle":[{"kind":"identifier","text":"CollectionProperty"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionProperty"}],"type":"topic","abstract":[{"type":"text","text":"A property that represents a collection. A collection is used to define an array of one specific"},{"type":"text","text":" "},{"type":"text","text":"attribute."}],"url":"\/documentation\/attributes\/collectionproperty"},"doc://Attributes/documentation/Attributes/Code":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Code"}],"title":"Code","abstract":[{"text":"A Code type which is a String by default.","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Code","url":"\/documentation\/attributes\/code","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Code"}]},"doc://Attributes/documentation/Attributes/SyncTrigger":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyncTrigger"}],"type":"topic","abstract":[{"type":"text","text":"A trigger that updates a target value with a source value when that source value changes."}],"kind":"symbol","url":"\/documentation\/attributes\/synctrigger","title":"SyncTrigger","navigatorTitle":[{"kind":"identifier","text":"SyncTrigger"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SyncTrigger"},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"},"doc://Attributes/documentation/Attributes/LineAttribute":{"title":"LineAttribute","url":"\/documentation\/attributes\/lineattribute","role":"symbol","navigatorTitle":[{"text":"LineAttribute","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A LineAttribute is an Attribute that is represented without any relation","type":"text"},{"text":" ","type":"text"},{"text":"to other Attributes.","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/LineAttribute","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LineAttribute","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ComplexProtocol":{"role":"symbol","kind":"symbol","title":"ComplexProtocol","navigatorTitle":[{"text":"ComplexProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ComplexProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ComplexProtocol","url":"\/documentation\/attributes\/complexprotocol","type":"topic","abstract":[{"type":"text","text":"A protocol for defining an "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Attributable","isActive":true},{"type":"text","text":" that represents data using a "},{"type":"codeVoice","code":"complex"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Attribute","isActive":true},{"type":"text","text":". This protocol allows a cleaner implementation by providing default"},{"type":"text","text":" "},{"type":"text","text":"paths to the respective complex data (both fields and values). To implement"},{"type":"text","text":" "},{"type":"text","text":"this protocol, the user need only provide a container that stores the data"},{"type":"text","text":" "},{"type":"text","text":"and the path to the complex attribute stored within it by setting the"},{"type":"text","text":" "},{"type":"codeVoice","code":"path"},{"type":"text","text":" property of the conforming type. Once these paths are set up, the user"},{"type":"text","text":" "},{"type":"text","text":"must provide the properties within the complex attribute as local properties"},{"type":"text","text":" "},{"type":"text","text":"of the conforming type using the property wrappers for the respective attributes."}]},"doc://Attributes/documentation/Attributes/AnyTrigger":{"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyTrigger","kind":"identifier"}],"url":"\/documentation\/attributes\/anytrigger","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyTrigger","role":"symbol","navigatorTitle":[{"text":"AnyTrigger","kind":"identifier"}],"abstract":[{"type":"text","text":"A Type-erased trigger."}],"title":"AnyTrigger"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections aren’t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/AttributeError":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AttributeError","abstract":[{"text":"Struct for checking whether paths point to values containing errors.","type":"text"}],"title":"AttributeError","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AttributeError","kind":"identifier"}],"navigatorTitle":[{"text":"AttributeError","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/attributes\/attributeerror"},"doc://Attributes/documentation/Attributes/IdentityTrigger":{"role":"symbol","kind":"symbol","title":"IdentityTrigger","navigatorTitle":[{"text":"IdentityTrigger","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdentityTrigger","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/IdentityTrigger","url":"\/documentation\/attributes\/identitytrigger","type":"topic","abstract":[{"type":"text","text":"A trigger that performs no function."}]},"doc://Attributes/documentation/Attributes/TriggerBuilder":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TriggerBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"resultBuilder","type":"codeVoice"},{"text":" for defining multiple Triggers.","type":"text"}],"kind":"symbol","url":"\/documentation\/attributes\/triggerbuilder","title":"TriggerBuilder","navigatorTitle":[{"text":"TriggerBuilder","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/TriggerBuilder"},"doc://Attributes/documentation/Attributes/ConditionalTrigger":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ConditionalTrigger","abstract":[{"type":"text","text":"A trigger that only executes when a condition is true."}],"title":"ConditionalTrigger","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalTrigger"}],"navigatorTitle":[{"kind":"identifier","text":"ConditionalTrigger"}],"kind":"symbol","url":"\/documentation\/attributes\/conditionaltrigger"},"doc://Attributes/documentation/Attributes/PathValidator":{"title":"PathValidator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","navigatorTitle":[{"kind":"identifier","text":"PathValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Provides the means to perform validations using ","type":"text"},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","isActive":true,"type":"reference"},{"text":"s. This protocol","type":"text"},{"text":" ","type":"text"},{"text":"allows the dynamic allocation of validation functions to members existing within a root","type":"text"},{"text":" ","type":"text"},{"text":"object by using a key path.","type":"text"}],"kind":"symbol","url":"\/documentation\/attributes\/pathvalidator"},"doc://Attributes/documentation/Attributes/IntegerProperty":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntegerProperty"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/IntegerProperty","abstract":[{"type":"text","text":"An Integer Property."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IntegerProperty"}],"title":"IntegerProperty","url":"\/documentation\/attributes\/integerproperty","role":"symbol"},"doc://Attributes/documentation/Attributes/AttributeType":{"role":"symbol","kind":"symbol","title":"AttributeType","navigatorTitle":[{"text":"AttributeType","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AttributeType","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AttributeType","url":"\/documentation\/attributes\/attributetype","type":"topic","abstract":[{"type":"text","text":"The type of any Attribute."}]},"doc://Attributes/documentation/Attributes/CollectionSearchPath":{"role":"symbol","kind":"symbol","title":"CollectionSearchPath","navigatorTitle":[{"kind":"identifier","text":"CollectionSearchPath"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionSearchPath"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/CollectionSearchPath","url":"\/documentation\/attributes\/collectionsearchpath","type":"topic","abstract":[{"type":"text","text":"A "},{"isActive":true,"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ConvertibleSearchablePath","type":"reference"},{"type":"text","text":" for referencing objects within a "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":". This path"},{"type":"text","text":" "},{"type":"text","text":"stores a root path to the collection and an element path from the Collection element to"},{"type":"text","text":" "},{"type":"text","text":"the value. The "},{"code":"CollectionSearchPath","type":"codeVoice"},{"type":"text","text":" can recursively use both of these paths to generate"},{"type":"text","text":" "},{"type":"text","text":"valid key paths inside a root objects collection."}]},"doc://Attributes/documentation/Attributes/TableProperty":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TableProperty"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/TableProperty","abstract":[{"type":"text","text":"A property that represents data in a table."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TableProperty"}],"title":"TableProperty","url":"\/documentation\/attributes\/tableproperty","role":"symbol"},"doc://Attributes/documentation/Attributes/FloatProperty":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatProperty"}],"title":"FloatProperty","abstract":[{"type":"text","text":"A Float Property."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/FloatProperty","url":"\/documentation\/attributes\/floatproperty","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FloatProperty"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/LineAttributeType":{"role":"symbol","kind":"symbol","title":"LineAttributeType","navigatorTitle":[{"text":"LineAttributeType","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LineAttributeType","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/LineAttributeType","url":"\/documentation\/attributes\/lineattributetype","type":"topic","abstract":[{"text":"All the possible types of a LineAttribute.","type":"text"}]},"doc://Attributes/documentation/Attributes/AnyPath":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyPath"}],"type":"topic","abstract":[{"type":"text","text":"A Path that points to a type-erased quantity within some Root type."}],"kind":"symbol","url":"\/documentation\/attributes\/anypath","title":"AnyPath","navigatorTitle":[{"kind":"identifier","text":"AnyPath"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyPath"},"doc://Attributes/documentation/Attributes/Language":{"role":"symbol","url":"\/documentation\/attributes\/language","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Language","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Language"}],"type":"topic","title":"Language","abstract":[{"type":"text","text":"Enum containing supported languages by Attributes."}],"navigatorTitle":[{"text":"Language","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ForEach":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ForEach","abstract":[{"type":"text","text":"A trigger that will apply a separate trigger to all elements within a collection."}],"title":"ForEach","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEach"}],"navigatorTitle":[{"kind":"identifier","text":"ForEach"}],"kind":"symbol","url":"\/documentation\/attributes\/foreach"},"doc://Attributes/documentation/Attributes/SchemaProtocol":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol","abstract":[{"type":"text","text":"A schema is the top-level representation of an attribute heirarchy. A schema"},{"type":"text","text":" "},{"type":"text","text":"contains type information, validators, and triggers for all attributes that"},{"type":"text","text":" "},{"type":"text","text":"are related. A schema can only contain groups, and you may use the "},{"code":"@Group","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"property wrapper to define the groups within this schema."}],"title":"SchemaProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SchemaProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"SchemaProtocol"}],"kind":"symbol","url":"\/documentation\/attributes\/schemaprotocol"},"doc://Attributes/documentation/Attributes/PathContainer":{"role":"symbol","kind":"symbol","title":"PathContainer","navigatorTitle":[{"kind":"identifier","text":"PathContainer"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathContainer"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathContainer","url":"\/documentation\/attributes\/pathcontainer","type":"topic","abstract":[{"type":"text","text":"A container that stores a writeable path."}]},"doc://Attributes/documentation/Attributes/GroupProtocol":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/GroupProtocol","abstract":[{"type":"text","text":"A Protocol for representing attributes that are grouped together. This protocol can"},{"type":"text","text":" "},{"type":"text","text":"be used to group together all types of attributes including block attribute"},{"type":"text","text":" "},{"type":"text","text":"and line attributes. This protocol will be used in schemas to represent type information"},{"type":"text","text":" "},{"type":"text","text":"for grouped properties."}],"title":"GroupProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GroupProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"GroupProtocol"}],"kind":"symbol","url":"\/documentation\/attributes\/groupprotocol"},"doc://Attributes/documentation/Attributes/Expression":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}],"type":"topic","abstract":[{"text":"Expression is a String by default.","type":"text"}],"url":"\/documentation\/attributes\/expression","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"title":"Expression","role":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Expression"}}}