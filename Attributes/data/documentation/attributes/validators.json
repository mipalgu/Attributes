{"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes"]]},"variants":[{"paths":["\/documentation\/attributes\/validators"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Attributes"}],"title":"Validators","role":"article","roleHeading":"Article"},"primaryContentSections":[{"content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"text":"A validator can be considered a function that takes a value and throws errors when that value is incorrect.","type":"text"},{"text":" ","type":"text"},{"text":"The ","type":"text"},{"type":"codeVoice","code":"Attributes"},{"text":" module provides several validators that a developer can use to validate the raw data","type":"text"},{"text":" ","type":"text"},{"text":"for different attributes. We will explore how to create validators and chain them to create custom validation","type":"text"},{"text":" ","type":"text"},{"text":"rules in the coming documents. This guide introduces the validators available in this package","type":"text"},{"text":" ","type":"text"},{"text":"and what each validation rule accomplishes.","type":"text"}],"type":"paragraph"},{"text":"Core Validators","level":2,"anchor":"Core-Validators","type":"heading"},{"inlineContent":[{"type":"text","text":"Below are the core validators used to validate the raw data for different attributes. You will typically not create these validators outright but instead"},{"type":"text","text":" "},{"type":"text","text":"use a "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","isActive":true},{"type":"text","text":" to create them. The "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","isActive":true},{"type":"text","text":" is a struct with static functions that generate the core validators."}],"type":"paragraph"},{"rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Validator"}]}],[{"type":"paragraph","inlineContent":[{"text":"Description","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator"}]}],[{"type":"paragraph","inlineContent":[{"text":"This validator marks an attribute as optional. The validator will not throw an error if the attribute is not present in the raw data.","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","isActive":true}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"This validator marks an attribute as required. The validator will throw an error if the attribute is not present in the raw data."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","isActive":true}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"This validator is used to create custom validation functions."}]}]],[[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"This validator represents a type-erased validator that can validate any attribute with a validation function."}]}]]],"header":"row","type":"table"},{"text":"Validation Rules","level":2,"anchor":"Validation-Rules","type":"heading"},{"inlineContent":[{"type":"text","text":"We will now examine the pre-defined rules for the different attributes. These rules exist within the "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","isActive":true},{"type":"text","text":" struct or "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"rows":[[[{"inlineContent":[{"type":"text","text":"Validation Rule"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Description"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Supported Attributes"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"alpha"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is an alphabetic string."}],"type":"paragraph"}],[{"inlineContent":[{"code":"LineAttributeType.line","type":"codeVoice"},{"type":"text","text":", "},{"code":"LineAttributeType.expression","type":"codeVoice"},{"type":"text","text":", "},{"code":"BlockAttributeType.code","type":"codeVoice"},{"type":"text","text":", "},{"code":"BlockAttributeType.text","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"alphadash"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is an alphanumeric string with dashes and underscores."}],"type":"paragraph"}],[{"inlineContent":[{"code":"LineAttributeType.line","type":"codeVoice"},{"type":"text","text":", "},{"code":"LineAttributeType.expression","type":"codeVoice"},{"type":"text","text":", "},{"code":"BlockAttributeType.code","type":"codeVoice"},{"type":"text","text":", "},{"code":"BlockAttributeType.text","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"alphafirst","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule validates that the attribute starts with an alphabetic character.","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"LineAttributeType.line"},{"type":"text","text":", "},{"type":"codeVoice","code":"LineAttributeType.expression"},{"type":"text","text":", "},{"type":"codeVoice","code":"BlockAttributeType.code"},{"type":"text","text":", "},{"type":"codeVoice","code":"BlockAttributeType.text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"alphanumeric"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is an alphanumeric string."}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"LineAttributeType.line"},{"type":"text","text":", "},{"type":"codeVoice","code":"LineAttributeType.expression"},{"type":"text","text":", "},{"type":"codeVoice","code":"BlockAttributeType.code"},{"type":"text","text":", "},{"type":"codeVoice","code":"BlockAttributeType.text"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"alphaunderscore","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule validates that the attribute is an alphanumeric string with underscores.","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"LineAttributeType.line"},{"type":"text","text":", "},{"type":"codeVoice","code":"LineAttributeType.expression"},{"type":"text","text":", "},{"type":"codeVoice","code":"BlockAttributeType.code"},{"type":"text","text":", "},{"type":"codeVoice","code":"BlockAttributeType.text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"alphaunderscorefirst"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute starts with an alphabetic character or an underscore."}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"LineAttributeType.line"},{"type":"text","text":", "},{"type":"codeVoice","code":"LineAttributeType.expression"},{"type":"text","text":", "},{"type":"codeVoice","code":"BlockAttributeType.code"},{"type":"text","text":", "},{"type":"codeVoice","code":"BlockAttributeType.text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"between"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is between the given range."}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Comparable Attributes"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"blacklist","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is not in the given Set."}],"type":"paragraph"}],[{"inlineContent":[{"code":"LineAttributeType.line","type":"codeVoice"},{"text":", ","type":"text"},{"code":"LineAttributeType.expression","type":"codeVoice"},{"text":", ","type":"text"},{"code":"BlockAttributeType.code","type":"codeVoice"},{"text":", ","type":"text"},{"code":"BlockAttributeType.text","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"empty"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is empty."}],"type":"paragraph"}],[{"inlineContent":[{"text":"Collection Attributes","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"equals"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule validates that the attribute is equal to the given value.","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Equatable Attributes"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"equalsFalse"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule validates that the attribute is equal to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"code":"LineAttributeType.bool","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"equalsTrue"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule validates that the attribute is equal to ","type":"text"},{"code":"true","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"code":"LineAttributeType.bool","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"greaterThan"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule validates that the attribute is greater than the given value.","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Comparable Attributes"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"greaterThanEqual"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is greater than or equal to the given value."}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Comparable Attributes"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"greyList","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute contains a substring that is in the given Set."}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"LineAttributeType.line"},{"type":"text","text":", "},{"type":"codeVoice","code":"LineAttributeType.expression"},{"type":"text","text":", "},{"type":"codeVoice","code":"BlockAttributeType.code"},{"type":"text","text":", "},{"type":"codeVoice","code":"BlockAttributeType.text"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"if","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule creates a conditional validator. The validator will only be applied if the condition is true. This validator may optionally take an "},{"type":"codeVoice","code":"else"},{"type":"text","text":" function that is executed in the case the condition is not true"}],"type":"paragraph"}],[{"inlineContent":[{"text":"All","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"in"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is in the given Set."}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Equatable and Hashable Attributes"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"length","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute has the given length."}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Collection Attributes"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"lessThan"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is less than the given value."}],"type":"paragraph"}],[{"inlineContent":[{"text":"Comparable Attributes","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"lessThanEqual","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is less than or equal to the given value."}],"type":"paragraph"}],[{"inlineContent":[{"text":"Comparable Attributes","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"maxLength"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute has a length less than or equal to the given length."}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Collection Attributes"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"minLength"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule validates that the attribute has a length greater than or equal to the given length.","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Collection Attributes","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"notEmpty","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule validates that the attribute is not empty.","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Collection Attributes"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"notEquals"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule validates that the attribute is not equal to the given value.","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Equatable Attributes"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"numeric","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule validates that the attribute is a numeric string.","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"code":"LineAttributeType.line","type":"codeVoice"},{"text":", ","type":"text"},{"code":"LineAttributeType.expression","type":"codeVoice"},{"text":", ","type":"text"},{"code":"BlockAttributeType.code","type":"codeVoice"},{"text":", ","type":"text"},{"code":"BlockAttributeType.text","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"optional"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule marks an attribute as optional. The validator will not throw an error if the attribute is not present in the raw data."}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"All"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"required"}],"type":"paragraph"}],[{"inlineContent":[{"text":"This rule marks an attribute as required. The validator will throw an error if the attribute is not present in the raw data.","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"All"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"unique"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute has unique elements."}],"type":"paragraph"}],[{"inlineContent":[{"text":"Sequence Attributes","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"whitelist"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"This rule validates that the attribute is in the given Set."}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"LineAttributeType.line"},{"text":", ","type":"text"},{"type":"codeVoice","code":"LineAttributeType.expression"},{"text":", ","type":"text"},{"type":"codeVoice","code":"BlockAttributeType.code"},{"text":", ","type":"text"},{"type":"codeVoice","code":"BlockAttributeType.text"}],"type":"paragraph"}]]],"header":"row","type":"table"},{"inlineContent":[{"type":"text","text":"See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol"},{"type":"text","text":" for a more detailed description of each rule."}],"type":"paragraph"}],"kind":"content"}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/Validators"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"This section describes the validators that are available in the "},{"type":"codeVoice","code":"Attributes"},{"type":"text","text":" module."}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/GettingStarted","doc:\/\/Attributes\/documentation\/Attributes\/AttributeTypes","doc:\/\/Attributes\/documentation\/Attributes\/Triggers","doc:\/\/Attributes\/documentation\/Attributes\/CreatingSchemas"],"title":"Essentials","generated":true}],"references":{"doc://Attributes/documentation/Attributes/GettingStarted":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/GettingStarted","abstract":[{"type":"text","text":"This guide provides an overview of the Attributes package regarding the different features available"},{"type":"text","text":" "},{"type":"text","text":"to developers."}],"title":"Getting Started","role":"article","kind":"article","url":"\/documentation\/attributes\/gettingstarted"},"doc://Attributes/documentation/Attributes/ValidatorFactory":{"abstract":[{"text":"A simple interface for chaining together different validators. This factory can be reused to create a","type":"text"},{"text":" ","type":"text"},{"text":"validator that may perform the task of several validators chained together. This factory will","type":"text"},{"text":" ","type":"text"},{"text":"store a function to generate a complex validation rule that can be modified\/altered to work with","type":"text"},{"text":" ","type":"text"},{"text":"other validators. When the user is satisfied with the validation rule, this factory may be used","type":"text"},{"text":" ","type":"text"},{"text":"to generate the validator as many times as required by using the ","type":"text"},{"type":"codeVoice","code":"make"},{"text":" function.","type":"text"}],"url":"\/documentation\/attributes\/validatorfactory","type":"topic","title":"ValidatorFactory","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorFactory","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","navigatorTitle":[{"text":"ValidatorFactory","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/Validator":{"abstract":[{"text":"Container for storing validation functions for values specified with a Path.","type":"text"}],"url":"\/documentation\/attributes\/validator","type":"topic","title":"Validator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/CreatingSchemas":{"role":"article","kind":"article","title":"Creating Schemas","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/CreatingSchemas","url":"\/documentation\/attributes\/creatingschemas","type":"topic","abstract":[{"type":"text","text":"This tutorial demonstrates how to create a schema for a simple Person view. This guide will also introduce the methods of creating"},{"type":"text","text":" "},{"type":"text","text":"validators and triggers for a view hierarchy."}]},"doc://Attributes/documentation/Attributes/Triggers":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Triggers","abstract":[{"type":"text","text":"This guide presents the triggers that are available to the user by default."}],"title":"Triggers","role":"article","kind":"article","url":"\/documentation\/attributes\/triggers"},"doc://Attributes/documentation/Attributes/RequiredValidator":{"kind":"symbol","url":"\/documentation\/attributes\/requiredvalidator","title":"RequiredValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","type":"topic","abstract":[{"text":"A validator that requires values to be present (not nil) for a validation rule.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequiredValidator"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/AnyValidator":{"kind":"symbol","url":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValidator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","type":"topic","abstract":[{"text":"A type-erased validator.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyValidator","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections aren’t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/AttributeTypes":{"role":"article","kind":"article","title":"Attribute Types","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AttributeTypes","url":"\/documentation\/attributes\/attributetypes","type":"topic","abstract":[{"type":"text","text":"This document provides an overview of the different attribute types available to the developer."}]},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"}}}