{"metadata":{"modules":[{"name":"Attributes"}],"symbolKind":"init","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":")"}],"externalID":"s:10Attributes12AnyValidatorVyACyxGqd__c4RootQyd__RszAA0C8ProtocolRd__lufc","role":"symbol","title":"init(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/anyvalidator\/init(_:)-7etpi"]}],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"validator","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"ValidatorProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10Attributes17ValidatorProtocolP","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol"}]}],"kind":"declarations"},{"parameters":[{"name":"validator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A validator to use with this validator."}]}]}],"kind":"parameters"}],"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator\/init(_:)-7etpi","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Initialise this validator with another validator. This validator will act"},{"type":"text","text":" "},{"type":"text","text":"in the same way as the given validator but as a type-erased version."}],"references":{"doc://Attributes/documentation/Attributes/AnyValidator":{"kind":"symbol","url":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValidator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","type":"topic","abstract":[{"text":"A type-erased validator.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyValidator","kind":"identifier"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidatorProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/validatorprotocol","title":"ValidatorProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol","type":"topic","abstract":[{"text":"Protocol for defining a validation function that can be enacted on a Root object.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/AnyValidator/init(_:)-7etpi":{"kind":"symbol","role":"symbol","title":"init(_:)","url":"\/documentation\/attributes\/anyvalidator\/init(_:)-7etpi","abstract":[{"text":"Initialise this validator with another validator. This validator will act","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the same way as the given validator but as a type-erased version."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator\/init(_:)-7etpi","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"}}}