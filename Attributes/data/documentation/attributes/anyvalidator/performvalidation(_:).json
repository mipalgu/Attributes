{"variants":[{"paths":["\/documentation\/attributes\/anyvalidator\/performvalidation(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator\/performValidation(_:)"},"kind":"symbol","abstract":[{"type":"text","text":"Perform a validation of a root value. This function uses the underlying validation rules specified"},{"type":"text","text":" "},{"type":"text","text":"in the initialiser."}],"metadata":{"role":"symbol","modules":[{"name":"Attributes"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performValidation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"performValidation(_:)","roleHeading":"Instance Method","externalID":"s:10Attributes12AnyValidatorV17performValidationyyxKF","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performValidation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"root","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The value to validate.","type":"text"}]}],"name":"root"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Throws an Error when the validation is unsusccessful.","type":"text"}]}],"style":"note"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Attributes/documentation/Attributes/AnyValidator":{"kind":"symbol","url":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValidator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","type":"topic","abstract":[{"text":"A type-erased validator.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyValidator","kind":"identifier"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/AnyValidator/performValidation(_:)":{"abstract":[{"text":"Perform a validation of a root value. This function uses the underlying validation rules specified","type":"text"},{"text":" ","type":"text"},{"text":"in the initialiser.","type":"text"}],"title":"performValidation(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performValidation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","role":"symbol","url":"\/documentation\/attributes\/anyvalidator\/performvalidation(_:)","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator\/performValidation(_:)","kind":"symbol"}}}