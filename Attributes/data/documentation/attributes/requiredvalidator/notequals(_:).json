{"metadata":{"title":"notEquals(_:)","externalID":"s:10Attributes22ValidationPushProtocolPAASQ5ValueRpzrlE9notEqualsy0C9ValidatorQzAEF::SYNTHESIZED::s:10Attributes17RequiredValidatorV","role":"symbol","modules":[{"name":"Attributes"}],"extendedModule":"Attributes","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"notEquals"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]}},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/requiredvalidator\/notequals(_:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"text":"Satisfies a validation function when a given value is not equal to a specific value.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/ValidationPushProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/notEquals(_:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"notEquals","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"A new validator that passes when a given parameter is not equal","type":"text"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value the causes the validation not to pass. The validator"},{"type":"text","text":" "},{"type":"text","text":"will only pass when a given value is not equal to this "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}]}]}]}],"references":{"doc://Attributes/documentation/Attributes/RequiredValidator/notEquals(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Satisfies a validation function when a given value is not equal to a specific value."}],"url":"\/documentation\/attributes\/requiredvalidator\/notequals(_:)","title":"notEquals(_:)","type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/notEquals(_:)","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"notEquals","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}]},"doc://Attributes/documentation/Attributes/RequiredValidator":{"kind":"symbol","url":"\/documentation\/attributes\/requiredvalidator","title":"RequiredValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","type":"topic","abstract":[{"text":"A validator that requires values to be present (not nil) for a validation rule.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequiredValidator"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/RequiredValidator/ValidationPushProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/ValidationPushProtocol-Implementations","url":"\/documentation\/attributes\/requiredvalidator\/validationpushprotocol-implementations","title":"ValidationPushProtocol Implementations","abstract":[],"type":"topic","role":"collectionGroup"}}}