{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphadash"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A new validator that verifies a string only contains alphabetic, numeric, underscores","type":"text"},{"text":" ","type":"text"},{"text":"or dash characters.","type":"text"}]}]}],"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/alphadash()","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"All characters must be alphabetic (a-z, A-Z), numeric (0-9), underscores (_) or dashes (-)."}],"metadata":{"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}]},"roleHeading":"Instance Method","title":"alphadash()","extendedModule":"Attributes","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alphadash","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"symbolKind":"method","modules":[{"name":"Attributes"}],"externalID":"s:10Attributes22ValidationPushProtocolPAASy5ValueRpzrlE9alphadash0C9ValidatorQzyF::SYNTHESIZED::s:10Attributes17RequiredValidatorV"},"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/ValidationPushProtocol-Implementations"]]},"variants":[{"paths":["\/documentation\/attributes\/requiredvalidator\/alphadash()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://Attributes/documentation/Attributes/RequiredValidator/alphadash()":{"role":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/alphadash()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphadash"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"abstract":[{"type":"text","text":"All characters must be alphabetic (a-z, A-Z), numeric (0-9), underscores (_) or dashes (-)."}],"title":"alphadash()","url":"\/documentation\/attributes\/requiredvalidator\/alphadash()"},"doc://Attributes/documentation/Attributes/RequiredValidator":{"kind":"symbol","url":"\/documentation\/attributes\/requiredvalidator","title":"RequiredValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","type":"topic","abstract":[{"text":"A validator that requires values to be present (not nil) for a validation rule.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequiredValidator"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/RequiredValidator/ValidationPushProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/ValidationPushProtocol-Implementations","url":"\/documentation\/attributes\/requiredvalidator\/validationpushprotocol-implementations","title":"ValidationPushProtocol Implementations","abstract":[],"type":"topic","role":"collectionGroup"}}}