{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SchemaProtocol"}],"languages":["swift"]}],"kind":"declarations"}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol\/Root"]},{"title":"Instance Properties","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol\/groups-1j6bm","doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol\/trigger-m0ka"]},{"title":"Instance Methods","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol\/makeValidator(root:)-637v5"]},{"title":"Type Aliases","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol\/Group"]}],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes"]]},"seeAlsoSections":[{"generated":true,"title":"Schema","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/AnyGroup","doc:\/\/Attributes\/documentation\/Attributes\/Attributable","doc:\/\/Attributes\/documentation\/Attributes\/AttributeGroup","doc:\/\/Attributes\/documentation\/Attributes\/ComplexProtocol","doc:\/\/Attributes\/documentation\/Attributes\/EmptyModifiable","doc:\/\/Attributes\/documentation\/Attributes\/EmptySchema","doc:\/\/Attributes\/documentation\/Attributes\/Field","doc:\/\/Attributes\/documentation\/Attributes\/Group","doc:\/\/Attributes\/documentation\/Attributes\/GroupProtocol","doc:\/\/Attributes\/documentation\/Attributes\/Modifiable","doc:\/\/Attributes\/documentation\/Attributes\/SchemaAttribute"]}],"variants":[{"paths":["\/documentation\/attributes\/schemaprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A schema is the top-level representation of an attribute heirarchy. A schema","type":"text"},{"text":" ","type":"text"},{"text":"contains type information, validators, and triggers for all attributes that","type":"text"},{"text":" ","type":"text"},{"text":"are related. A schema can only contain groups, and you may use the ","type":"text"},{"code":"@Group","type":"codeVoice"},{"text":" ","type":"text"},{"text":"property wrapper to define the groups within this schema.","type":"text"}],"metadata":{"roleHeading":"Protocol","externalID":"s:10Attributes14SchemaProtocolP","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SchemaProtocol"}],"modules":[{"name":"Attributes"}],"title":"SchemaProtocol","symbolKind":"protocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SchemaProtocol"}]},"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol","interfaceLanguage":"swift"},"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/EmptySchema"],"type":"conformingTypes"}],"references":{"doc://Attributes/documentation/Attributes/SchemaProtocol/Root":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Root"},{"kind":"text","text":" : "},{"text":"Modifiable","kind":"typeIdentifier","preciseIdentifier":"s:10Attributes10ModifiableP"}],"title":"Root","abstract":[{"text":"The data container holding the groups defined by this schema.","type":"text"}],"type":"topic","role":"symbol","required":true,"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol\/Root","kind":"symbol","url":"\/documentation\/attributes\/schemaprotocol\/root"},"doc://Attributes/documentation/Attributes/ComplexProtocol":{"role":"symbol","kind":"symbol","title":"ComplexProtocol","navigatorTitle":[{"text":"ComplexProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ComplexProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ComplexProtocol","url":"\/documentation\/attributes\/complexprotocol","type":"topic","abstract":[{"type":"text","text":"A protocol for defining an "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Attributable","isActive":true},{"type":"text","text":" that represents data using a "},{"type":"codeVoice","code":"complex"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Attribute","isActive":true},{"type":"text","text":". This protocol allows a cleaner implementation by providing default"},{"type":"text","text":" "},{"type":"text","text":"paths to the respective complex data (both fields and values). To implement"},{"type":"text","text":" "},{"type":"text","text":"this protocol, the user need only provide a container that stores the data"},{"type":"text","text":" "},{"type":"text","text":"and the path to the complex attribute stored within it by setting the"},{"type":"text","text":" "},{"type":"codeVoice","code":"path"},{"type":"text","text":" property of the conforming type. Once these paths are set up, the user"},{"type":"text","text":" "},{"type":"text","text":"must provide the properties within the complex attribute as local properties"},{"type":"text","text":" "},{"type":"text","text":"of the conforming type using the property wrappers for the respective attributes."}]},"doc://Attributes/documentation/Attributes/GroupProtocol":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/GroupProtocol","abstract":[{"type":"text","text":"A Protocol for representing attributes that are grouped together. This protocol can"},{"type":"text","text":" "},{"type":"text","text":"be used to group together all types of attributes including block attribute"},{"type":"text","text":" "},{"type":"text","text":"and line attributes. This protocol will be used in schemas to represent type information"},{"type":"text","text":" "},{"type":"text","text":"for grouped properties."}],"title":"GroupProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GroupProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"GroupProtocol"}],"kind":"symbol","url":"\/documentation\/attributes\/groupprotocol"},"doc://Attributes/documentation/Attributes/Attribute":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Attribute","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"All types of Attributes. An attribute is a way of grouping common data"},{"type":"text","text":" "},{"type":"text","text":"types."}],"kind":"symbol","url":"\/documentation\/attributes\/attribute","title":"Attribute","navigatorTitle":[{"text":"Attribute","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Attribute"},"doc://Attributes/documentation/Attributes/Attributable":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Attributable","abstract":[{"type":"text","text":"This protocol provides the bare-minimum implementation for a group of attributes"},{"type":"text","text":" "},{"type":"text","text":"that can be validated, triggered, and displayed. An instance of this protocol"},{"type":"text","text":" "},{"type":"text","text":"represents the types of attributes accessible through this interface. Additionally,"},{"type":"text","text":" "},{"type":"text","text":"this protocol defines the validators required for each attribute and all the attributes"},{"type":"text","text":" "},{"type":"text","text":"as a whole. A similar requirement is placed on the triggers, where an instance may define a"},{"type":"text","text":" "},{"type":"text","text":"trigger that reacts to target attributes within this protocol."}],"title":"Attributable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Attributable"}],"navigatorTitle":[{"kind":"identifier","text":"Attributable"}],"kind":"symbol","url":"\/documentation\/attributes\/attributable"},"doc://Attributes/documentation/Attributes/Field":{"role":"symbol","kind":"symbol","title":"Field","navigatorTitle":[{"text":"Field","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Field","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Field","url":"\/documentation\/attributes\/field","type":"topic","abstract":[{"type":"text","text":"A struct for holding a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Field"}]},{"type":"text","text":", which is an AttributeType and a label."}]},"doc://Attributes/documentation/Attributes/SchemaProtocol/groups-1j6bm":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"groups"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:10Attributes8AnyGroupV","text":"AnyGroup"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Root","kind":"typeIdentifier"},{"text":">]","kind":"text"}],"type":"topic","abstract":[{"text":"The groups within this schema.","type":"text"}],"url":"\/documentation\/attributes\/schemaprotocol\/groups-1j6bm","kind":"symbol","required":true,"title":"groups","defaultImplementations":1,"role":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol\/groups-1j6bm"},"doc://Attributes/documentation/Attributes/EmptyModifiable":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/EmptyModifiable","abstract":[{"type":"text","text":"A useful utility struct that enables quick testing of modifiable"},{"type":"text","text":" "},{"type":"text","text":"structs that use an attributes and meta data array."}],"title":"EmptyModifiable","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyModifiable"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyModifiable"}],"kind":"symbol","url":"\/documentation\/attributes\/emptymodifiable"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/Group":{"role":"symbol","kind":"symbol","title":"Group","navigatorTitle":[{"text":"Group","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Group","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Group","url":"\/documentation\/attributes\/group","type":"topic","abstract":[{"type":"text","text":"A property wrapper for defining groups of attributes."}]},"doc://Attributes/documentation/Attributes/AnyGroup":{"role":"symbol","kind":"symbol","title":"AnyGroup","navigatorTitle":[{"text":"AnyGroup","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyGroup","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyGroup","url":"\/documentation\/attributes\/anygroup","type":"topic","abstract":[{"type":"text","text":"A Type-Erased version of types conforming to "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/GroupProtocol","isActive":true},{"type":"text","text":"."}]},"doc://Attributes/documentation/Attributes/Modifiable":{"role":"symbol","kind":"symbol","title":"Modifiable","navigatorTitle":[{"text":"Modifiable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Modifiable","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Modifiable","url":"\/documentation\/attributes\/modifiable","type":"topic","abstract":[{"type":"text","text":"Provides a common means of accessing and mutating data represented using attributes."}]},"doc://Attributes/documentation/Attributes/SchemaProtocol/makeValidator(root:)-637v5":{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol\/makeValidator(root:)-637v5","abstract":[{"type":"text","text":"Create a validator for every group within this schema for a given"},{"type":"text","text":" "},{"type":"text","text":"root."}],"type":"topic","title":"makeValidator(root:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeValidator"},{"kind":"text","text":"("},{"kind":"externalParam","text":"root"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Attributes12AnyValidatorV","text":"AnyValidator"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">","kind":"text"}],"defaultImplementations":1,"url":"\/documentation\/attributes\/schemaprotocol\/makevalidator(root:)-637v5","kind":"symbol","role":"symbol","required":true},"doc://Attributes/documentation/Attributes/SchemaAttribute":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SchemaAttribute","abstract":[{"type":"text","text":"SchemaAttribute defines a label, type, and validation rules for an Attribute."}],"title":"SchemaAttribute","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SchemaAttribute"}],"navigatorTitle":[{"kind":"identifier","text":"SchemaAttribute"}],"kind":"symbol","url":"\/documentation\/attributes\/schemaattribute"},"doc://Attributes/documentation/Attributes/SchemaProtocol/trigger-m0ka":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trigger"},{"kind":"text","text":": "},{"text":"AnyTrigger","kind":"typeIdentifier","preciseIdentifier":"s:10Attributes10AnyTriggerV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"trigger","abstract":[{"text":"The trigger for every group within this schema.","type":"text"}],"type":"topic","role":"symbol","defaultImplementations":1,"required":true,"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol\/trigger-m0ka","kind":"symbol","url":"\/documentation\/attributes\/schemaprotocol\/trigger-m0ka"},"doc://Attributes/documentation/Attributes/AttributeGroup":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AttributeGroup","abstract":[{"type":"text","text":"A group of common attributes. This struct can be used to represent a group"},{"type":"text","text":" "},{"type":"text","text":"of attributes. These attributes can be made available\/unavailable (shown or not shown"},{"type":"text","text":" "},{"type":"text","text":"in an editor) or you can perform CRUD operations."}],"title":"AttributeGroup","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AttributeGroup"}],"navigatorTitle":[{"kind":"identifier","text":"AttributeGroup"}],"kind":"symbol","url":"\/documentation\/attributes\/attributegroup"},"doc://Attributes/documentation/Attributes/SchemaProtocol/Group":{"kind":"symbol","abstract":[{"type":"text","text":"A group definition."}],"navigatorTitle":[{"kind":"identifier","text":"Group"}],"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol\/Group","title":"SchemaProtocol.Group","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Group"}],"role":"symbol","url":"\/documentation\/attributes\/schemaprotocol\/group"},"doc://Attributes/documentation/Attributes/SchemaProtocol":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/SchemaProtocol","abstract":[{"type":"text","text":"A schema is the top-level representation of an attribute heirarchy. A schema"},{"type":"text","text":" "},{"type":"text","text":"contains type information, validators, and triggers for all attributes that"},{"type":"text","text":" "},{"type":"text","text":"are related. A schema can only contain groups, and you may use the "},{"code":"@Group","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"property wrapper to define the groups within this schema."}],"title":"SchemaProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SchemaProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"SchemaProtocol"}],"kind":"symbol","url":"\/documentation\/attributes\/schemaprotocol"},"doc://Attributes/documentation/Attributes/EmptySchema":{"role":"symbol","kind":"symbol","title":"EmptySchema","navigatorTitle":[{"text":"EmptySchema","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptySchema","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/EmptySchema","url":"\/documentation\/attributes\/emptyschema","type":"topic","abstract":[{"type":"text","text":"NullObject version of Schema."}]}}}