{"kind":"symbol","metadata":{"externalID":"s:10Attributes15ValidationErrora","roleHeading":"Type Alias","navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"symbolKind":"typealias","modules":[{"name":"Attributes"}],"title":"ValidationError","role":"symbol"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","doc:\/\/Attributes\/documentation\/Attributes\/Validator","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorBuilder","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol"],"title":"Validators"}],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":"> = ","kind":"text"},{"text":"AttributeError","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AttributeError","preciseIdentifier":"s:10Attributes14AttributeErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/validationerror"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"ValidationError is an error that occurs when validating."}],"sections":[],"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationError","interfaceLanguage":"swift"},"references":{"doc://Attributes/documentation/Attributes/AnyValidator":{"kind":"symbol","url":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValidator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","type":"topic","abstract":[{"text":"A type-erased validator.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyValidator","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidatorBuilder":{"kind":"symbol","url":"\/documentation\/attributes\/validatorbuilder","title":"ValidatorBuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorBuilder","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorBuilder","type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"resultBuilder","type":"codeVoice"},{"text":" for defining multiple validators.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorBuilder","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/Validator":{"abstract":[{"text":"Container for storing validation functions for values specified with a Path.","type":"text"}],"url":"\/documentation\/attributes\/validator","type":"topic","title":"Validator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidatorProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/validatorprotocol","title":"ValidatorProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol","type":"topic","abstract":[{"text":"Protocol for defining a validation function that can be enacted on a Root object.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/PathValidator":{"title":"PathValidator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","navigatorTitle":[{"kind":"identifier","text":"PathValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Provides the means to perform validations using ","type":"text"},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","isActive":true,"type":"reference"},{"text":"s. This protocol","type":"text"},{"text":" ","type":"text"},{"text":"allows the dynamic allocation of validation functions to members existing within a root","type":"text"},{"text":" ","type":"text"},{"text":"object by using a key path.","type":"text"}],"kind":"symbol","url":"\/documentation\/attributes\/pathvalidator"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidatorFactory":{"abstract":[{"text":"A simple interface for chaining together different validators. This factory can be reused to create a","type":"text"},{"text":" ","type":"text"},{"text":"validator that may perform the task of several validators chained together. This factory will","type":"text"},{"text":" ","type":"text"},{"text":"store a function to generate a complex validation rule that can be modified\/altered to work with","type":"text"},{"text":" ","type":"text"},{"text":"other validators. When the user is satisfied with the validation rule, this factory may be used","type":"text"},{"text":" ","type":"text"},{"text":"to generate the validator as many times as required by using the ","type":"text"},{"type":"codeVoice","code":"make"},{"text":" function.","type":"text"}],"url":"\/documentation\/attributes\/validatorfactory","type":"topic","title":"ValidatorFactory","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorFactory","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","navigatorTitle":[{"text":"ValidatorFactory","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationError":{"navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"url":"\/documentation\/attributes\/validationerror","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"type":"topic","title":"ValidationError","abstract":[{"text":"ValidationError is an error that occurs when validating.","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationError","kind":"symbol"},"doc://Attributes/documentation/Attributes/ReadOnlyPathProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/readonlypathprotocol","title":"ReadOnlyPathProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadOnlyPathProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","type":"topic","abstract":[{"text":"Path to a value that can only be read and never mutated.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ReadOnlyPathProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"},"doc://Attributes/documentation/Attributes/RequiredValidator":{"kind":"symbol","url":"\/documentation\/attributes\/requiredvalidator","title":"RequiredValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","type":"topic","abstract":[{"text":"A validator that requires values to be present (not nil) for a validation rule.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequiredValidator"}]},"doc://Attributes/documentation/Attributes/AttributeError":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AttributeError","abstract":[{"text":"Struct for checking whether paths point to values containing errors.","type":"text"}],"title":"AttributeError","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AttributeError","kind":"identifier"}],"navigatorTitle":[{"text":"AttributeError","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/attributes\/attributeerror"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections aren’t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"}}}