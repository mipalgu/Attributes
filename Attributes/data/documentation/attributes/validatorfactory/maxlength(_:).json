{"sections":[],"variants":[{"paths":["\/documentation\/attributes\/validatorfactory\/maxlength(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Creates a factory that will perform the "},{"type":"codeVoice","code":"maxLength"},{"type":"text","text":" rule. For a full list of rules,"},{"type":"text","text":" "},{"type":"text","text":"see "},{"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","isActive":true},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory\/maxLength(_:)"},"metadata":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}]},"title":"maxLength(_:)","extendedModule":"Attributes","externalID":"s:10Attributes16ValidatorFactoryVAASlRzlE9maxLengthyACyxGSiF","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxLength"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Attributes16ValidatorFactoryV","text":"ValidatorFactory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"role":"symbol","modules":[{"name":"Attributes"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxLength","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"length","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ValidatorFactory","preciseIdentifier":"s:10Attributes16ValidatorFactoryV","kind":"typeIdentifier","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://Attributes/documentation/Attributes/ValidatorFactory/maxLength(_:)":{"title":"maxLength(_:)","url":"\/documentation\/attributes\/validatorfactory\/maxlength(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxLength","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Attributes16ValidatorFactoryV","text":"ValidatorFactory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Creates a factory that will perform the "},{"code":"maxLength","type":"codeVoice"},{"text":" rule. For a full list of rules,","type":"text"},{"text":" ","type":"text"},{"text":"see ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory\/maxLength(_:)","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections arenâ€™t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidatorFactory":{"abstract":[{"text":"A simple interface for chaining together different validators. This factory can be reused to create a","type":"text"},{"text":" ","type":"text"},{"text":"validator that may perform the task of several validators chained together. This factory will","type":"text"},{"text":" ","type":"text"},{"text":"store a function to generate a complex validation rule that can be modified\/altered to work with","type":"text"},{"text":" ","type":"text"},{"text":"other validators. When the user is satisfied with the validation rule, this factory may be used","type":"text"},{"text":" ","type":"text"},{"text":"to generate the validator as many times as required by using the ","type":"text"},{"type":"codeVoice","code":"make"},{"text":" function.","type":"text"}],"url":"\/documentation\/attributes\/validatorfactory","type":"topic","title":"ValidatorFactory","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorFactory","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","navigatorTitle":[{"text":"ValidatorFactory","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"}}}