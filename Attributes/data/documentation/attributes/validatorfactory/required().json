{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/validatorfactory\/required()"]}],"kind":"symbol","abstract":[{"text":"Create a factory that produces a validation rule that is required to succeed.","type":"text"}],"metadata":{"role":"symbol","externalID":"s:10Attributes16ValidatorFactoryV8requiredACyxGyFZ","modules":[{"name":"Attributes"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"required","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"ValidatorFactory","preciseIdentifier":"s:10Attributes16ValidatorFactoryV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Type Method","title":"required()","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"required","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"ValidatorFactory","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","preciseIdentifier":"s:10Attributes16ValidatorFactoryV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The new factory.","type":"text"}]}]}],"sections":[],"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory\/required()","interfaceLanguage":"swift"},"references":{"doc://Attributes/documentation/Attributes/ValidatorFactory/required()":{"title":"required()","kind":"symbol","abstract":[{"text":"Create a factory that produces a validation rule that is required to succeed.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"required","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:10Attributes16ValidatorFactoryV","text":"ValidatorFactory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/attributes\/validatorfactory\/required()","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory\/required()","role":"symbol"},"doc://Attributes/documentation/Attributes/ValidatorFactory":{"abstract":[{"text":"A simple interface for chaining together different validators. This factory can be reused to create a","type":"text"},{"text":" ","type":"text"},{"text":"validator that may perform the task of several validators chained together. This factory will","type":"text"},{"text":" ","type":"text"},{"text":"store a function to generate a complex validation rule that can be modified\/altered to work with","type":"text"},{"text":" ","type":"text"},{"text":"other validators. When the user is satisfied with the validation rule, this factory may be used","type":"text"},{"text":" ","type":"text"},{"text":"to generate the validator as many times as required by using the ","type":"text"},{"type":"codeVoice","code":"make"},{"text":" function.","type":"text"}],"url":"\/documentation\/attributes\/validatorfactory","type":"topic","title":"ValidatorFactory","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorFactory","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","navigatorTitle":[{"text":"ValidatorFactory","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"}}}