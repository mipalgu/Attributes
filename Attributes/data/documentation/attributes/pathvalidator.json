{"topicSections":[{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/PathValidator\/PathType","doc:\/\/Attributes\/documentation\/Attributes\/PathValidator\/PushValidator"],"title":"Associated Types"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/PathValidator\/init(path:)"],"title":"Initializers"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/PathValidator\/path"],"title":"Instance Properties"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/PathValidator\/push(_:)"],"title":"Instance Methods"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"PathValidator"}],"externalID":"s:10Attributes13PathValidatorP","symbolKind":"protocol","title":"PathValidator","modules":[{"name":"Attributes"}],"roleHeading":"Protocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathValidator"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","doc:\/\/Attributes\/documentation\/Attributes\/ValidationError","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","doc:\/\/Attributes\/documentation\/Attributes\/Validator","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorBuilder","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol"],"generated":true,"title":"Validators"}],"variants":[{"paths":["\/documentation\/attributes\/pathvalidator"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Provides the means to perform validations using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol"},{"type":"text","text":"s. This protocol"},{"type":"text","text":" "},{"type":"text","text":"allows the dynamic allocation of validation functions to members existing within a root"},{"type":"text","text":" "},{"type":"text","text":"object by using a key path."}],"relationshipsSections":[{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathContainer","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","doc:\/\/Attributes\/documentation\/Attributes\/Validator"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathValidator"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Attributes22ValidationPushProtocolP","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","text":"ValidationPushProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Attributes17ValidatorProtocolP","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol","text":"ValidatorProtocol"}],"platforms":["Linux"]}]}],"references":{"doc://Attributes/documentation/Attributes/PathValidator/PushValidator":{"title":"PushValidator","role":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator\/PushValidator","url":"\/documentation\/attributes\/pathvalidator\/pushvalidator","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"PushValidator","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"The ","type":"text"},{"code":"PushValidator","type":"codeVoice"},{"type":"text","text":" existing within "},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","isActive":true,"type":"reference"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self"},{"type":"text","text":"."}],"required":true},"doc://Attributes/documentation/Attributes/PathValidator/path":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PathType"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator\/path","url":"\/documentation\/attributes\/pathvalidator\/path","role":"symbol","type":"topic","abstract":[{"text":"The path to the value that needs to be validated.","type":"text"}],"required":true,"kind":"symbol","title":"path"},"doc://Attributes/documentation/Attributes/ValidationError":{"navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"url":"\/documentation\/attributes\/validationerror","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"type":"topic","title":"ValidationError","abstract":[{"text":"ValidationError is an error that occurs when validating.","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationError","kind":"symbol"},"doc://Attributes/documentation/Attributes/Validator":{"abstract":[{"text":"Container for storing validation functions for values specified with a Path.","type":"text"}],"url":"\/documentation\/attributes\/validator","type":"topic","title":"Validator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/PathValidator":{"title":"PathValidator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","navigatorTitle":[{"kind":"identifier","text":"PathValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Provides the means to perform validations using ","type":"text"},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","isActive":true,"type":"reference"},{"text":"s. This protocol","type":"text"},{"text":" ","type":"text"},{"text":"allows the dynamic allocation of validation functions to members existing within a root","type":"text"},{"text":" ","type":"text"},{"text":"object by using a key path.","type":"text"}],"kind":"symbol","url":"\/documentation\/attributes\/pathvalidator"},"doc://Attributes/documentation/Attributes/ValidatorBuilder":{"kind":"symbol","url":"\/documentation\/attributes\/validatorbuilder","title":"ValidatorBuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorBuilder","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorBuilder","type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"resultBuilder","type":"codeVoice"},{"text":" for defining multiple validators.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorBuilder","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"},"doc://Attributes/documentation/Attributes/ValidatorFactory":{"abstract":[{"text":"A simple interface for chaining together different validators. This factory can be reused to create a","type":"text"},{"text":" ","type":"text"},{"text":"validator that may perform the task of several validators chained together. This factory will","type":"text"},{"text":" ","type":"text"},{"text":"store a function to generate a complex validation rule that can be modified\/altered to work with","type":"text"},{"text":" ","type":"text"},{"text":"other validators. When the user is satisfied with the validation rule, this factory may be used","type":"text"},{"text":" ","type":"text"},{"text":"to generate the validator as many times as required by using the ","type":"text"},{"type":"codeVoice","code":"make"},{"text":" function.","type":"text"}],"url":"\/documentation\/attributes\/validatorfactory","type":"topic","title":"ValidatorFactory","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorFactory","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","navigatorTitle":[{"text":"ValidatorFactory","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ReadOnlyPathContainer":{"title":"ReadOnlyPathContainer","abstract":[{"type":"text","text":"A container storing a read-only path."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathContainer","role":"symbol","type":"topic","url":"\/documentation\/attributes\/readonlypathcontainer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReadOnlyPathContainer"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReadOnlyPathContainer"}]},"doc://Attributes/documentation/Attributes/PathValidator/PathType":{"required":true,"abstract":[{"text":"The type of the path pointing to the value to be validated.","type":"text"}],"type":"topic","title":"PathType","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathType","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"ReadOnlyPathProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10Attributes20ReadOnlyPathProtocolP"}],"url":"\/documentation\/attributes\/pathvalidator\/pathtype","role":"symbol","kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator\/PathType"},"doc://Attributes/documentation/Attributes/ReadOnlyPathProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/readonlypathprotocol","title":"ReadOnlyPathProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadOnlyPathProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","type":"topic","abstract":[{"text":"Path to a value that can only be read and never mutated.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ReadOnlyPathProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/RequiredValidator":{"kind":"symbol","url":"\/documentation\/attributes\/requiredvalidator","title":"RequiredValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","type":"topic","abstract":[{"text":"A validator that requires values to be present (not nil) for a validation rule.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequiredValidator"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/PathValidator/push(_:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"required":true,"abstract":[{"type":"text","text":"Push an additional validation function onto the stack of existing validation functions. This"},{"type":"text","text":" "},{"type":"text","text":"function acts as a pure function creating a new instance of "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" with the new validation stack."}],"url":"\/documentation\/attributes\/pathvalidator\/push(_:)","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator\/push(_:)","title":"push(_:)","kind":"symbol"},"doc://Attributes/documentation/Attributes/AnyValidator":{"kind":"symbol","url":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValidator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","type":"topic","abstract":[{"text":"A type-erased validator.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyValidator","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections aren’t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidatorProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/validatorprotocol","title":"ValidatorProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol","type":"topic","abstract":[{"text":"Protocol for defining a validation function that can be enacted on a Root object.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/PathValidator/init(path:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator\/init(path:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"PathType"},{"kind":"text","text":")"}],"abstract":[{"text":"Instantiate this validator from the path of the value that requires validation.","type":"text"}],"title":"init(path:)","url":"\/documentation\/attributes\/pathvalidator\/init(path:)","required":true}}}