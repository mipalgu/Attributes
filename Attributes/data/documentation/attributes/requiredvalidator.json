{"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathContainer","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol"]}],"variants":[{"paths":["\/documentation\/attributes\/requiredvalidator"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A validator that requires values to be present (not nil) for a validation rule."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/init(path:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/path"]},{"title":"Instance Methods","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/performValidation(_:)","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/push(_:)","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/validate(builder:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/PathType","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/Root","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/Value"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/ValidationPushProtocol-Implementations"]}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredValidator"}],"title":"RequiredValidator","modules":[{"name":"Attributes"}],"externalID":"s:10Attributes17RequiredValidatorV","navigatorTitle":[{"kind":"identifier","text":"RequiredValidator"}],"roleHeading":"Structure","symbolKind":"struct"},"seeAlsoSections":[{"title":"Validators","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","doc:\/\/Attributes\/documentation\/Attributes\/ValidationError","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","doc:\/\/Attributes\/documentation\/Attributes\/Validator","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorBuilder","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator"},"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequiredValidator"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","preciseIdentifier":"s:10Attributes20ReadOnlyPathProtocolP","kind":"typeIdentifier","text":"ReadOnlyPathProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10Attributes7NilableP","kind":"typeIdentifier","text":"Nilable","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Nilable"}],"languages":["swift"],"platforms":["Linux"]}]}],"sections":[],"references":{"doc://Attributes/documentation/Attributes/RequiredValidator":{"kind":"symbol","url":"\/documentation\/attributes\/requiredvalidator","title":"RequiredValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","type":"topic","abstract":[{"text":"A validator that requires values to be present (not nil) for a validation rule.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequiredValidator"}]},"doc://Attributes/documentation/Attributes/RequiredValidator/init(path:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RequiredValidator","preciseIdentifier":"s:10Attributes17RequiredValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"PathType"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a RequiredValidator for a specific path. This initialiser does not perform any validation on"},{"type":"text","text":" "},{"type":"text","text":"the value. Essentially this init is used to setup the "},{"type":"emphasis","inlineContent":[{"text":"required","type":"text"}]},{"type":"text","text":" relationship. The validation will"},{"type":"text","text":" "},{"text":"throw errors if the value is equal to nil but perform no other checks.","type":"text"}],"type":"topic","title":"init(path:)","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/init(path:)","kind":"symbol","role":"symbol","url":"\/documentation\/attributes\/requiredvalidator\/init(path:)"},"doc://Attributes/documentation/Attributes/RequiredValidator/Root":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Root"}],"abstract":[{"type":"text","text":"The type of the object containing the value to be validated."}],"type":"topic","title":"RequiredValidator.Root","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/Root","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Root"}],"url":"\/documentation\/attributes\/requiredvalidator\/root"},"doc://Attributes/documentation/Attributes/AnyValidator":{"kind":"symbol","url":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValidator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","type":"topic","abstract":[{"text":"A type-erased validator.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyValidator","kind":"identifier"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidatorBuilder":{"kind":"symbol","url":"\/documentation\/attributes\/validatorbuilder","title":"ValidatorBuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorBuilder","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorBuilder","type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"resultBuilder","type":"codeVoice"},{"text":" for defining multiple validators.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorBuilder","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/Nilable":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Nilable"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Nilable","abstract":[{"type":"text","text":"Provide helper properties for Optional types."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Nilable"}],"title":"Nilable","url":"\/documentation\/attributes\/nilable","role":"symbol"},"doc://Attributes/documentation/Attributes/ReadOnlyPathProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/readonlypathprotocol","title":"ReadOnlyPathProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadOnlyPathProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","type":"topic","abstract":[{"text":"Path to a value that can only be read and never mutated.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ReadOnlyPathProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidatorFactory":{"abstract":[{"text":"A simple interface for chaining together different validators. This factory can be reused to create a","type":"text"},{"text":" ","type":"text"},{"text":"validator that may perform the task of several validators chained together. This factory will","type":"text"},{"text":" ","type":"text"},{"text":"store a function to generate a complex validation rule that can be modified\/altered to work with","type":"text"},{"text":" ","type":"text"},{"text":"other validators. When the user is satisfied with the validation rule, this factory may be used","type":"text"},{"text":" ","type":"text"},{"text":"to generate the validator as many times as required by using the ","type":"text"},{"type":"codeVoice","code":"make"},{"text":" function.","type":"text"}],"url":"\/documentation\/attributes\/validatorfactory","type":"topic","title":"ValidatorFactory","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorFactory","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","navigatorTitle":[{"text":"ValidatorFactory","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/RequiredValidator/Value":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/Value","abstract":[{"type":"text","text":"The type of the value being validated."}],"title":"RequiredValidator.Value","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"navigatorTitle":[{"kind":"identifier","text":"Value"}],"kind":"symbol","url":"\/documentation\/attributes\/requiredvalidator\/value"},"doc://Attributes/documentation/Attributes/RequiredValidator/performValidation(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"performValidation"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Attributes17RequiredValidatorV","text":"RequiredValidator"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"PathType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Perform the validation on a value. This function will check the precense of nil before enacting the"},{"type":"text","text":" "},{"type":"text","text":"validation function stored in "},{"type":"codeVoice","code":"_validate"},{"type":"text","text":". A nil value will through a validation error."}],"type":"topic","title":"performValidation(_:)","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/performValidation(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/attributes\/requiredvalidator\/performvalidation(_:)"},"doc://Attributes/documentation/Attributes/RequiredValidator/ValidationPushProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/ValidationPushProtocol-Implementations","url":"\/documentation\/attributes\/requiredvalidator\/validationpushprotocol-implementations","title":"ValidationPushProtocol Implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://Attributes/documentation/Attributes/ReadOnlyPathContainer":{"title":"ReadOnlyPathContainer","abstract":[{"type":"text","text":"A container storing a read-only path."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathContainer","role":"symbol","type":"topic","url":"\/documentation\/attributes\/readonlypathcontainer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReadOnlyPathContainer"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReadOnlyPathContainer"}]},"doc://Attributes/documentation/Attributes/Validator":{"abstract":[{"text":"Container for storing validation functions for values specified with a Path.","type":"text"}],"url":"\/documentation\/attributes\/validator","type":"topic","title":"Validator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/PathValidator":{"title":"PathValidator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","navigatorTitle":[{"kind":"identifier","text":"PathValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Provides the means to perform validations using ","type":"text"},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","isActive":true,"type":"reference"},{"text":"s. This protocol","type":"text"},{"text":" ","type":"text"},{"text":"allows the dynamic allocation of validation functions to members existing within a root","type":"text"},{"text":" ","type":"text"},{"text":"object by using a key path.","type":"text"}],"kind":"symbol","url":"\/documentation\/attributes\/pathvalidator"},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"},"doc://Attributes/documentation/Attributes/ValidationError":{"navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"url":"\/documentation\/attributes\/validationerror","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"type":"topic","title":"ValidationError","abstract":[{"text":"ValidationError is an error that occurs when validating.","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationError","kind":"symbol"},"doc://Attributes/documentation/Attributes/RequiredValidator/PathType":{"url":"\/documentation\/attributes\/requiredvalidator\/pathtype","abstract":[{"text":"The type of the Path pointing to the value.","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathType"}],"role":"symbol","title":"RequiredValidator.PathType","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathType"}],"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/PathType"},"doc://Attributes/documentation/Attributes/ValidatorProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/validatorprotocol","title":"ValidatorProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol","type":"topic","abstract":[{"text":"Protocol for defining a validation function that can be enacted on a Root object.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/RequiredValidator/validate(builder:)":{"url":"\/documentation\/attributes\/requiredvalidator\/validate(builder:)","abstract":[{"text":"Create a type-erased validator from self.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"validate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"builder"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"RequiredValidator","preciseIdentifier":"s:10Attributes17RequiredValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"text":">) -> [","kind":"text"},{"preciseIdentifier":"s:10Attributes12AnyValidatorV","text":"AnyValidator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10Attributes17RequiredValidatorV","text":"RequiredValidator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"PathType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">]) -> "},{"preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier","text":"AnyValidator"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10Attributes17RequiredValidatorV","kind":"typeIdentifier","text":"RequiredValidator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"PathType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">"}],"role":"symbol","title":"validate(builder:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/validate(builder:)"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections aren’t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/RequiredValidator/push(_:)":{"role":"symbol","url":"\/documentation\/attributes\/requiredvalidator\/push(_:)","title":"push(_:)","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/push(_:)","abstract":[{"text":"Create a new validator that performs an additional validation function immediately after the","type":"text"},{"text":" ","type":"text"},{"text":"validation function stored in self is executed.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:10Attributes17RequiredValidatorV","text":"RequiredValidator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"RequiredValidator","preciseIdentifier":"s:10Attributes17RequiredValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Attributes17RequiredValidatorV","kind":"typeIdentifier","text":"RequiredValidator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"type":"topic"},"doc://Attributes/documentation/Attributes/RequiredValidator/path":{"role":"symbol","url":"\/documentation\/attributes\/requiredvalidator\/path","title":"path","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator\/path","abstract":[{"text":"The path pointing to the value.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RequiredValidator","preciseIdentifier":"s:10Attributes17RequiredValidatorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"PathType"}],"type":"topic"}}}