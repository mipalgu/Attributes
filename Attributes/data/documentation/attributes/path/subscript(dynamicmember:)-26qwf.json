{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"AppendedValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"member","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"ReadOnlyPath","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPath","kind":"typeIdentifier","preciseIdentifier":"s:10Attributes12ReadOnlyPathV"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Nilable","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Nilable","kind":"typeIdentifier","preciseIdentifier":"s:10Attributes7NilableP"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A new path with the keyPath appended to self."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The keyPath to append to this path.","type":"text"}]}],"name":"dynamicMember"}]}],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/Path"]]},"abstract":[{"type":"text","text":"Append to this path with a keyPath. This operation acts as a pure function by returning a new"},{"type":"text","text":" "},{"type":"text","text":"Path with the keyPath appended."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/Path\/subscript(dynamicMember:)-26qwf"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/path\/subscript(dynamicmember:)-26qwf"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"externalID":"s:10Attributes4PathV13dynamicMemberAA08ReadOnlyB0Vyxqd__Gs03KeyB0Cyq_qd__G_tcAA7NilableRd__luip","role":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"AppendedValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:10Attributes12ReadOnlyPathV","kind":"typeIdentifier","text":"ReadOnlyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"text":", ","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Subscript","title":"subscript(dynamicMember:)","modules":[{"name":"Attributes"}],"symbolKind":"subscript"},"references":{"doc://Attributes/documentation/Attributes/Path/subscript(dynamicMember:)-26qwf":{"type":"topic","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"AppendedValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":">) -> "},{"text":"ReadOnlyPath","preciseIdentifier":"s:10Attributes12ReadOnlyPathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Path\/subscript(dynamicMember:)-26qwf","url":"\/documentation\/attributes\/path\/subscript(dynamicmember:)-26qwf","role":"symbol","title":"subscript(dynamicMember:)","abstract":[{"type":"text","text":"Append to this path with a keyPath. This operation acts as a pure function by returning a new"},{"type":"text","text":" "},{"text":"Path with the keyPath appended.","type":"text"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/ReadOnlyPath":{"abstract":[{"type":"text","text":"Path for pointing to members that are read-only."}],"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPath","url":"\/documentation\/attributes\/readonlypath","role":"symbol","navigatorTitle":[{"text":"ReadOnlyPath","kind":"identifier"}],"title":"ReadOnlyPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadOnlyPath","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/Path":{"role":"symbol","kind":"symbol","title":"Path","navigatorTitle":[{"kind":"identifier","text":"Path"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Path"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Path","url":"\/documentation\/attributes\/path","type":"topic","abstract":[{"type":"text","text":"Path that points to values that can be read and written to."}]},"doc://Attributes/documentation/Attributes/Nilable":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Nilable"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Nilable","abstract":[{"type":"text","text":"Provide helper properties for Optional types."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Nilable"}],"title":"Nilable","url":"\/documentation\/attributes\/nilable","role":"symbol"}}}