{"sections":[],"variants":[{"paths":["\/documentation\/attributes\/validationpushprotocol\/alphaunderscorefirst()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alphaunderscorefirst","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A new validator that verifies that the first character in a given string is","type":"text"},{"text":" ","type":"text"},{"text":"an alphabetic character or an underscore.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Empty strings will pass validation."}]}],"type":"aside","style":"note"}]}],"kind":"symbol","abstract":[{"text":"The first character in a given string must be alphabetic (a-z, A-Z) or an underscore (_).","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"method","externalID":"s:10Attributes22ValidationPushProtocolPAASy5ValueRpzrlE20alphaunderscorefirst0C9ValidatorQzyF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphaunderscorefirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"extendedModule":"Attributes","modules":[{"name":"Attributes"}],"title":"alphaunderscorefirst()","roleHeading":"Instance Method","role":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphaunderscorefirst()","interfaceLanguage":"swift"},"references":{"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections arenâ€™t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/alphaunderscorefirst()":{"url":"\/documentation\/attributes\/validationpushprotocol\/alphaunderscorefirst()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alphaunderscorefirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","title":"alphaunderscorefirst()","abstract":[{"text":"The first character in a given string must be alphabetic (a-z, A-Z) or an underscore (_).","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphaunderscorefirst()","kind":"symbol"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"}}}