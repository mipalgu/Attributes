{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/validationpushprotocol\/in(_:transform:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`in`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S"},{"text":", ","kind":"text"},{"text":"S2","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"p","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"S2","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10Attributes20ReadOnlyPathProtocolP","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","text":"ReadOnlyPathProtocol","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"S2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new validator that performs a validation function validating that a specific value exists"},{"type":"text","text":" "},{"type":"text","text":"in the transformed sequence."}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A path to the sequence to transform."}],"type":"paragraph"}],"name":"p"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The transformation function that transforms the sequence pointed to by ","type":"text"},{"type":"codeVoice","code":"p"},{"text":" ","type":"text"},{"text":"into a new sequence.","type":"text"}]}],"name":"transform"}]}],"abstract":[{"text":"Satisfies a validation if a sequence pointed to by a path ","type":"text"},{"code":"p","type":"codeVoice"},{"text":" contains a given value when","type":"text"},{"text":" ","type":"text"},{"text":"transformed by function ","type":"text"},{"code":"transform","type":"codeVoice"},{"text":". This method transforms a sequence pointed to by ","type":"text"},{"code":"p","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and passes a validation if a value is within the new transformed sequence.","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/in(_:transform:)"},"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol"]]},"metadata":{"extendedModule":"Attributes","roleHeading":"Instance Method","modules":[{"name":"Attributes"}],"title":"in(_:transform:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`in`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S2","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"S2","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"symbolKind":"method","role":"symbol","externalID":"s:10Attributes22ValidationPushProtocolPAASQ5ValueRpzrlE2in_9transform0C9ValidatorQzqd___qd_1_qd_0_ctAA012ReadOnlyPathD0Rd__STRd_0_ADQyd__Rsd_0_STRd_1_4RootQyd__ALRtz7ElementQyd_1_AERSr1_lF"},"references":{"doc://Attributes/documentation/Attributes/ReadOnlyPathProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/readonlypathprotocol","title":"ReadOnlyPathProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadOnlyPathProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","type":"topic","abstract":[{"text":"Path to a value that can only be read and never mutated.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ReadOnlyPathProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/in(_:transform:)":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/in(_:transform:)","title":"in(_:transform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`in`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S2","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"S2","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/in(_:transform:)","type":"topic","abstract":[{"text":"Satisfies a validation if a sequence pointed to by a path ","type":"text"},{"code":"p","type":"codeVoice"},{"text":" contains a given value when","type":"text"},{"text":" ","type":"text"},{"text":"transformed by function ","type":"text"},{"code":"transform","type":"codeVoice"},{"text":". This method transforms a sequence pointed to by ","type":"text"},{"code":"p","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and passes a validation if a value is within the new transformed sequence.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections arenâ€™t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"}}}