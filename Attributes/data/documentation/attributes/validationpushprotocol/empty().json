{"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/validationpushprotocol\/empty()"]}],"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"empty","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"modules":[{"name":"Attributes"}],"symbolKind":"method","externalID":"s:10Attributes22ValidationPushProtocolPAASl5ValueRpzrlE5empty0C9ValidatorQzyF","role":"symbol","roleHeading":"Instance Method","extendedModule":"Attributes","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"empty()"},"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/empty()","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Performs a validation that ensures that a given collection is empty."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"A new validator that checks whether a given collection is empty. A non-empty collection","type":"text"},{"text":" ","type":"text"},{"text":"will throw an error.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://Attributes/documentation/Attributes/ValidationPushProtocol/empty()":{"kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/empty()","role":"symbol","abstract":[{"type":"text","text":"Performs a validation that ensures that a given collection is empty."}],"title":"empty()","url":"\/documentation\/attributes\/validationpushprotocol\/empty()","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"type":"topic"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections arenâ€™t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"}}}