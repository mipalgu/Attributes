{"metadata":{"title":"if(_:then:else:)","symbolKind":"method","externalID":"s:10Attributes22ValidationPushProtocolPAAE2if_4then4else0C9ValidatorQzSb5ValueQzc_AA03AnyH0Vy4RootQzGycAOyctF","extendedModule":"Attributes","modules":[{"name":"Attributes"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`if`"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:10Attributes12AnyValidatorV","text":"AnyValidator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:10Attributes12AnyValidatorV","text":"AnyValidator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"role":"symbol","roleHeading":"Instance Method"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`if`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"condition","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"builder1","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"AnyValidator","preciseIdentifier":"s:10Attributes12AnyValidatorV","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"builder2","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"AnyValidator","preciseIdentifier":"s:10Attributes12AnyValidatorV","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A new validator that performs the validation function ","type":"text"},{"type":"codeVoice","code":"builder1"},{"text":" when ","type":"text"},{"type":"codeVoice","code":"condition"},{"text":" ","type":"text"},{"text":"is true, or ","type":"text"},{"type":"codeVoice","code":"builder2"},{"text":" otherwise.","type":"text"}]}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The condition that determins whether "},{"type":"codeVoice","code":"builder1"},{"type":"text","text":" or "},{"type":"codeVoice","code":"builder2"},{"type":"text","text":" is executed."}]}],"name":"condition"},{"content":[{"inlineContent":[{"type":"text","text":"The validation function that is executed when "},{"type":"codeVoice","code":"condition"},{"type":"text","text":" is true."}],"type":"paragraph"}],"name":"builder1"},{"content":[{"inlineContent":[{"type":"text","text":"The validation function that is executed when "},{"type":"codeVoice","code":"condition"},{"type":"text","text":" is false."}],"type":"paragraph"}],"name":"builder2"}],"kind":"parameters"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Perform some validation function "},{"code":"builder1","type":"codeVoice"},{"type":"text","text":" provided that a precondition is met, otherwise"},{"type":"text","text":" "},{"type":"text","text":"perform a different validation function "},{"code":"builder2","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/attributes\/validationpushprotocol\/if(_:then:else:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol"]]},"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/if(_:then:else:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"references":{"doc://Attributes/documentation/Attributes/AnyValidator":{"kind":"symbol","url":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValidator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","type":"topic","abstract":[{"text":"A type-erased validator.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyValidator","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections arenâ€™t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/if(_:then:else:)":{"role":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/if(_:then:else:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/if(_:then:else:)","title":"if(_:then:else:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`if`","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"AnyValidator","preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"AnyValidator","preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"abstract":[{"text":"Perform some validation function ","type":"text"},{"code":"builder1","type":"codeVoice"},{"text":" provided that a precondition is met, otherwise","type":"text"},{"text":" ","type":"text"},{"text":"perform a different validation function ","type":"text"},{"code":"builder2","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"}}}