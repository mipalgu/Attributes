{"abstract":[{"type":"text","text":"This protocol provides a mechanism for chaining different validators together into a"},{"type":"text","text":" "},{"type":"text","text":"single validator that can perform a single validation function. This protocol also"},{"type":"text","text":" "},{"type":"text","text":"forms a basis for defining common validation function such as validating that"},{"type":"text","text":" "},{"type":"text","text":"collections arenâ€™t empty, or that collections have a specific amount of elements, etc."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathContainer","text":"ReadOnlyPathContainer","preciseIdentifier":"s:10Attributes21ReadOnlyPathContainerP","kind":"typeIdentifier"}],"languages":["swift"]}]},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"text":"The fundamental function of the type of operations described above is the ","type":"text"},{"code":"push","type":"codeVoice"},{"text":" method","type":"text"},{"text":" ","type":"text"},{"text":"that acts as a pure function creating more instances of ","type":"text"},{"code":"PushValidator","type":"codeVoice"},{"text":" by combining","type":"text"},{"text":" ","type":"text"},{"text":"validation functions sequentially together.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathContainer"],"kind":"relationships"},{"title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPathProtocol"],"kind":"relationships"},{"title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPath","doc:\/\/Attributes\/documentation\/Attributes\/Validator"],"kind":"relationships"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/PushValidator","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/Root","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alpha()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphadash()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphafirst()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphanumeric()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphaunderscore()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphaunderscorefirst()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/between(min:max:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/blacklist(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/empty()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/equals(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/equalsFalse()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/equalsTrue()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/greaterThan(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/greaterThanEqual(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/greyList(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/if(_:then:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/if(_:then:else:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/in(_:)-5z459","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/in(_:)-71mlo","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/in(_:)-8jycp","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/in(_:transform:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/length(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/lessThan(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/lessThanEqual(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/maxLength(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/minLength(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/notEmpty()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/notEquals(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/numeric()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/push(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/unique()","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/unique(_:)","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/whitelist(_:)"]}],"seeAlsoSections":[{"title":"Validators","generated":true,"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","doc:\/\/Attributes\/documentation\/Attributes\/ValidationError","doc:\/\/Attributes\/documentation\/Attributes\/Validator","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorBuilder","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol"]}],"metadata":{"title":"ValidationPushProtocol","symbolKind":"protocol","externalID":"s:10Attributes22ValidationPushProtocolP","role":"symbol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"modules":[{"name":"Attributes"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"roleHeading":"Protocol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/validationpushprotocol"]}],"kind":"symbol","references":{"doc://Attributes/documentation/Attributes/ValidationPushProtocol/greaterThanEqual(_:)":{"abstract":[{"type":"text","text":"Satisfies a validation when a given value is greater than or equal to a specific value."}],"url":"\/documentation\/attributes\/validationpushprotocol\/greaterthanequal(_:)","type":"topic","title":"greaterThanEqual(_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"greaterThanEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/greaterThanEqual(_:)","kind":"symbol"},"doc://Attributes/documentation/Attributes/ReadOnlyPathContainer":{"title":"ReadOnlyPathContainer","abstract":[{"type":"text","text":"A container storing a read-only path."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathContainer","role":"symbol","type":"topic","url":"\/documentation\/attributes\/readonlypathcontainer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReadOnlyPathContainer"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReadOnlyPathContainer"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/in(_:)-8jycp":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"in(_:)","abstract":[{"type":"text","text":"Satisfies a validation function when a value exists within a given set."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/in(_:)-8jycp","role":"symbol","type":"topic","url":"\/documentation\/attributes\/validationpushprotocol\/in(_:)-8jycp","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`in`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/alphaunderscore()":{"title":"alphaunderscore()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alphaunderscore","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphaunderscore()","role":"symbol","type":"topic","abstract":[{"text":"All characters within a string must be alphabetic (a-z, A-Z), numeric (0-9), or underscores (_).","type":"text"}],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/attributes\/validationpushprotocol\/alphaunderscore()"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/lessThanEqual(_:)":{"title":"lessThanEqual(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lessThanEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/lessThanEqual(_:)","role":"symbol","type":"topic","abstract":[{"text":"Satisfies a validation when a given value is less than or equal to a specific value.","type":"text"}],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/attributes\/validationpushprotocol\/lessthanequal(_:)"},"doc://Attributes/documentation/Attributes/RequiredValidator":{"kind":"symbol","url":"\/documentation\/attributes\/requiredvalidator","title":"RequiredValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequiredValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/RequiredValidator","type":"topic","abstract":[{"text":"A validator that requires values to be present (not nil) for a validation rule.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequiredValidator"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/minLength(_:)":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/minlength(_:)","title":"minLength(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"minLength","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/minLength(_:)","type":"topic","abstract":[{"text":"Performs a validation that verifies the given collection has at least ","type":"text"},{"code":"length","type":"codeVoice"},{"text":" elements.","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/maxLength(_:)":{"title":"maxLength(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxLength"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/maxLength(_:)","role":"symbol","type":"topic","abstract":[{"text":"Performs a validation that verifies a given collection has at most ","type":"text"},{"code":"length","type":"codeVoice"},{"text":" elements.","type":"text"}],"kind":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/attributes\/validationpushprotocol\/maxlength(_:)"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/Value":{"title":"Value","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/Value","role":"symbol","type":"topic","abstract":[{"text":"The type of the Value contained within ","type":"text"},{"code":"Root","type":"codeVoice"},{"text":" that this protocol acts upon.","type":"text"}],"kind":"symbol","required":true,"url":"\/documentation\/attributes\/validationpushprotocol\/value"},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/alphanumeric()":{"title":"alphanumeric()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphanumeric"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphanumeric()","role":"symbol","type":"topic","abstract":[{"text":"All characters within a string must either be alphabetic (a-z, A-Z) or numeric (0-9).","type":"text"}],"kind":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/attributes\/validationpushprotocol\/alphanumeric()"},"doc://Attributes/documentation/Attributes/PathValidator":{"title":"PathValidator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/PathValidator","navigatorTitle":[{"kind":"identifier","text":"PathValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Provides the means to perform validations using ","type":"text"},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","isActive":true,"type":"reference"},{"text":"s. This protocol","type":"text"},{"text":" ","type":"text"},{"text":"allows the dynamic allocation of validation functions to members existing within a root","type":"text"},{"text":" ","type":"text"},{"text":"object by using a key path.","type":"text"}],"kind":"symbol","url":"\/documentation\/attributes\/pathvalidator"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/whitelist(_:)":{"title":"whitelist(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whitelist"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/whitelist(_:)","role":"symbol","type":"topic","abstract":[{"text":"Creates a new validator that ensures a given string exist within a list of allowed","type":"text"},{"text":" ","type":"text"},{"text":"words.","type":"text"}],"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/attributes\/validationpushprotocol\/whitelist(_:)"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/unique()":{"title":"unique()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/unique()","role":"symbol","type":"topic","abstract":[{"text":"Creates a validator that ensures all elements within a given value are unique.","type":"text"}],"kind":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value.Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/attributes\/validationpushprotocol\/unique()"},"doc://Attributes/documentation/Attributes/ReadOnlyPath":{"abstract":[{"type":"text","text":"Path for pointing to members that are read-only."}],"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPath","url":"\/documentation\/attributes\/readonlypath","role":"symbol","navigatorTitle":[{"text":"ReadOnlyPath","kind":"identifier"}],"title":"ReadOnlyPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadOnlyPath","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/if(_:then:)":{"title":"if(_:then:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`if`","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"AnyValidator","preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/if(_:then:)","role":"symbol","type":"topic","abstract":[{"text":"Perform some validation function given that a precondition is met.","type":"text"}],"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/if(_:then:)"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/length(_:)":{"abstract":[{"text":"Performs a validation that ensure a given collection has ","type":"text"},{"code":"length","type":"codeVoice"},{"text":" elements.","type":"text"}],"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/length(_:)","url":"\/documentation\/attributes\/validationpushprotocol\/length(_:)","role":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"length(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"length"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/equals(_:)":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/equals(_:)","title":"equals(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"equals"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/equals(_:)","type":"topic","abstract":[{"text":"Satisfies a validation function when a given value is equal to a specific value.","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/Root":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/root","title":"Root","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Root","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/Root","type":"topic","abstract":[{"text":"The type of the root object this protocol acts upon.","type":"text"}],"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/notEmpty()":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/notempty()","title":"notEmpty()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"notEmpty","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/notEmpty()","type":"topic","abstract":[{"text":"Performs a validation that ensures a given collection is not empty.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/alpha()":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/alpha()","title":"alpha()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alpha","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alpha()","type":"topic","abstract":[{"text":"All characters must be alphabetic (a-z, A-Z).","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidatorProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/validatorprotocol","title":"ValidatorProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorProtocol","type":"topic","abstract":[{"text":"Protocol for defining a validation function that can be enacted on a Root object.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol":{"abstract":[{"text":"This protocol provides a mechanism for chaining different validators together into a","type":"text"},{"text":" ","type":"text"},{"text":"single validator that can perform a single validation function. This protocol also","type":"text"},{"text":" ","type":"text"},{"text":"forms a basis for defining common validation function such as validating that","type":"text"},{"text":" ","type":"text"},{"text":"collections arenâ€™t empty, or that collections have a specific amount of elements, etc.","type":"text"}],"url":"\/documentation\/attributes\/validationpushprotocol","type":"topic","title":"ValidationPushProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPushProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol","navigatorTitle":[{"text":"ValidationPushProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/numeric()":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/numeric()","title":"numeric()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"numeric","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/numeric()","type":"topic","abstract":[{"text":"All characters within a string must be numeric (0-9).","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/AnyValidator":{"kind":"symbol","url":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValidator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","type":"topic","abstract":[{"text":"A type-erased validator.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyValidator","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/in(_:transform:)":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/in(_:transform:)","title":"in(_:transform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`in`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S2","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"S2","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/in(_:transform:)","type":"topic","abstract":[{"text":"Satisfies a validation if a sequence pointed to by a path ","type":"text"},{"code":"p","type":"codeVoice"},{"text":" contains a given value when","type":"text"},{"text":" ","type":"text"},{"text":"transformed by function ","type":"text"},{"code":"transform","type":"codeVoice"},{"text":". This method transforms a sequence pointed to by ","type":"text"},{"code":"p","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and passes a validation if a value is within the new transformed sequence.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/Validator":{"abstract":[{"text":"Container for storing validation functions for values specified with a Path.","type":"text"}],"url":"\/documentation\/attributes\/validator","type":"topic","title":"Validator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPath":{"kind":"symbol","url":"\/documentation\/attributes\/validationpath","title":"ValidationPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPath","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPath","type":"topic","abstract":[{"text":"Path to a value containing validation rules.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidationPath","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/push(_:)":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/push(_:)","title":"push(_:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/push(_:)","type":"topic","abstract":[{"text":"Push a new validation function onto the stack of existing validators.","type":"text"}],"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidatorFactory":{"abstract":[{"text":"A simple interface for chaining together different validators. This factory can be reused to create a","type":"text"},{"text":" ","type":"text"},{"text":"validator that may perform the task of several validators chained together. This factory will","type":"text"},{"text":" ","type":"text"},{"text":"store a function to generate a complex validation rule that can be modified\/altered to work with","type":"text"},{"text":" ","type":"text"},{"text":"other validators. When the user is satisfied with the validation rule, this factory may be used","type":"text"},{"text":" ","type":"text"},{"text":"to generate the validator as many times as required by using the ","type":"text"},{"type":"codeVoice","code":"make"},{"text":" function.","type":"text"}],"url":"\/documentation\/attributes\/validatorfactory","type":"topic","title":"ValidatorFactory","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorFactory","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorFactory","navigatorTitle":[{"text":"ValidatorFactory","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ReadOnlyPathProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/readonlypathprotocol","title":"ReadOnlyPathProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadOnlyPathProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","type":"topic","abstract":[{"text":"Path to a value that can only be read and never mutated.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ReadOnlyPathProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/PushValidator":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/pushvalidator","title":"PushValidator","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PushValidator","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"PathValidator","kind":"typeIdentifier","preciseIdentifier":"s:10Attributes13PathValidatorP"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/PushValidator","type":"topic","abstract":[{"text":"The validator type used by this protocol.","type":"text"}],"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/alphadash()":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/alphadash()","title":"alphadash()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alphadash","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphadash()","type":"topic","abstract":[{"text":"All characters must be alphabetic (a-z, A-Z), numeric (0-9), underscores (_) or dashes (-).","type":"text"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/equalsTrue()":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/equalstrue()","title":"equalsTrue()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"equalsTrue","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/equalsTrue()","type":"topic","abstract":[{"text":"Satisfies a validation when the given value is ","type":"text"},{"inlineContent":[{"text":"true","type":"text"}],"type":"emphasis"},{"text":".","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidatorBuilder":{"kind":"symbol","url":"\/documentation\/attributes\/validatorbuilder","title":"ValidatorBuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidatorBuilder","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidatorBuilder","type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"resultBuilder","type":"codeVoice"},{"text":" for defining multiple validators.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidatorBuilder","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/blacklist(_:)":{"kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/blacklist(_:)","title":"blacklist(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"blacklist","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/blacklist(_:)","type":"topic","abstract":[{"text":"Creates a new validator that checks whether a given string matches a banned word. If","type":"text"},{"text":" ","type":"text"},{"text":"the string matches the banned word, then the validation will fail.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/equalsFalse()":{"kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/equalsFalse()","role":"symbol","abstract":[{"type":"text","text":"Satisfies a validation when the given value is "},{"type":"emphasis","inlineContent":[{"text":"false","type":"text"}]},{"type":"text","text":"."}],"title":"equalsFalse()","url":"\/documentation\/attributes\/validationpushprotocol\/equalsfalse()","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"equalsFalse"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"type":"topic"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/empty()":{"kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/empty()","role":"symbol","abstract":[{"type":"text","text":"Performs a validation that ensures that a given collection is empty."}],"title":"empty()","url":"\/documentation\/attributes\/validationpushprotocol\/empty()","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"type":"topic"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/between(min:max:)":{"kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/between(min:max:)","role":"symbol","abstract":[{"type":"text","text":"Satisfies a validation when a given value is between a minimum and maximum value"},{"type":"text","text":" "},{"type":"text","text":"inclusively."}],"title":"between(min:max:)","url":"\/documentation\/attributes\/validationpushprotocol\/between(min:max:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"between"},{"kind":"text","text":"("},{"kind":"externalParam","text":"min"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"type":"topic"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/if(_:then:else:)":{"role":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/if(_:then:else:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/if(_:then:else:)","title":"if(_:then:else:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`if`","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"AnyValidator","preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"AnyValidator","preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"abstract":[{"text":"Perform some validation function ","type":"text"},{"code":"builder1","type":"codeVoice"},{"text":" provided that a precondition is met, otherwise","type":"text"},{"text":" ","type":"text"},{"text":"perform a different validation function ","type":"text"},{"code":"builder2","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/notEquals(_:)":{"abstract":[{"type":"text","text":"Satisfies a validation function when a given value is not equal to a specific value."}],"url":"\/documentation\/attributes\/validationpushprotocol\/notequals(_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"notEquals(_:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"notEquals"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/notEquals(_:)"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/unique(_:)":{"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/attributes\/validationpushprotocol\/unique(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/unique(_:)","title":"unique(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"abstract":[{"text":"Creates a validator that checks that a transformed sequence contains unique elements, i.e. no","type":"text"},{"text":" ","type":"text"},{"text":"duplicate elements.","type":"text"}]},"doc://Attributes/documentation/Attributes/ValidationError":{"navigatorTitle":[{"text":"ValidationError","kind":"identifier"}],"url":"\/documentation\/attributes\/validationerror","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationError","kind":"identifier"}],"type":"topic","title":"ValidationError","abstract":[{"text":"ValidationError is an error that occurs when validating.","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationError","kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/alphafirst()":{"url":"\/documentation\/attributes\/validationpushprotocol\/alphafirst()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alphafirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","title":"alphafirst()","abstract":[{"text":"The first character in a string must be alphabetic (a-z, A-Z).","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphafirst()","kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/alphaunderscorefirst()":{"url":"\/documentation\/attributes\/validationpushprotocol\/alphaunderscorefirst()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alphaunderscorefirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","title":"alphaunderscorefirst()","abstract":[{"text":"The first character in a given string must be alphabetic (a-z, A-Z) or an underscore (_).","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/alphaunderscorefirst()","kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/greyList(_:)":{"url":"\/documentation\/attributes\/validationpushprotocol\/greylist(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"greyList","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","title":"greyList(_:)","abstract":[{"text":"Verifies that a given string contain a substring that exists within a list of permissible","type":"text"},{"text":" ","type":"text"},{"text":"words.","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/greyList(_:)","kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/in(_:)-71mlo":{"abstract":[{"type":"text","text":"Satisfies a validation if a value is within a sequence specified by a path."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`in`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/in(_:)-71mlo","title":"in(_:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/in(_:)-71mlo","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/in(_:)-5z459":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`in`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/in(_:)-5z459","title":"in(_:)","role":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/in(_:)-5z459","abstract":[{"text":"Satisfies a validation if a value is within a sequence specified by a path.","type":"text"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/greaterThan(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"greaterThan","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/greaterThan(_:)","title":"greaterThan(_:)","role":"symbol","url":"\/documentation\/attributes\/validationpushprotocol\/greaterthan(_:)","abstract":[{"text":"Satisfies a validation when a given value is greater than a specific value.","type":"text"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPathProtocol":{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPathProtocol","url":"\/documentation\/attributes\/validationpathprotocol","title":"ValidationPathProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPathProtocol","kind":"identifier"}],"abstract":[{"text":"Performs a validator for values pointed to by a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPath"},{"text":".","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"ValidationPathProtocol","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPushProtocol/lessThan(_:)":{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPushProtocol\/lessThan(_:)","url":"\/documentation\/attributes\/validationpushprotocol\/lessthan(_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"lessThan(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lessThan","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"abstract":[{"text":"Satisfies a validation when a given value is less than a specific value.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol"}}}