{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/optionalvalidator\/whitelist(_:)"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/whitelist(_:)"},"metadata":{"symbolKind":"method","externalID":"s:10Attributes22ValidationPushProtocolPAASy5ValueRpzrlE9whitelisty0C9ValidatorQzShySSGF::SYNTHESIZED::s:10Attributes17OptionalValidatorV","modules":[{"name":"Attributes"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"whitelist"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"extendedModule":"Attributes","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"whitelist(_:)","roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/ValidationPushProtocol-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whitelist","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"list","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"A new validator that verifies that a given string exist within "},{"type":"codeVoice","code":"list"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The list of permissible words.","type":"text"}]}],"name":"list"}]}],"abstract":[{"type":"text","text":"Creates a new validator that ensures a given string exist within a list of allowed"},{"type":"text","text":" "},{"type":"text","text":"words."}],"kind":"symbol","references":{"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/ValidationPushProtocol-Implementations":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/ValidationPushProtocol-Implementations","abstract":[],"title":"ValidationPushProtocol Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/attributes\/optionalvalidator\/validationpushprotocol-implementations"},"doc://Attributes/documentation/Attributes/OptionalValidator/whitelist(_:)":{"type":"topic","abstract":[{"text":"Creates a new validator that ensures a given string exist within a list of allowed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"words."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/whitelist(_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whitelist"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator\/whitelist(_:)","title":"whitelist(_:)","role":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"}}}