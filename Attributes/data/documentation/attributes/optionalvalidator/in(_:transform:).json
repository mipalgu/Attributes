{"metadata":{"extendedModule":"Attributes","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","externalID":"s:10Attributes22ValidationPushProtocolPAASQ5ValueRpzrlE2in_9transform0C9ValidatorQzqd___qd_1_qd_0_ctAA012ReadOnlyPathD0Rd__STRd_0_ADQyd__Rsd_0_STRd_1_4RootQyd__ALRtz7ElementQyd_1_AERSr1_lF::SYNTHESIZED::s:10Attributes17OptionalValidatorV","symbolKind":"method","title":"in(_:transform:)","modules":[{"name":"Attributes"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`in`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S2","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"S2"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/optionalvalidator\/in(_:transform:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/in(_:transform:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`in`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S2"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"p"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"S2"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"ReadOnlyPathProtocol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","preciseIdentifier":"s:10Attributes20ReadOnlyPathProtocolP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sequence","preciseIdentifier":"s:ST","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sequence","preciseIdentifier":"s:ST","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"S2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"}]}]},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A new validator that performs a validation function validating that a specific value exists","type":"text"},{"text":" ","type":"text"},{"text":"in the transformed sequence.","type":"text"}]}],"kind":"content"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A path to the sequence to transform."}]}],"name":"p"},{"content":[{"inlineContent":[{"type":"text","text":"The transformation function that transforms the sequence pointed to by "},{"type":"codeVoice","code":"p"},{"type":"text","text":" "},{"type":"text","text":"into a new sequence."}],"type":"paragraph"}],"name":"transform"}]}],"abstract":[{"type":"text","text":"Satisfies a validation if a sequence pointed to by a path "},{"code":"p","type":"codeVoice"},{"type":"text","text":" contains a given value when"},{"type":"text","text":" "},{"type":"text","text":"transformed by function "},{"code":"transform","type":"codeVoice"},{"type":"text","text":". This method transforms a sequence pointed to by "},{"code":"p","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and passes a validation if a value is within the new transformed sequence."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/ValidationPushProtocol-Implementations"]]},"references":{"doc://Attributes/documentation/Attributes/OptionalValidator/ValidationPushProtocol-Implementations":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/ValidationPushProtocol-Implementations","abstract":[],"title":"ValidationPushProtocol Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/attributes\/optionalvalidator\/validationpushprotocol-implementations"},"doc://Attributes/documentation/Attributes/OptionalValidator/in(_:transform:)":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/in(_:transform:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`in`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S2"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"S2"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","title":"in(_:transform:)","url":"\/documentation\/attributes\/optionalvalidator\/in(_:transform:)","abstract":[{"type":"text","text":"Satisfies a validation if a sequence pointed to by a path "},{"type":"codeVoice","code":"p"},{"type":"text","text":" contains a given value when"},{"type":"text","text":" "},{"text":"transformed by function ","type":"text"},{"type":"codeVoice","code":"transform"},{"text":". This method transforms a sequence pointed to by ","type":"text"},{"type":"codeVoice","code":"p"},{"text":" ","type":"text"},{"text":"and passes a validation if a value is within the new transformed sequence.","type":"text"}]},"doc://Attributes/documentation/Attributes/ReadOnlyPathProtocol":{"kind":"symbol","url":"\/documentation\/attributes\/readonlypathprotocol","title":"ReadOnlyPathProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadOnlyPathProtocol","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ReadOnlyPathProtocol","type":"topic","abstract":[{"text":"Path to a value that can only be read and never mutated.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ReadOnlyPathProtocol","kind":"identifier"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"}}}