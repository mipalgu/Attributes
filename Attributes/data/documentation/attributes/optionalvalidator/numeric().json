{"kind":"symbol","abstract":[{"type":"text","text":"All characters within a string must be numeric (0-9)."}],"sections":[],"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/numeric()","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"extendedModule":"Attributes","modules":[{"name":"Attributes"}],"externalID":"s:10Attributes22ValidationPushProtocolPAASy5ValueRpzrlE7numeric0C9ValidatorQzyF::SYNTHESIZED::s:10Attributes17OptionalValidatorV","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"numeric","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"title":"numeric()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"numeric"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A new validator that ensures all characters within a string are numeric.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"aside","content":[{"inlineContent":[{"text":"Empty strings will pass validation.","type":"text"}],"type":"paragraph"}],"name":"Note","style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/optionalvalidator\/numeric()"]}],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/ValidationPushProtocol-Implementations"]]},"references":{"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/ValidationPushProtocol-Implementations":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/ValidationPushProtocol-Implementations","abstract":[],"title":"ValidationPushProtocol Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/attributes\/optionalvalidator\/validationpushprotocol-implementations"},"doc://Attributes/documentation/Attributes/OptionalValidator/numeric()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"numeric"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}]},"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/numeric()","url":"\/documentation\/attributes\/optionalvalidator\/numeric()","role":"symbol","title":"numeric()","kind":"symbol","type":"topic","abstract":[{"text":"All characters within a string must be numeric (0-9).","type":"text"}]},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"}}}