{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"equalsFalse"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"A new validator that passes when a given boolean value is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"false"}]},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"metadata":{"modules":[{"name":"Attributes"}],"roleHeading":"Instance Method","title":"equalsFalse()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"equalsFalse"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","externalID":"s:10Attributes22ValidationPushProtocolPAASb5ValueRtzrlE11equalsFalse0C9ValidatorQzyF::SYNTHESIZED::s:10Attributes17OptionalValidatorV","extendedModule":"Attributes"},"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/ValidationPushProtocol-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/equalsFalse()"},"abstract":[{"text":"Satisfies a validation when the given value is ","type":"text"},{"inlineContent":[{"type":"text","text":"false"}],"type":"emphasis"},{"text":".","type":"text"}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/attributes\/optionalvalidator\/equalsfalse()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Attributes/documentation/Attributes/OptionalValidator/ValidationPushProtocol-Implementations":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/ValidationPushProtocol-Implementations","abstract":[],"title":"ValidationPushProtocol Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/attributes\/optionalvalidator\/validationpushprotocol-implementations"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/equalsFalse()":{"url":"\/documentation\/attributes\/optionalvalidator\/equalsfalse()","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/equalsFalse()","abstract":[{"text":"Satisfies a validation when the given value is ","type":"text"},{"inlineContent":[{"type":"text","text":"false"}],"type":"emphasis"},{"text":".","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":"equalsFalse()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"equalsFalse"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"role":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"}}}