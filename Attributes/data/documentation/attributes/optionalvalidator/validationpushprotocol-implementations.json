{"metadata":{"role":"collectionGroup","title":"ValidationPushProtocol Implementations","modules":[{"name":"Attributes"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/ValidationPushProtocol-Implementations"},"sections":[],"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator"]]},"topicSections":[{"identifiers":["doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alpha()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alphadash()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alphafirst()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alphanumeric()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alphaunderscore()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alphaunderscorefirst()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/between(min:max:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/blacklist(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/empty()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/equals(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/equalsFalse()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/equalsTrue()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/greaterThan(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/greaterThanEqual(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/greyList(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/if(_:then:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/if(_:then:else:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/in(_:)-1frgp","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/in(_:)-29u9o","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/in(_:)-87uwn","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/in(_:transform:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/length(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/lessThan(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/lessThanEqual(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/maxLength(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/minLength(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/notEmpty()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/notEquals(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/numeric()","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/unique(_:)","doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/whitelist(_:)"],"title":"Instance Methods","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/optionalvalidator\/validationpushprotocol-implementations"]}],"references":{"doc://Attributes/documentation/Attributes/OptionalValidator/notEquals(_:)":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/notEquals(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"notEquals","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"notEquals(_:)","url":"\/documentation\/attributes\/optionalvalidator\/notequals(_:)","abstract":[{"text":"Satisfies a validation function when a given value is not equal to a specific value.","type":"text"}]},"doc://Attributes/documentation/Attributes/OptionalValidator":{"title":"OptionalValidator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalValidator"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator","navigatorTitle":[{"kind":"identifier","text":"OptionalValidator"}],"role":"symbol","type":"topic","abstract":[{"text":"Validator that performs validation only when the value is not nil. A nil value does not throw","type":"text"},{"text":" ","type":"text"},{"text":"any errors during a validation. For a validator that throws errors for nil values, see","type":"text"},{"text":" ","type":"text"},{"code":"RequiredValidator","type":"codeVoice"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator"},"doc://Attributes/documentation/Attributes/OptionalValidator/in(_:transform:)":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/in(_:transform:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`in`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S2"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"S2"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","title":"in(_:transform:)","url":"\/documentation\/attributes\/optionalvalidator\/in(_:transform:)","abstract":[{"type":"text","text":"Satisfies a validation if a sequence pointed to by a path "},{"type":"codeVoice","code":"p"},{"type":"text","text":" contains a given value when"},{"type":"text","text":" "},{"text":"transformed by function ","type":"text"},{"type":"codeVoice","code":"transform"},{"text":". This method transforms a sequence pointed to by ","type":"text"},{"type":"codeVoice","code":"p"},{"text":" ","type":"text"},{"text":"and passes a validation if a value is within the new transformed sequence.","type":"text"}]},"doc://Attributes/documentation/Attributes/OptionalValidator/lessThanEqual(_:)":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/lessThanEqual(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lessThanEqual"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"role":"symbol","title":"lessThanEqual(_:)","url":"\/documentation\/attributes\/optionalvalidator\/lessthanequal(_:)","abstract":[{"type":"text","text":"Satisfies a validation when a given value is less than or equal to a specific value."}]},"doc://Attributes/documentation/Attributes/OptionalValidator/equals(_:)":{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/equals(_:)","role":"symbol","title":"equals(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"equals","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator\/equals(_:)","abstract":[{"type":"text","text":"Satisfies a validation function when a given value is equal to a specific value."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"type":"topic"},"doc://Attributes/documentation/Attributes/OptionalValidator/between(min:max:)":{"type":"topic","title":"between(min:max:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/between(min:max:)","url":"\/documentation\/attributes\/optionalvalidator\/between(min:max:)","abstract":[{"text":"Satisfies a validation when a given value is between a minimum and maximum value","type":"text"},{"text":" ","type":"text"},{"text":"inclusively.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"between","kind":"identifier"},{"text":"(","kind":"text"},{"text":"min","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"role":"symbol","kind":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/minLength(_:)":{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/minLength(_:)","url":"\/documentation\/attributes\/optionalvalidator\/minlength(_:)","title":"minLength(_:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Performs a validation that verifies the given collection has at least ","type":"text"},{"code":"length","type":"codeVoice"},{"text":" elements.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"minLength"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}]}},"doc://Attributes/documentation/Attributes/OptionalValidator/in(_:)-29u9o":{"kind":"symbol","abstract":[{"type":"text","text":"Satisfies a validation if a value is within a sequence specified by a path."}],"url":"\/documentation\/attributes\/optionalvalidator\/in(_:)-29u9o","title":"in(_:)","type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/in(_:)-29u9o","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`in`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}]},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/equalsTrue()":{"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/equalsTrue()","title":"equalsTrue()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"equalsTrue"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"PushValidator","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Satisfies a validation when the given value is "},{"inlineContent":[{"text":"true","type":"text"}],"type":"emphasis"},{"type":"text","text":"."}],"url":"\/documentation\/attributes\/optionalvalidator\/equalstrue()"},"doc://Attributes/documentation/Attributes/OptionalValidator/equalsFalse()":{"url":"\/documentation\/attributes\/optionalvalidator\/equalsfalse()","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/equalsFalse()","abstract":[{"text":"Satisfies a validation when the given value is ","type":"text"},{"inlineContent":[{"type":"text","text":"false"}],"type":"emphasis"},{"text":".","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":"equalsFalse()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"equalsFalse"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"role":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/alphanumeric()":{"url":"\/documentation\/attributes\/optionalvalidator\/alphanumeric()","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alphanumeric()","abstract":[{"text":"All characters within a string must either be alphabetic (a-z, A-Z) or numeric (0-9).","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"StringProtocol","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","title":"alphanumeric()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphanumeric"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"role":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/alphaunderscore()":{"kind":"symbol","abstract":[{"type":"text","text":"All characters within a string must be alphabetic (a-z, A-Z), numeric (0-9), or underscores (_)."}],"url":"\/documentation\/attributes\/optionalvalidator\/alphaunderscore()","title":"alphaunderscore()","type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alphaunderscore()","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alphaunderscore","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}]},"doc://Attributes/documentation/Attributes/OptionalValidator/alphafirst()":{"url":"\/documentation\/attributes\/optionalvalidator\/alphafirst()","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alphafirst()","abstract":[{"text":"The first character in a string must be alphabetic (a-z, A-Z).","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}]},"type":"topic","title":"alphafirst()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphafirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"role":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/blacklist(_:)":{"url":"\/documentation\/attributes\/optionalvalidator\/blacklist(_:)","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/blacklist(_:)","abstract":[{"text":"Creates a new validator that checks whether a given string matches a banned word. If","type":"text"},{"text":" ","type":"text"},{"text":"the string matches the banned word, then the validation will fail.","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":"blacklist(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"blacklist"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"role":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/in(_:)-87uwn":{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/in(_:)-87uwn","type":"topic","url":"\/documentation\/attributes\/optionalvalidator\/in(_:)-87uwn","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`in`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Satisfies a validation function when a value exists within a given set.","type":"text"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"in(_:)"},"doc://Attributes/documentation/Attributes/OptionalValidator/unique(_:)":{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/unique(_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unique"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"title":"unique(_:)","abstract":[{"type":"text","text":"Creates a validator that checks that a transformed sequence contains unique elements, i.e. no"},{"type":"text","text":" "},{"type":"text","text":"duplicate elements."}],"role":"symbol","url":"\/documentation\/attributes\/optionalvalidator\/unique(_:)","type":"topic","kind":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/maxLength(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxLength"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Performs a validation that verifies a given collection has at most "},{"code":"length","type":"codeVoice"},{"type":"text","text":" elements."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/maxLength(_:)","title":"maxLength(_:)","url":"\/documentation\/attributes\/optionalvalidator\/maxlength(_:)","role":"symbol","kind":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/greaterThanEqual(_:)":{"abstract":[{"type":"text","text":"Satisfies a validation when a given value is greater than or equal to a specific value."}],"url":"\/documentation\/attributes\/optionalvalidator\/greaterthanequal(_:)","type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/greaterThanEqual(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"greaterThanEqual"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"greaterThanEqual(_:)","kind":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/lessThan(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lessThan","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}]},"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/lessThan(_:)","title":"lessThan(_:)","url":"\/documentation\/attributes\/optionalvalidator\/lessthan(_:)","abstract":[{"type":"text","text":"Satisfies a validation when a given value is less than a specific value."}],"type":"topic"},"doc://Attributes/documentation/Attributes/OptionalValidator/if(_:then:)":{"abstract":[{"type":"text","text":"Perform some validation function given that a precondition is met."}],"url":"\/documentation\/attributes\/optionalvalidator\/if(_:then:)","type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/if(_:then:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`if`"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier","text":"AnyValidator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"role":"symbol","title":"if(_:then:)","kind":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/alphadash()":{"type":"topic","abstract":[{"text":"All characters must be alphabetic (a-z, A-Z), numeric (0-9), underscores (_) or dashes (-).","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alphadash()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphadash"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator\/alphadash()","title":"alphadash()","role":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/length(_:)":{"role":"symbol","url":"\/documentation\/attributes\/optionalvalidator\/length(_:)","title":"length(_:)","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/length(_:)","abstract":[{"text":"Performs a validation that ensure a given collection has ","type":"text"},{"code":"length","type":"codeVoice"},{"text":" elements.","type":"text"}],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"length"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"type":"topic"},"doc://Attributes/documentation/Attributes/OptionalValidator/empty()":{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/empty()","kind":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","abstract":[{"text":"Performs a validation that ensures that a given collection is empty.","type":"text"}],"type":"topic","title":"empty()","url":"\/documentation\/attributes\/optionalvalidator\/empty()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"PushValidator"}]},"doc://Attributes/documentation/Attributes/OptionalValidator/in(_:)-1frgp":{"type":"topic","abstract":[{"text":"Satisfies a validation if a value is within a sequence specified by a path.","type":"text"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/in(_:)-1frgp","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`in`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator\/in(_:)-1frgp","title":"in(_:)","role":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/whitelist(_:)":{"type":"topic","abstract":[{"text":"Creates a new validator that ensures a given string exist within a list of allowed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"words."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/whitelist(_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whitelist"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator\/whitelist(_:)","title":"whitelist(_:)","role":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/greyList(_:)":{"type":"topic","url":"\/documentation\/attributes\/optionalvalidator\/greylist(_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}]},"abstract":[{"text":"Verifies that a given string contain a substring that exists within a list of permissible","type":"text"},{"text":" ","type":"text"},{"text":"words.","type":"text"}],"kind":"symbol","title":"greyList(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"greyList","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/greyList(_:)"},"doc://Attributes/documentation/Attributes/OptionalValidator/alpha()":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alpha()","abstract":[{"text":"All characters must be alphabetic (a-z, A-Z).","type":"text"}],"title":"alpha()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alpha","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator\/alpha()"},"doc://Attributes/documentation/Attributes/OptionalValidator/alphaunderscorefirst()":{"abstract":[{"type":"text","text":"The first character in a given string must be alphabetic (a-z, A-Z) or an underscore (_)."}],"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/alphaunderscorefirst()","title":"alphaunderscorefirst()","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphaunderscorefirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator\/alphaunderscorefirst()"},"doc://Attributes/documentation/Attributes/OptionalValidator/greaterThan(_:)":{"type":"topic","abstract":[{"type":"text","text":"Satisfies a validation when a given value is greater than a specific value."}],"kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/greaterThan(_:)","title":"greaterThan(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"greaterThan","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/attributes\/optionalvalidator\/greaterthan(_:)","role":"symbol"},"doc://Attributes/documentation/Attributes/OptionalValidator/notEmpty()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"notEmpty"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/notEmpty()","title":"notEmpty()","url":"\/documentation\/attributes\/optionalvalidator\/notempty()","role":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Performs a validation that ensures a given collection is not empty.","type":"text"}]},"doc://Attributes/documentation/Attributes/OptionalValidator/numeric()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"numeric"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}]},"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/numeric()","url":"\/documentation\/attributes\/optionalvalidator\/numeric()","role":"symbol","title":"numeric()","kind":"symbol","type":"topic","abstract":[{"text":"All characters within a string must be numeric (0-9).","type":"text"}]},"doc://Attributes/documentation/Attributes/OptionalValidator/if(_:then:else:)":{"abstract":[{"type":"text","text":"Perform some validation function "},{"code":"builder1","type":"codeVoice"},{"type":"text","text":" provided that a precondition is met, otherwise"},{"type":"text","text":" "},{"type":"text","text":"perform a different validation function "},{"code":"builder2","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/OptionalValidator\/if(_:then:else:)","title":"if(_:then:else:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`if`"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier","text":"AnyValidator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"else"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier","text":"AnyValidator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"kind":"symbol","url":"\/documentation\/attributes\/optionalvalidator\/if(_:then:else:)"}}}