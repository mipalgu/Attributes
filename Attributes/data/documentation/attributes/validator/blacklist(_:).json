{"abstract":[{"text":"Creates a new validator that checks whether a given string matches a banned word. If","type":"text"},{"text":" ","type":"text"},{"text":"the string matches the banned word, then the validation will fail.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"blacklist"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"list"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new validator that ensures a given string is not equal to a banned word"},{"type":"text","text":" "},{"type":"text","text":"contained within "},{"type":"codeVoice","code":"list"},{"type":"text","text":"."}]}],"kind":"content"},{"parameters":[{"name":"list","content":[{"inlineContent":[{"text":"The list of banned words.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","extendedModule":"Attributes","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"blacklist","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"externalID":"s:10Attributes22ValidationPushProtocolPAASy5ValueRpzrlE9blacklisty0C9ValidatorQzShySSGF::SYNTHESIZED::s:10Attributes9ValidatorV","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"blacklist(_:)","modules":[{"name":"Attributes"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/blacklist(_:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/Validator","doc:\/\/Attributes\/documentation\/Attributes\/Validator\/ValidationPushProtocol-Implementations"]]},"variants":[{"paths":["\/documentation\/attributes\/validator\/blacklist(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://Attributes/documentation/Attributes/Validator/ValidationPushProtocol-Implementations":{"abstract":[],"url":"\/documentation\/attributes\/validator\/validationpushprotocol-implementations","type":"topic","title":"ValidationPushProtocol Implementations","role":"collectionGroup","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/ValidationPushProtocol-Implementations","kind":"article"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/Validator":{"abstract":[{"text":"Container for storing validation functions for values specified with a Path.","type":"text"}],"url":"\/documentation\/attributes\/validator","type":"topic","title":"Validator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/Validator/blacklist(_:)":{"abstract":[{"text":"Creates a new validator that checks whether a given string matches a banned word. If","type":"text"},{"text":" ","type":"text"},{"text":"the string matches the banned word, then the validation will fail.","type":"text"}],"url":"\/documentation\/attributes\/validator\/blacklist(_:)","type":"topic","title":"blacklist(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"StringProtocol","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"blacklist","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/blacklist(_:)","kind":"symbol"}}}