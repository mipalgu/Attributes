{"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`if`"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"condition"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"builder1","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","preciseIdentifier":"s:10Attributes12AnyValidatorV","text":"AnyValidator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"builder2","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","preciseIdentifier":"s:10Attributes12AnyValidatorV","text":"AnyValidator","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new validator that performs the validation function "},{"code":"builder1","type":"codeVoice"},{"type":"text","text":" when "},{"code":"condition","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"is true, or "},{"code":"builder2","type":"codeVoice"},{"type":"text","text":" otherwise."}]}],"kind":"content"},{"parameters":[{"name":"condition","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The condition that determins whether "},{"type":"codeVoice","code":"builder1"},{"type":"text","text":" or "},{"type":"codeVoice","code":"builder2"},{"type":"text","text":" is executed."}]}]},{"name":"builder1","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The validation function that is executed when "},{"code":"condition","type":"codeVoice"},{"type":"text","text":" is true."}]}]},{"name":"builder2","content":[{"inlineContent":[{"type":"text","text":"The validation function that is executed when "},{"type":"codeVoice","code":"condition"},{"type":"text","text":" is false."}],"type":"paragraph"}]}],"kind":"parameters"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/validator\/if(_:then:else:)"]}],"abstract":[{"text":"Perform some validation function ","type":"text"},{"code":"builder1","type":"codeVoice"},{"text":" provided that a precondition is met, otherwise","type":"text"},{"text":" ","type":"text"},{"text":"perform a different validation function ","type":"text"},{"code":"builder2","type":"codeVoice"},{"text":".","type":"text"}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/if(_:then:else:)"},"metadata":{"modules":[{"name":"Attributes"}],"symbolKind":"method","title":"if(_:then:else:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`if`","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier","text":"AnyValidator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"else"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Attributes12AnyValidatorV","text":"AnyValidator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"roleHeading":"Instance Method","extendedModule":"Attributes","externalID":"s:10Attributes22ValidationPushProtocolPAAE2if_4then4else0C9ValidatorQzSb5ValueQzc_AA03AnyH0Vy4RootQzGycAOyctF::SYNTHESIZED::s:10Attributes9ValidatorV","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/Validator","doc:\/\/Attributes\/documentation\/Attributes\/Validator\/ValidationPushProtocol-Implementations"]]},"references":{"doc://Attributes/documentation/Attributes/Validator/ValidationPushProtocol-Implementations":{"abstract":[],"url":"\/documentation\/attributes\/validator\/validationpushprotocol-implementations","type":"topic","title":"ValidationPushProtocol Implementations","role":"collectionGroup","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/ValidationPushProtocol-Implementations","kind":"article"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/Validator/if(_:then:else:)":{"abstract":[{"text":"Perform some validation function ","type":"text"},{"type":"codeVoice","code":"builder1"},{"text":" provided that a precondition is met, otherwise","type":"text"},{"text":" ","type":"text"},{"text":"perform a different validation function ","type":"text"},{"code":"builder2","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","title":"if(_:then:else:)","role":"symbol","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/if(_:then:else:)","type":"topic","url":"\/documentation\/attributes\/validator\/if(_:then:else:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`if`"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"AnyValidator","preciseIdentifier":"s:10Attributes12AnyValidatorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"else"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Attributes12AnyValidatorV","text":"AnyValidator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}]},"doc://Attributes/documentation/Attributes/Validator":{"abstract":[{"text":"Container for storing validation functions for values specified with a Path.","type":"text"}],"url":"\/documentation\/attributes\/validator","type":"topic","title":"Validator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/AnyValidator":{"kind":"symbol","url":"\/documentation\/attributes\/anyvalidator","title":"AnyValidator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValidator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/AnyValidator","type":"topic","abstract":[{"text":"A type-erased validator.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyValidator","kind":"identifier"}]}}}