{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"PushValidator","kind":"typeIdentifier"}],"role":"symbol","title":"empty()","roleHeading":"Instance Method","extendedModule":"Attributes","symbolKind":"method","externalID":"s:10Attributes22ValidationPushProtocolPAASl5ValueRpzrlE5empty0C9ValidatorQzyF::SYNTHESIZED::s:10Attributes9ValidatorV","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"Attributes"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/empty()","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/attributes\/validator\/empty()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new validator that checks whether a given collection is empty. A non-empty collection"},{"type":"text","text":" "},{"type":"text","text":"will throw an error."}]}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/Validator","doc:\/\/Attributes\/documentation\/Attributes\/Validator\/ValidationPushProtocol-Implementations"]]},"abstract":[{"type":"text","text":"Performs a validation that ensures that a given collection is empty."}],"references":{"doc://Attributes/documentation/Attributes/Validator/empty()":{"title":"empty()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/empty()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"empty","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/attributes\/validator\/empty()","kind":"symbol","abstract":[{"type":"text","text":"Performs a validation that ensures that a given collection is empty."}]},"doc://Attributes/documentation/Attributes/Validator":{"abstract":[{"text":"Container for storing validation functions for values specified with a Path.","type":"text"}],"url":"\/documentation\/attributes\/validator","type":"topic","title":"Validator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/Validator/ValidationPushProtocol-Implementations":{"abstract":[],"url":"\/documentation\/attributes\/validator\/validationpushprotocol-implementations","type":"topic","title":"ValidationPushProtocol Implementations","role":"collectionGroup","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/ValidationPushProtocol-Implementations","kind":"article"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"}}}