{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/alphanumeric()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"All characters within a string must either be alphabetic (a-z, A-Z) or numeric (0-9)."}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/Validator","doc:\/\/Attributes\/documentation\/Attributes\/Validator\/ValidationPushProtocol-Implementations"]]},"variants":[{"paths":["\/documentation\/attributes\/validator\/alphanumeric()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Attributes"}],"title":"alphanumeric()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphanumeric"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}],"externalID":"s:10Attributes22ValidationPushProtocolPAASy5ValueRpzrlE12alphanumeric0C9ValidatorQzyF::SYNTHESIZED::s:10Attributes9ValidatorV","extendedModule":"Attributes","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}]},"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"alphanumeric","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A new validator that verifies that a string contains only alphabetic or","type":"text"},{"text":" ","type":"text"},{"text":"numeric characters.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Empty strings will pass validation."}]}],"style":"note"}]}],"references":{"doc://Attributes/documentation/Attributes/Validator/ValidationPushProtocol-Implementations":{"abstract":[],"url":"\/documentation\/attributes\/validator\/validationpushprotocol-implementations","type":"topic","title":"ValidationPushProtocol Implementations","role":"collectionGroup","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/ValidationPushProtocol-Implementations","kind":"article"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/Validator":{"abstract":[{"text":"Container for storing validation functions for values specified with a Path.","type":"text"}],"url":"\/documentation\/attributes\/validator","type":"topic","title":"Validator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Validator","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator","navigatorTitle":[{"text":"Validator","kind":"identifier"}],"kind":"symbol"},"doc://Attributes/documentation/Attributes/Validator/alphanumeric()":{"abstract":[{"type":"text","text":"All characters within a string must either be alphabetic (a-z, A-Z) or numeric (0-9)."}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/Validator\/alphanumeric()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","url":"\/documentation\/attributes\/validator\/alphanumeric()","title":"alphanumeric()","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alphanumeric"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}]}}}