{"sections":[],"hierarchy":{"paths":[["doc:\/\/Attributes\/documentation\/Attributes","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPath","doc:\/\/Attributes\/documentation\/Attributes\/ValidationPath\/ValidationPushProtocol-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/attributes\/validationpath\/numeric()"]}],"metadata":{"modules":[{"name":"Attributes"}],"externalID":"s:10Attributes22ValidationPushProtocolPAASy5ValueRpzrlE7numeric0C9ValidatorQzyF::SYNTHESIZED::s:10Attributes14ValidationPathV","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}]},"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"numeric"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"extendedModule":"Attributes","role":"symbol","title":"numeric()","symbolKind":"method"},"abstract":[{"text":"All characters within a string must be numeric (0-9).","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"numeric"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"PushValidator"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A new validator that ensures all characters within a string are numeric.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Empty strings will pass validation."}]}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPath\/numeric()"},"kind":"symbol","references":{"doc://Attributes/documentation/Attributes/ValidationPath":{"kind":"symbol","url":"\/documentation\/attributes\/validationpath","title":"ValidationPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValidationPath","kind":"identifier"}],"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPath","type":"topic","abstract":[{"text":"Path to a value containing validation rules.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ValidationPath","kind":"identifier"}]},"doc://Attributes/documentation/Attributes/ValidationPath/numeric()":{"url":"\/documentation\/attributes\/validationpath\/numeric()","role":"symbol","abstract":[{"text":"All characters within a string must be numeric (0-9).","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"numeric","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"PushValidator","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPath\/numeric()","kind":"symbol","type":"topic","title":"numeric()"},"doc://Attributes/documentation/Attributes":{"abstract":[{"text":"A swift abstraction for defining types of data commonly rendered within a Graphical User Interface (GUI). This package provides","type":"text"},{"text":" ","type":"text"},{"text":"the means to define, validate, and relate different forms of data.","type":"text"}],"url":"\/documentation\/attributes","type":"topic","title":"Attributes","role":"collection","identifier":"doc:\/\/Attributes\/documentation\/Attributes","kind":"symbol"},"doc://Attributes/documentation/Attributes/ValidationPath/ValidationPushProtocol-Implementations":{"type":"topic","identifier":"doc:\/\/Attributes\/documentation\/Attributes\/ValidationPath\/ValidationPushProtocol-Implementations","abstract":[],"title":"ValidationPushProtocol Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/attributes\/validationpath\/validationpushprotocol-implementations"}}}